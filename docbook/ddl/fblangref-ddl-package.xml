<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="ru"
    xml:id="fblangref-ddl-package">
    <info>
        <title>PACKAGE</title>
        <keywordset>
            <keyword>PACKAGE</keyword>
        </keywordset>
    </info>
    <para>Пакет — группа процедур и функций, которая представляет собой один объект базы данных. </para>
    <para>Пакеты Firebird состоят из двух частей: заголовка (ключевое слово PACKAGE) и тела
        (ключевые слова PACKAGE BODY). Такое разделение очень сильно напоминает модули Delphi,
        заголовок соответствует интерфейсной части, а тело — части реализации.</para>
    <para>Сначала создаётся заголовок (CREATE PACKAGE), а затем — тело (CREATE PACKAGE BODY).</para>
    <section xml:id="fblangref-ddl-package-header">
        <info>
            <title>PACKAGE</title>
            <keywordset>
                <keyword>PACKAGE</keyword>
            </keywordset>
        </info>
        <section xml:id="fblangref-ddl-package-create">
            <info>
                <title>CREATE PACKAGE</title>
                <keywordset>
                    <keyword>CREATE PACKAGE</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>CREATE PACKAGE</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Создание заголовка пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CREATE PACKAGE <replaceable>package_name</replaceable>  
[<replaceable>&lt;rights clause&gt;</replaceable>]                            
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
END

<replaceable>&lt;rights clause&gt;</replaceable> ::=
  SQL SECURITY {DEFINER | INVOKER}  

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]   
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                           

<replaceable>&lt;in_params&gt;</replaceable> ::= <replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...]

<replaceable>&lt;inparam&gt;</replaceable> ::= <replaceable>&lt;param_decl&gt;</replaceable> [{= | DEFAULT} <replaceable>&lt;value&gt;</replaceable>]  
                                                        
<replaceable>&lt;value&gt;</replaceable> ::=  {<replaceable>literal</replaceable> | NULL | <replaceable>context_var</replaceable>} 

<replaceable>&lt;out_params&gt;</replaceable> ::= <replaceable>&lt;outparam&gt;</replaceable> [, <replaceable>&lt;outparam&gt;</replaceable> ...]

<replaceable>&lt;outparam&gt;</replaceable>  ::=  <replaceable>&lt;param_decl&gt;</replaceable> 
                    
<replaceable>&lt;param_decl&gt;</replaceable> ::= <replaceable>paramname</replaceable> <replaceable>&lt;type&gt;</replaceable> [NOT NULL] [COLLATE <replaceable>collation</replaceable>]

<replaceable>&lt;type&gt;</replaceable> ::= <replaceable>&lt;datatype&gt;</replaceable> | [TYPE OF] <replaceable>domain_name</replaceable> | TYPE OF COLUMN <replaceable>rel</replaceable>.<replaceable>col</replaceable> 
                    
<replaceable>&lt;datatype&gt;</replaceable> ::= 
    <replaceable>&lt;scalar_datatype&gt;</replaceable> | <replaceable>&lt;blob_datatype&gt;</replaceable> | <replaceable>&lt;array_datatype&gt;</replaceable>                   
                    
<replaceable>&lt;scalar_datatype&gt;</replaceable> ::=  <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-scalar">См. Синтаксис скалярных типов данных</link>
                    
<replaceable>&lt;blob_datatype&gt;</replaceable> ::= <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-blob">См. Синтаксис типа данных BLOB</link>          
                    
<replaceable>&lt;array_datatype&gt;</replaceable> ::= <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-array">См. Синтаксис массивов</link>   
                                 
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <title>Параметры оператора CREATE PACKAGE</title>
                    <?dbfo keep-together='auto'?>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <replaceable>package_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя пакета. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>function_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление функции.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>procedure_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление процедуры.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>proc_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя процедуры. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>func_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя функции. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>inparam</replaceable>
                                </entry>
                                <entry>
                                    <para>Описание входного параметра.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>outparam</replaceable>
                                </entry>
                                <entry>
                                    <para>Описание выходного параметра.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>literal</replaceable>
                                </entry>
                                <entry>
                                    <para>Литерал, совместимый по типу с параметром.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>context_var</replaceable>
                                </entry>
                                <entry>
                                    <para>Любая контекстная переменная, тип которой совместим с
                                        типом параметра. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>paramname</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя входного или выходного параметра процедуры/функции.
                                        Может содержать до 63 символов. Имя параметра должно быть
                                        уникальным среди входных и  выходных параметров
                                        процедуры/функции, а также её локальных переменных. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>datatype</replaceable>
                                </entry>
                                <entry>
                                    <para>Тип данных SQL. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>collation</replaceable>
                                </entry>
                                <entry>
                                    <para>Порядок сортировки.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>domain_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя домена. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>rel</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя таблицы или представления.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>col</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя столбца таблицы или представления. </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <para>Оператор CREATE PACKAGE создаёт новый заголовок пакета. Имя пакета должно быть
                уникальным среди имён всех пакетов.</para>
            <para>Процедуры и функции, объявленные в заголовке пакета, доступны вне тела пакета
                через полный идентификатор имён процедур и функций
                    (<replaceable>package_name</replaceable>.<replaceable>procedure_name</replaceable>
                и <replaceable>package_name</replaceable>.<replaceable>function_name</replaceable>).
                Процедуры и функции, определенные в теле пакета, но не объявленные в заголовке
                пакета, не видны вне тела пакета.</para>
            <para>Имена процедур и функций, объявленные в заголовке пакета, должны быть уникальны
                среди имён процедур и функций, объявленных в заголовке и теле пакета.</para>
            <note>
                <para>Желательно чтобы имена хранимых процедур и функций пакета не пересекались с
                    именами хранимых процедур и функций из глобального пространства имен, хотя это и
                    допустимо. Дело в том, что в настоящее время вы не сможете вызвать
                    функцию/процедуру из глобального пространства имён внутри пакета, если в пакете
                    объявлена одноименная функция/процедура. В этом случае всегда будет вызвана
                    процедура/функция пакета. </para>
            </note>
            <section xml:id="fblangref-ddl-package-create-sql_security">
                <title>Привилегии выполнения</title>
                <indexterm>
                    <primary>CREATE PACKAGE</primary>
                    <secondary>SQL SECURITY</secondary>
                </indexterm>
                <para>Необязательное предложение SQL SECURITY позволяет задать с какими привилегиями
                    выполняется процедуры и функции пакета. Если выбрана опция INVOKER, то процедуры
                    и функции пакета выполняются с привилегиями вызывающего пользователя. Если
                    выбрана опция DEFINER, то процедуры и функции пакета выполняется с привилегиями
                    определяющего пользователя (владельца пакета). Эти привилегии будут дополнены
                    привилегиями выданные самому пакету с помощью оператора GRANT. По умолчанию
                    процедуры и функции пакета выполняются с привилегиями вызывающего пользователя.
                    Переопределять привилегии выполнения для процедур и функций пакета
                    запрещено.</para>
                <tip>
                    <para>Привилегии выполнения по умолчанию для вновь создаваемых объектов
                        метаданных можно изменить с помощью оператора
                        <programlisting>
ALTER DATABASE SET DEFAULT SQL SECURITY {DEFINER | INVOKER}
                </programlisting>
                    </para>
                </tip>
            </section>
            <section xml:id="fblangref-ddl-package-term">
                <title>Терминатор оператора</title>

                <para>Некоторые редакторы SQL-операторов — в частности утилита
                        <application>isql</application>, которая идёт в комплекте с Firebird, и
                    возможно некоторые сторонние редакторы — используют внутреннее соглашение,
                    которое требует, чтобы все операторы были завершены с точкой с запятой.</para>
                <para>Это создает конфликт с синтаксисом PSQL при кодировании в этих средах. Если вы
                    не знакомы с этой проблемой и её решением, пожалуйста, изучите детали в главе
                    PSQL в разделе, озаглавленном <link linkend="fblangref-psql-setterm">Изменение
                        терминатора в <application>isql</application></link>.</para>

            </section>
            <section xml:id="fblangref-ddl-package-create-params">
                <title>Параметры процедур и функций</title>
                <para>У каждого параметра указывается тип данных. Кроме того, для параметра можно
                    указать ограничение NOT NULL, тем самым запретив передавать в него значение
                    NULL.</para>
                <para>Для параметра строкового типа существует возможность задать порядок сортировки
                    с помощью предложения COLLATE.</para>

                <section xml:id="fblangref-ddl-package-create-params-in">
                    <title>Входные параметры</title>
                    <para>Входные параметры заключаются в скобки после имени хранимой процедуры. Они
                        передаются в процедуру по значению, то есть любые изменения входных
                        параметров внутри процедуры никак не повлияет на значения этих параметров в
                        вызывающей программе.</para>
                    <para>Входные параметры могут иметь значение по умолчанию. Параметры, для
                        которых заданы значения, должны располагаться в конце списка
                        параметров.</para>
                </section>

                <section xml:id="fblangref-ddl-package-create-params-out">
                    <title>Выходные параметры</title>
                    <para>Для хранимых процедур список выходных параметров задаётся в необязательное
                        предложение RETURNS.</para>
                    <para>Для хранимых функций в обязательном предложении RETURNS задаётся тип
                        возвращаемого значения.</para>
                </section>

                <section xml:id="fblangref-ddl-package-create-params-domain">
                    <title>Использование доменов при объявлении параметров</title>
                    <para>В качестве типа параметра можно указать имя домена. В этом случае параметр
                        будет наследовать все характеристики домена.</para>
                    <para>Если перед названием домена дополнительно используется предложение
                            <database>TYPE OF</database>, то используется только тип данных домена —
                        не проверяется (не используется) его ограничение (если оно есть в домене) на
                        NOT NULL, CHECK ограничения и/или значения по умолчанию. Если домен
                        текстового типа, то всегда используется его набор символов и порядок
                        сортировки.</para>
                </section>
                <section xml:id="fblangref-ddl-package-create-params-typeofcolumn">
                    <title>Использование типа столбца при объявлении параметров</title>
                    <para>Входные и выходные параметры можно объявлять, используя тип данных
                        столбцов существующих таблиц и представлений. Для этого используется
                        предложение <database>TYPE OF COLUMN</database>, после которого указывается
                        имя таблицы или представления и через точку имя столбца.</para>
                    <para>При использовании <database>TYPE OF COLUMN</database> наследуется только
                        тип данных, а в случае строковых типов ещё и набор символов, и порядок
                        сортировки. Ограничения и значения по умолчанию столбца никогда не
                        используются. </para>
                </section>
            </section>

            <section xml:id="fblangref-ddl-package-create-func-determ">
                <title>Детерминированные функции</title>
                <para>Необязательное предложение <database>DETERMINISTIC</database> в объявлении
                    функции указывает, что функция детерминированная. Детерминированные функции
                    каждый раз возвращают один и тот же результат, если предоставлять им один и тот
                    же набор входных значений. Недетерминированные функции могут возвращать каждый
                    раз разные результаты, даже если предоставлять им один и тот же набор входных
                    значений. Если для функции указано, что она является детерминированной, то такая
                    функция не вычисляется заново, если она уже была вычислена однажды с данным
                    набором входных аргументов, а берет свои значения из кэша метаданных (если они
                    там есть).</para>
                <note>
                    <para>На самом деле в текущей версии Firebird, не существует кэша хранимых
                        функций с маппингом входных аргументов на выходные значения.</para>
                    <para>Указание инструкции <database>DETERMINISTIC</database> на самом деле нечто
                        вроде <quote>обещания</quote>, что код функции будет возвращать одно и то
                        же. В данный момент детерминистическая функция считается инвариантом и
                        работает по тем же принципам, что и другие инварианты. Т.е. вычисляется и
                        кэшируется на уровне текущего выполнения данного запроса.</para>
                </note>
            </section>
            <section xml:id="fblangref-ddl-package-create-who">
                <title>Кто может создать пакет?</title>

                <para>Выполнить оператор <database>CREATE PACKAGE</database> могут: <itemizedlist
                        spacing="compact">
                        <listitem>
                            <para><link linkend="fblangref-security-administrators"
                                    >Администраторы</link></para>
                        </listitem>
                        <listitem>
                            <para>Пользователи с привилегией <database>CREATE PACKAGE</database>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>

                <para>Пользователь, создавший заголовок пакета становится владельцем пакета.</para>
            </section>
            <section xml:id="fblangref-ddl-package-create-examples">
                <title>Примеры</title>
                <example>
                    <title>Создание заголовка пакета </title>
                    <para>
                        <programlisting language="sql">
CREATE PACKAGE APP_VAR
AS
BEGIN
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC;
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC;
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE DEFAULT CURRENT_DATE);
END       
                </programlisting>
                    </para>
                    <para>То же самое, но процедуры и функции пакета будут выполняться с правами
                        определяющего пользователя (владельца пакета).
                        <programlisting language="sql">
CREATE PACKAGE APP_VAR
SQL SECURITY DEFINER
AS
BEGIN
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC;
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC;
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE DEFAULT CURRENT_DATE);
END       
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-body-create">CREATE PACKAGE
                        BODY</link>, <link linkend="fblangref-ddl-package-alter">ALTER
                            PACKAGE</link>, <link linkend="fblangref-ddl-package-drop">DROP
                            PACKAGE</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="fblangref-ddl-package-alter">
            <info>
                <title>ALTER PACKAGE</title>
                <keywordset>
                    <keyword>ALTER PACKAGE</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>ALTER PACKAGE</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Изменение заголовка пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
ALTER PACKAGE <replaceable>package_name</replaceable> 
[<replaceable>&lt;rights clause&gt;</replaceable>]                             
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]     
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                         
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Подробнее см.</title>

                <para>
                    <link linkend="fblangref-ddl-package-create">CREATE PACKAGE</link>. </para>
            </formalpara>

            <para>Оператор ALTER PACKAGE изменяет заголовок пакета. Позволяется изменять количество
                и состав процедур и функций, их входных и выходных параметров. При этом исходный код
                тела пакета сохраняется. Состояние соответствия тела пакета его заголовку
                отображается в столбце RDB$PACKAGES.RDB$VALID_BODY_FLAG.</para>
            <section xml:id="fblangref-ddl-package-alter-who">
                <title>Кто может изменить заголовок пакета?</title>

                <para>Выполнить оператор <database>ALTER PACKAGE</database> могут: <itemizedlist
                        spacing="compact">
                        <listitem>
                            <para><link linkend="fblangref-security-administrators"
                                    >Администраторы</link></para>
                        </listitem>
                        <listitem>
                            <para>Владелец пакета; </para>
                        </listitem>
                        <listitem>
                            <para>Пользователи с привилегией <database>ALTER ANY PACKAGE</database>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>

            </section>

            <section xml:id="fblangref-ddl-package-alter-examples">
                <title>Примеры</title>
                <example>
                    <title>Изменение заголовка пакета</title>
                    <para>
                        <programlisting language="sql">
ALTER PACKAGE APP_VAR
AS
BEGIN
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC;
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC;
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE DEFAULT CURRENT_DATE);
END       
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-alter">CREATE PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-drop">DROP PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-body-recreate">RECREATE PACKAGE
                            BODY</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="fblangref-ddl-package-createoralter">
            <info>
                <title>CREATE OR ALTER PACKAGE</title>
                <keywordset>
                    <keyword>CREATE OR ALTER PACKAGE</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>CREATE OR ALTER PACKAGE</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Создание нового или изменение существующего заголовка пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CREATE OR ALTER PACKAGE <replaceable>package_name</replaceable>  
[<replaceable>&lt;rights clause&gt;</replaceable>]                             
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]   
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)] 
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Подробнее см.</title>

                <para>
                    <link linkend="fblangref-ddl-package-create">CREATE PACKAGE</link>. </para>
            </formalpara>

            <para>Оператор CREATE OR ALTER PACKAGE создаёт новый или изменяет существующий заголовок
                пакета. Если заголовок пакета не существует, то он будет создан с использованием
                предложения CREATE PACKAGE. Если он уже существует, то он будет изменен и
                перекомпилирован, при этом существующие привилегии и зависимости сохраняются. </para>

            <section xml:id="fblangref-ddl-package-createoralter-examples">
                <title>Примеры</title>
                <example>
                    <title>Создание нового или изменение существующего заголовка пакета</title>
                    <para>
                        <programlisting language="sql">
CREATE OR ALTER PACKAGE APP_VAR
AS
BEGIN
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC;
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC;
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE DEFAULT CURRENT_DATE);
END       
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-alter">CREATE PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-alter">ALTER PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-body-recreate">RECREATE PACKAGE
                            BODY</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="fblangref-ddl-package-drop">
            <info>
                <title>DROP PACKAGE</title>
                <keywordset>
                    <keyword>DROP PACKAGE</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>DROP PACKAGE</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Удаление заголовка пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
DROP PACKAGE <replaceable>package_name</replaceable>    
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <title>Параметры оператора DROP PACKAGE</title>
                    <?dbfo keep-together='auto'?>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <replaceable>package_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя пакета.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <para>Оператор DROP PACKAGE удаляет существующий заголовок пакета. Перед удалением
                заголовка пакета (DROP PACKAGE), необходимо выполнить удаление тела пакета (DROP
                PACKAGE BODY), иначе будет выдана ошибка. Если от заголовка пакета существуют
                зависимости, то при попытке удаления такого заголовка будет выдана соответствующая
                ошибка.</para>
            <section xml:id="fblangref-ddl-package-drop-who">
                <title>Кто может удалить заголовок пакета?</title>

                <para>Выполнить оператор <database>DROP PACKAGE</database> могут: <itemizedlist
                        spacing="compact">
                        <listitem>
                            <para><link linkend="fblangref-security-administrators"
                                    >Администраторы</link></para>
                        </listitem>
                        <listitem>
                            <para>Владелец пакета; </para>
                        </listitem>
                        <listitem>
                            <para>Пользователи с привилегией <database>DROP ANY PACKAGE</database>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>

            </section>
            <section xml:id="fblangref-ddl-package-drop-examples">
                <title>Примеры</title>
                <example>
                    <title>Удаление заголовка пакета</title>
                    <para>
                        <programlisting language="sql">
DROP PACKAGE APP_VAR;      
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-alter">CREATE PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-alter">ALTER PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-body-drop">DROP PACKAGE BODY</link>.
                    </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="fblangref-ddl-package-recreate">
            <info>
                <title>RECREATE PACKAGE</title>
                <keywordset>
                    <keyword>RECREATE PACKAGE</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>RECREATE PACKAGE</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Создание нового или пересоздание существующего заголовка пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
RECREATE PACKAGE <replaceable>package_name</replaceable>  
[<replaceable>&lt;rights clause&gt;</replaceable>]                             
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]    
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                               
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Подробнее см.</title>

                <para>
                    <link linkend="fblangref-ddl-package-create">CREATE PACKAGE</link>. </para>
            </formalpara>

            <para>Оператор RECREATE PACKAGE создаёт новый или пересоздаёт существующий заголовок
                пакета. Если заголовок пакета с таким именем уже существует, то оператор попытается
                удалить его и создать новый заголовок пакета. Пересоздать заголовок пакета
                невозможно, если у существующей заголовка пакета имеются зависимости или существует
                тело этого пакета. После пересоздания заголовка пакета привилегии на выполнение
                подпрограмм пакета и привилегии самого пакета не сохраняются. </para>
            <section xml:id="fblangref-ddl-package-recreate-examples">
                <title>Примеры</title>
                <example>
                    <title>Создание нового или пересоздание существующего заголовка пакета</title>
                    <para>
                        <programlisting language="sql">
RECREATE PACKAGE APP_VAR
AS
BEGIN
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC;
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC;
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE DEFAULT CURRENT_DATE);
END       
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-alter">CREATE PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-drop">DROP PACKAGE</link>, <link
                            linkend="fblangref-ddl-package-body-recreate">RECREATE PACKAGE
                            BODY</link>. </para>
                </formalpara>
            </section>
        </section>
    </section>
    <section xml:id="fblangref-ddl-package-body">
        <info>
            <title>PACKAGE BODY</title>
            <keywordset>
                <keyword>PACKAGE BODY</keyword>
            </keywordset>
        </info>
        <section xml:id="fblangref-ddl-package-body-create">
            <info>
                <title>CREATE PACKAGE BODY</title>
                <keywordset>
                    <keyword>CREATE PACKAGE BODY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>CREATE PACKAGE BODY</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Создание тела пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CREATE PACKAGE BODY <replaceable>package_name</replaceable>  
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
  [<replaceable>&lt;package_body_item&gt;</replaceable> ...]                                                        
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]    
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                           

<replaceable>&lt;package_body_item&gt;</replaceable> ::=
    <replaceable>&lt;function_impl&gt;</replaceable> 
  | <replaceable>&lt;procedure_impl&gt;</replaceable>

<replaceable>&lt;function_impl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC] 
  <replaceable>&lt;routine body&gt;</replaceable> 
      
<replaceable>&lt;procedure_impl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                             
  <replaceable>&lt;routine body&gt;</replaceable>                            

<replaceable>&lt;in_params&gt;</replaceable> ::= <replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...]

<replaceable>&lt;inparam&gt;</replaceable> ::= <replaceable>&lt;param_decl&gt;</replaceable> [{= | DEFAULT} <replaceable>&lt;value&gt;</replaceable>]  
   
<replaceable>&lt;in_impl_params&gt;</replaceable> ::= <replaceable>&lt;param_decl&gt;</replaceable> [, <replaceable>&lt;param_decl&gt;</replaceable> ...]  
   
<replaceable>&lt;value&gt;</replaceable> ::=  {<replaceable>literal</replaceable> | NULL | <replaceable>context_var</replaceable>} 

<replaceable>&lt;out_params&gt;</replaceable> ::= <replaceable>&lt;outparam&gt;</replaceable> [, <replaceable>&lt;outparam&gt;</replaceable> ...]

<replaceable>&lt;outparam&gt;</replaceable>  ::=  <replaceable>&lt;param_decl&gt;</replaceable> 
                    
<replaceable>&lt;param_decl&gt;</replaceable> ::= <replaceable>paramname</replaceable> <replaceable>&lt;type&gt;</replaceable> [NOT NULL] [COLLATE <replaceable>collation</replaceable>]

<replaceable>&lt;type&gt;</replaceable> ::= <replaceable>&lt;datatype&gt;</replaceable> | [TYPE OF] <replaceable>domain_name</replaceable> | TYPE OF COLUMN <replaceable>rel</replaceable>.<replaceable>col</replaceable> 
                    
<replaceable>&lt;datatype&gt;</replaceable> ::= 
    <replaceable>&lt;scalar_datatype&gt;</replaceable> | <replaceable>&lt;blob_datatype&gt;</replaceable> | <replaceable>&lt;array_datatype&gt;</replaceable>                   
                    
<replaceable>&lt;scalar_datatype&gt;</replaceable> ::=  <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-scalar">См. Синтаксис скалярных типов данных</link>
                    
<replaceable>&lt;blob_datatype&gt;</replaceable> ::= <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-blob">См. Синтаксис типа данных BLOB</link>          
                    
<replaceable>&lt;array_datatype&gt;</replaceable> ::= <link xmlns:xlink="http://www.w3.org/1999/xlink" linkend="fblangref-datatypes-declare-array">См. Синтаксис массивов</link> 
                                            
<replaceable>&lt;routine body&gt;</replaceable> ::= <replaceable>&lt;sql routine body&gt;</replaceable> | <replaceable>&lt;external body reference&gt;</replaceable>                   
    
<replaceable>&lt;sql routine body&gt;</replaceable> ::=  
  AS       
    [<replaceable>&lt;declarations&gt;</replaceable>]       
  BEGIN       
    [<replaceable>&lt;PSQL_statements&gt;</replaceable>]       
  END                    

<replaceable>&lt;declarations&gt;</replaceable> ::= <replaceable>&lt;declare_item&gt;</replaceable> [<replaceable>&lt;declare_item&gt;</replaceable> ...]

<replaceable>&lt;declare_item&gt;</replaceable> ::=      
    <replaceable>&lt;declare_var&gt;</replaceable>; 
  | <replaceable>&lt;declare_cursor&gt;</replaceable>; 
  | <replaceable>&lt;subroutine declaration&gt;</replaceable>;
  | <replaceable>&lt;subroutine implimentation&gt;</replaceable>  

<replaceable>&lt;subroutine declaration&gt;</replaceable> ::= <replaceable>&lt;subfunc_decl&gt;</replaceable> | <replaceable>&lt;subproc_decl&gt;</replaceable> 

<replaceable>&lt;subroutine implimentation&gt;</replaceable> ::= <replaceable>&lt;subfunc_impl&gt;</replaceable> | <replaceable>&lt;subproc_impl&gt;</replaceable> 

<replaceable>&lt;external body reference&gt;</replaceable> ::=
  EXTERNAL NAME '<replaceable>&lt;extname&gt;</replaceable>' ENGINE <replaceable>&lt;engine&gt;</replaceable> [AS <replaceable>&lt;extbody&gt;</replaceable>]

<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'                             
                        
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <title>Параметры оператора CREATE PACKAGE BODY</title>
                    <?dbfo keep-together='auto'?>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <replaceable>package_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя пакета. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>function_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление функции.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>procedure_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление процедуры.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>function_impl</replaceable>
                                </entry>
                                <entry>
                                    <para>Реализация функции.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>procedure_impl</replaceable>
                                </entry>
                                <entry>
                                    <para>Реализация процедуры.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>proc_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя процедуры. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>func_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя функции. Может содержать до 63 символов.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>inparam</replaceable>
                                </entry>
                                <entry>
                                    <para>Описание входного параметра.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>outparam</replaceable>
                                </entry>
                                <entry>
                                    <para>Описание выходного параметра.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>declarations</replaceable>
                                </entry>
                                <entry>
                                    <para>Секция объявления локальных переменных, именованных
                                        курсоров, подпроцедур и подфункций.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>declare_var</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление локальной переменной.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>declare_cursor</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление именованного курсора.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>subfunc_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление подпрограммы–функции.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>subproc_decl</replaceable>
                                </entry>
                                <entry>
                                    <para>Объявление подпрограммы–процедуры.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>subfunc_impl</replaceable>
                                </entry>
                                <entry>
                                    <para>Реализация подпрограммы–функции.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>subproc_impl</replaceable>
                                </entry>
                                <entry>
                                    <para>Реализация подпрограммы–процедуры.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>module name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя внешнего модуля, в котором расположена
                                        процедура/функция.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>routine name</replaceable>
                                </entry>
                                <entry>
                                    <para>Внутреннее имя процедуры/функции внутри внешнего
                                        модуля.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>misc info</replaceable>
                                </entry>
                                <entry>
                                    <para>Определяемая пользователем информация для передачи в
                                        функцию внешнего модуля.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>extbody</replaceable>
                                </entry>
                                <entry>Тело внешней процедуры или функции. Строковый литерал который
                                    может использоваться UDR для различных целей.</entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>engine</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя движка для использования внешних функций. Обычно
                                        указывается имя UDR.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>literal</replaceable>
                                </entry>
                                <entry>
                                    <para>Литерал, совместимый по типу с параметром. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>context_var</replaceable>
                                </entry>
                                <entry>
                                    <para>Любая контекстная переменная, тип которой совместим с
                                        типом параметра. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>paramname</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя входного или выходного параметра процедуры/функции.
                                        Может содержать до 63 символов. Имя параметра должно быть
                                        уникальным среди входных и  выходных параметров
                                        процедуры/функции, а также её локальных переменных. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>datatype</replaceable>
                                </entry>
                                <entry>
                                    <para>Тип данных SQL. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>collation</replaceable>
                                </entry>
                                <entry>
                                    <para>Порядок сортировки.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>domain_name</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя домена. </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>rel</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя таблицы или представления.</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <replaceable>col</replaceable>
                                </entry>
                                <entry>
                                    <para>Имя столбца таблицы или представления. </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <para>Оператор CREATE PACKAGE BODY создаёт новое тело пакета. Тело пакета может быть
                создано только после того как будет создан заголовок пакета. Если заголовка пакета с
                именем <replaceable>package_name</replaceable> не существует, то будет выдана
                соответствующая ошибка. </para>
            <para>Все процедуры и функции, объявленные в заголовке пакета, должны быть реализованы в
                теле пакета. Кроме того, должны быть реализованы и все процедуры и функции,
                объявленные в теле пакета. Процедуры и функции, определенные в теле пакета, но не
                объявленные в заголовке пакета, не видны вне тела пакета.</para>
            <para>Имена процедур и функций, объявленные в теле пакета, должны быть уникальны среди
                имён процедур и функций, объявленных в заголовке и теле пакета.</para>
            <note>
                <para>Желательно чтобы имена хранимых процедур и функций пакета не пересекались с
                    именами хранимых процедур и функций из глобального пространства имен, хотя это и
                    допустимо. Дело в том, что в настоящее время вы не сможете вызвать
                    функцию/процедуру из глобального пространства имён внутри пакета, если в пакете
                    объявлена одноименная функция/процедура. В этом случае всегда будет вызвана
                    процедура/функция пакета. </para>
            </note>
            <formalpara>
                <title>Правила:</title>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>В теле пакеты должны быть реализованы все подпрограммы, стой же
                                сигнатурой, что и объявленные в заголовке и в начале тела
                                пакета.</para>
                        </listitem>
                        <listitem>
                            <para>Значения по умолчанию для параметров процедур не могут быть
                                переопределены (которые указываются в
                                    <replaceable>&lt;package_item&gt;</replaceable>). Это означает,
                                что они могут быть в
                                    <replaceable>&lt;package_body_item&gt;</replaceable> только для
                                частных процедур, которые не были объявлены.</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </formalpara>
            <note>
                <para>UDF деклараций (DECLARE внешняя функция) в настоящее время не поддерживается
                    внутри пакетов.</para>
            </note>
            <section xml:id="fblangref-ddl-package-body-create-who">
                <title>Кто может создать тело пакета?</title>

                <para>Выполнить оператор <database>CREATE PACKAGE BODY</database> могут:
                        <itemizedlist spacing="compact">
                        <listitem>
                            <para><link linkend="fblangref-security-administrators"
                                    >Администраторы</link></para>
                        </listitem>
                        <listitem>
                            <para>Владелец пакета; </para>
                        </listitem>
                        <listitem>
                            <para>Пользователи с привилегией <database>ALTER ANY PACKAGE</database>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>

            </section>
            <section xml:id="fblangref-ddl-package-body-create-examples">
                <title>Примеры</title>
                <example>
                    <title>Создание тела пакета </title>
                    <para>
                        <programlisting language="sql">
CREATE PACKAGE BODY APP_VAR
AS
BEGIN
  -- Возвращает дату начала периода
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC
  AS
  BEGIN
    RETURN RDB$GET_CONTEXT('USER_SESSION', 'DATEBEGIN');
  END
  -- Возвращает дату окончания периода
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC
  AS
  BEGIN
    RETURN RDB$GET_CONTEXT('USER_SESSION', 'DATEEND');
  END
  -- Устанавливает диапазон дат рабочего периода
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE)
  AS
  BEGIN
    RDB$SET_CONTEXT('USER_SESSION', 'DATEBEGIN', ADATEBEGIN);
    RDB$SET_CONTEXT('USER_SESSION', 'DATEEND', ADATEEND);
  END
END    
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-body-drop">DROP PACKAGE BODY</link>,
                            <link linkend="fblangref-ddl-package-create">CREATE PACKAGE</link>.
                    </para>
                </formalpara>
            </section>
        </section>

        <section xml:id="fblangref-ddl-package-body-drop">
            <info>
                <title>DROP PACKAGE BODY</title>
                <keywordset>
                    <keyword>DROP PACKAGE BODY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>DROP PACKAGE BODY</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Удаление тела пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
DROP PACKAGE BODY <replaceable>package_name</replaceable>                            
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <title>Параметры оператора DROP PACKAGE BODY</title>
                    <?dbfo keep-together='auto'?>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <replaceable>package_name</replaceable>
                                </entry>
                                <entry>Имя пакета.</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <para>Оператор DROP PACKAGE BODY удаляет тело пакета.</para>
            <section xml:id="fblangref-ddl-package-body-drop-who">
                <title>Кто может удалить тело пакета?</title>

                <para>Выполнить оператор <database>DROP PACKAGE BODY</database> могут: <itemizedlist
                        spacing="compact">
                        <listitem>
                            <para><link linkend="fblangref-security-administrators"
                                    >Администраторы</link></para>
                        </listitem>
                        <listitem>
                            <para>Владелец пакета; </para>
                        </listitem>
                        <listitem>
                            <para>Пользователи с привилегией <database>ALTER ANY PACKAGE</database>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>

            </section>
            <section xml:id="fblangref-ddl-package-body-drop-examples">
                <title>Примеры</title>
                <example>
                    <title>Удаление тела пакета</title>
                    <para>
                        <programlisting language="sql">
DROP PACKAGE BODY APP_VAR;  
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-body-create">CREATE PACKAGE
                        BODY</link>, <link linkend="fblangref-ddl-package-drop">DROP PACKAGE</link>.
                    </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="fblangref-ddl-package-body-recreate">
            <info>
                <title>RECREATE PACKAGE BODY</title>
                <keywordset>
                    <keyword>RECREATE PACKAGE BODY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>RECREATE PACKAGE BODY</primary>
            </indexterm>
            <formalpara>
                <title>Назначение:</title>

                <para>Создание нового и пересоздание существующего тела пакета.</para>
            </formalpara>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
RECREATE PACKAGE BODY <replaceable>package_name</replaceable>  
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
  [<replaceable>&lt;package_body_item&gt;</replaceable> ...]                                                        
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [<replaceable>&lt;function_options&gt;</replaceable>]   
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)] 
  [<replaceable>&lt;procedure_options&gt;</replaceable>]                          

<replaceable>&lt;package_body_item&gt;</replaceable> ::=
    <replaceable>&lt;function_impl&gt;</replaceable> 
  | <replaceable>&lt;procedure_impl&gt;</replaceable>

<replaceable>&lt;function_impl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]
  <replaceable>&lt;routine body&gt;</replaceable>  
      
<replaceable>&lt;procedure_impl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                          
  <replaceable>&lt;routine body&gt;</replaceable>                               
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Подробнее см.</title>

                <para>
                    <link linkend="fblangref-ddl-package-body-create">CREATE PACKAGE BODY</link>.
                </para>
            </formalpara>

            <para>Оператор RECREATE PACKAGE BODY создаёт новое или пересоздаёт существующее тело
                пакета. Если тело пакета с таким именем уже существует, то оператор попытается
                удалить его и создать новое тело пакета. После пересоздания тела пакета привилегии
                на выполнение подпрограмм пакета и привилегии самого пакета сохраняются. </para>
            <section xml:id="fblangref-ddl-package-body-recreate-examples">
                <title>Примеры</title>
                <example>
                    <title>Пересоздание тела пакета</title>
                    <para>
                        <programlisting language="sql">
RECREATE PACKAGE BODY APP_VAR
AS
BEGIN
  -- Возвращает дату начала периода
  FUNCTION GET_DATEBEGIN() RETURNS DATE DETERMINISTIC
  AS
  BEGIN
    RETURN RDB$GET_CONTEXT('USER_SESSION', 'DATEBEGIN');
  END
  -- Возвращает дату окончания периода
  FUNCTION GET_DATEEND() RETURNS DATE DETERMINISTIC
  AS
  BEGIN
    RETURN RDB$GET_CONTEXT('USER_SESSION', 'DATEEND');
  END
  -- Устанавливает диапазон дат рабочего периода
  PROCEDURE SET_DATERANGE(ADATEBEGIN DATE, ADATEEND DATE)
  AS
  BEGIN
    RDB$SET_CONTEXT('USER_SESSION', 'DATEBEGIN', ADATEBEGIN);
    RDB$SET_CONTEXT('USER_SESSION', 'DATEEND', ADATEEND);
  END
END    
                </programlisting>
                    </para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="fblangref-ddl-package-body-create">CREATE PACKAGE
                        BODY</link>, <link linkend="fblangref-ddl-package-body-drop">DROP PACKAGE
                            BODY</link>. </para>
                </formalpara>
            </section>
        </section>
    </section>
</section>
