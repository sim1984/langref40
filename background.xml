<!DOCTYPE chapter>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="langref-background"
    xml:lang="ru">
    <info>
        <title>Общие сведения</title>
    </info>

    <section xml:id="langref-background-flavors">
        <info>
            <title>Подмножества SQL</title>
        </info>

        <para> SQL имеет четыре подмножества SQL, используемых в различных областях применения: </para>
        <para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Динамический SQL (DSQL, Dynamic SQL)</para>
                </listitem>
                <listitem>
                    <para>Процедурный SQL (PSQL, Procedural SQL)</para>
                </listitem>
                <listitem>
                    <para>Встроенный SQL (ESQL, Embedded SQL)</para>
                </listitem>
                <listitem>
                    <para>Интерактивный SQL (ISQL, Interactive SQL)</para>
                </listitem>
            </itemizedlist>
        </para>
        <para> Динамический SQL является основной частью языка, которая соответствует Части 2
            (SQL/Foundation – SQL/Основы) спецификации SQL. DSQL представляет собой конструкции,
            которые передаются клиентскими приложениями с помощью Firebird API и обрабатываются
            сервером базы данных. </para>
        <para> Процедурный SQL является расширением Динамического SQL, в котором дополнительно
            присутствуют составные операторы, содержащие локальные переменные, присваивание, циклы и
            другие процедурные конструкции. PSQL относится к Части 4 (SQL/PSM) спецификации SQL.
            Изначально расширение PSQL было доступно только лишь в постоянно хранимых в базе модулях
            (процедурах и триггерах), но сравнительно недавно они стали также доступны в
            Динамическом SQL (смотри EXECUTE BLOCK). </para>
        <para> Встроенный SQL определяет подмножество DSQL, поддерживаемое средством Firebird GPRE.
            GPRE — приложение-препроцессор, которое позволяет вам внедрять SQL конструкции в ваш
            непосредственный язык программирования (C, C++, Pascal, Cobol и так далее) и производить
            обработку этих внедрённых конструкций в правильные вызовы Firebird API. Обратите
            внимание, что ESQL поддерживает только часть конструкций и выражений DSQL. </para>
        <para> Интерактивный SQL подразумевает собой язык, который может быть использован для работы
            с приложением командной строки Firebird ISQL для
            интерактивного доступа к базам данных. <application>isql</application> является обычным
            клиентским приложением. Для него обычный язык — это язык DSQL. Однако приложение
            поддерживает несколько дополнительных команд. </para>
        <para> Оба языковых подмножества, как DSQL, так и PSQL полностью представлены в данном
            руководстве. Из набора инструментария ни ESQL, ни ISQL не описаны здесь отдельно, за
            исключением тех мест, где это не указано явно. </para>
    </section>
    <section xml:id="langref-background-dialects">
        <info>
            <title>Диалекты SQL</title>
        </info>

        <para> SQL диалект — это термин, определяющий специфические особенности языка SQL, которые
            доступны во время доступа с его помощью к базе данных. SQL диалект может быть определён
            как на уровне базы данных, так и на уровне соединения с базой данных. В настоящее время
            доступны три диалекта: </para>
        <para>
            <itemizedlist>
                <listitem>
                    <para> В 1-м диалекте дата и время хранятся в типе данных DATE, и имеется тип
                        данных TIMESTAMP, который идентичен DATE. Двойные кавычки используются для
                        разграничения строковых данных. Точность типов данных NUMERIC и DECIMAL
                        меньше, чем в 3-м диалекте и в случае, если значение точности более 9,
                        Firebird хранит такие значения как длинные значения с плавающей точкой.
                        BIGINT не является доступным типом данных. Идентификаторы являются
                        регистро-независимыми. Значение генераторов хранится как 64 битное целое, а
                        при выдаче значения усекается до 32 битного целого; </para>
                </listitem>
                <listitem>
                    <para> Диалект 2 доступен только в клиентском соединении к Firebird и не может
                        быть применён к базе данных. Он предназначен для того, чтобы помочь в
                        отладке в случае возможных проблем с целостностью данных при проведении
                        миграции с диалекта 1 на 3; </para>
                </listitem>
                <listitem>
                    <para> Диалект 3 базы данных позволяет хранить числа (типы данных DECIMAL и
                        NUMERIC) в базе данных как длинные значения с фиксированной точкой
                        (масштабируемые целые числа) в случае если точность числа меньше чем 9. Тип
                        данных TIME доступен и используется для хранения значения только времени.
                        Тип данных DATE хранит информацию о дате. Тип данных BIGINT доступен в
                        качестве целого 64-х битного типа данных. Двойные кавычки могут
                        использоваться, но только для идентификаторов, которые являются зависимыми
                        от регистра, а не для строковых данных, для которых используют одинарные
                        кавычки. Значения генераторов хранятся как 64-ти битные целые значения.
                        Новую базу данных Firebird создаёт в 3-м диалекте. </para>
                </listitem>
            </itemizedlist>
        </para>
        <para> Целью 1-го диалекта является обеспечение поддержки для унаследованных (пре-версия
            IB6) Interbase приложений для работы с Firebird. Диалект 2 используется как
            промежуточный и предназначен для разрешения проблем при миграции с 1-го в 3-й диалект.
            Для вновь разрабатываемых баз данных и приложений настоятельно рекомендуется
            использовать 3-й диалект. Диалект при соединении с базой данных должен быть таким же,
            как и базы данных. Исключением является случай миграции с 1-го в 3-й диалект, когда в
            строке соединения с базой данных используется 2-й диалект. </para>
        <note>
            <title>Замечание:</title>
            <para> По умолчанию это руководство описывает семантику SQL третьего диалекта, если
                только в тексте явно не указывается диалект. </para>
        </note>
    </section>
    <section xml:id="langref-background-errors">
        <info>
            <title>Действия при ошибках</title>
        </info>

        <para> Обработка любого оператора либо успешно завершается, либо прерывается из-за вызванной
            определёнными условиями ошибки. Обработку ошибок можно производить, как в клиентском
            приложении, так и на стороне сервера средствами SQL. </para>
        <para> Подробнее смотрите в приложении <link linkend="langref-error">Обработка ошибок, коды
                и сообщения</link>.</para>
    </section>
</chapter>
