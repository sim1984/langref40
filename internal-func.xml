<!DOCTYPE chapter>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="internalfunc" xml:lang="ru">
    <info>
        <title>Встроенные функции и переменные</title>
    </info>
    <section xml:id="internalfunc-contextvar">
        <info>
            <title>Контекстные переменные</title>
        </info>
        <section xml:id="internalfunc-contextvar-current_connection">
            <info>
                <title>CURRENT_CONNECTION</title>
                <keywordset>
                    <keyword>CURRENT_CONNECTION</keyword>
                </keywordset>
            </info>
            <indexterm><primary>CURRENT_CONNECTION</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_CONNECTION                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BIGINT</para>
            </formalpara>

            <para>Переменная CURRENT_CONNECTION хранит уникальный идентификатор текущего соединения.
                Значение переменной хранится в странице заголовка базы и сбрасывается после restore.
                Переменная увеличивается на единицу при каждом последующем соединении с базой данных
                (соединения также могут быть внутренними вызванными самим ядром). Следовательно,
                переменная показывает количество подключений произошедших к базе после её
                восстановления (или после её создания). </para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_CONNECTION</title>
                        <para><programlisting language="sql">
SELECT CURRENT_CONNECTION FROM RDB$DATABASE                  
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_transaction"
                        >CURRENT_TRANSACTION</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_date">
            <info>
                <title>CURRENT_DATE</title>
                <keywordset>
                    <keyword>CURRENT_DATE</keyword>
                </keywordset>
            </info>
            <indexterm><primary>CURRENT_DATE</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_DATE                      
                        </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>DATE</para>
            </formalpara>

            <para>Переменная CURRENT_DATE возвращает текущую дату сервера. </para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_DATE</title>
                        <para><programlisting language="sql">
CREATE DOMAIN DDATE_DNN AS
DATE DEFAULT CURRENT_DATE NOT NULL                
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-today">'TODAY'</link>, <link
                        linkend="internalfunc-contextvar-current_timestamp"
                    >CURRENT_TIMESTAMP</link>, <link linkend="internalfunc-contextvar-current_time"
                        >CURRENT_TIME</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_role">
            <info>
                <title>CURRENT_ROLE</title>
                <keywordset>
                    <keyword>CURRENT_ROLE</keyword>
                </keywordset>
            </info>

            <indexterm><primary>CURRENT_ROLE</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_ROLE                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>VARCHAR(63)</para>
            </formalpara>

            <para>Контекстная переменная CURRENT_ROLE служит для определения роли, с которой
                произошло подключение к базе данных, или которая была установлена позже с помощью
                оператора SET ROLE. В случае если произошло подключение без указания роли и роль не
                была указана позже с помощью оператора SET ROLE, переменная принимает значение
                NONE.</para>

            <note>
                <para>Контекстная переменная CURRENT_ROLE содержит только имя явно указанной роли
                    (при входе в систему или с помощью SET ROLE), неявно определяемые роли (выданные
                    оператором GRANT с использованием ключевого слова DEFAULT) не будут попадать в
                    неё. Для того чтобы узнать используется ли текущим пользователем неявно
                    указанная роль используйте системную функцию <link
                        linkend="internalfunc-func-security-roleinuse"
                    >RDB$ROLE_IN_USE</link>.</para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_ROLE</title>
                        <para><programlisting language="sql">
SELECT CURRENT_ROLE FROM RDB$DATABASE               
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <note>
                <para>Такое же значение можно будет получить и в результате выполнения запроса:
                    <programlisting language="sql">
SELECT RDB$GET_CONTEXT ('SYSTEM', 'CURRENT_ROLE')
FROM RDB$DATABASE;
                    </programlisting>
                </para>
            </note>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="session-role-setrole">SET ROLE</link>, <link
                        linkend="internalfunc-func-context-getcontext">RDB$GET_CONTEXT</link>, <link
                        linkend="internalfunc-func-security-roleinuse">RDB$ROLE_IN_USE</link>.
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_time">
            <info>
                <title>CURRENT_TIME</title>
                <keywordset>
                    <keyword>CURRENT_TIME</keyword>
                </keywordset>
            </info>

            <indexterm><primary>CURRENT_TIME</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_TIME [(<replaceable>&lt;precision&gt;</replaceable>)]

<replaceable>&lt;precision&gt;</replaceable> ::= 0 | 1 | 2 | 3                        
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры контекстной переменной CURRENT_TIME</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>precision</replaceable></entry>
                                <entry>
                                    <para>Точность. Значение по умолчанию 0. Не поддерживается в
                                        ESQL.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>TIME WITH TIME ZONE</para>
            </formalpara>

            <para>Переменная CURRENT_TIME возвращает текущее время в часовом поясе сессии, включая
                информацию о часовом поясе. Точность определяет, сколько учитывать знаков после
                запятой в долях секунды. По умолчанию точность равна 0.</para>

            <note>
                <para>В блоке кода PSQL (процедура, триггер, исполняемый блок) значение CURRENT_TIME
                    не меняется по мере выполнения. При вызове вложенного кода, значение также не
                    изменится и будет равно значению в коде самого верхнего уровня. Для определения
                    реального времени используйте другие переменные, например 'NOW' (с полным
                    приведением типа данных). </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_TIME</title>
                        <para><programlisting language="sql">
SELECT CURRENT_TIME(2) FROM RDB$DATABASE;
-- результат будет (например) 23:35:33.1200 Europe/Moscow            
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-now">'NOW'</link>, <link
                        linkend="internalfunc-contextvar-current_timestamp"
                    >CURRENT_TIMESTAMP</link>, <link linkend="internalfunc-contextvar-current_date"
                        >CURRENT_DATE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_timestamp">
            <info>
                <title>CURRENT_TIMESTAMP</title>
                <keywordset>
                    <keyword>CURRENT_TIMESTAMP</keyword>
                </keywordset>
            </info>

            <indexterm><primary>CURRENT_TIMESTAMP</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_TIMESTAMP [(<replaceable>&lt;precision&gt;</replaceable>)]

<replaceable>&lt;precision&gt;</replaceable> ::= 0 | 1 | 2 | 3                        
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры контекстной переменной CURRENT_TIMESTAMP</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>precision</replaceable></entry>
                                <entry>
                                    <para>Точность. Значение по умолчанию 3. Не поддерживается в
                                        ESQL.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>TIMESTAMP WITH TIME ZONE</para>
            </formalpara>

            <para>Переменная CURRENT_TIMESTAMP возвращает текущую дату и время в часовом поясе
                сессии, включая информацию о часовом поясе. Точность определяет, сколько учитывать
                знаков после запятой в долях секунды. Точность по умолчанию равна 3.</para>
            <note>
                <para>В блоке кода PSQL (процедура, триггер, исполняемый блок) значение
                    CURRENT_TIMESTAMP не меняется по мере выполнения. При вызове вложенного кода,
                    значение также не изменится и будет равно значению в коде самого верхнего
                    уровня. Для определения реального времени используйте другие переменные,
                    например 'NOW' (с полным приведением типа данных). </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_TIMESTAMP</title>
                        <para><programlisting language="sql">
SELECT CURRENT_TIMESTAMP(2) FROM RDB$DATABASE;
-- результат будет (например) 02.03.2014 23:35:33.1200 Europe/Moscow           
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-now">'NOW'</link>, <link
                        linkend="internalfunc-contextvar-current_time">CURRENT_TIME</link>, <link
                        linkend="internalfunc-contextvar-current_date">CURRENT_DATE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_transaction">
            <info>
                <title>CURRENT_TRANSACTION</title>
                <keywordset>
                    <keyword>CURRENT_TRANSACTION</keyword>
                </keywordset>
            </info>

            <indexterm><primary>CURRENT_TRANSACTION</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_TRANSACTION                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BIGINT</para>
            </formalpara>

            <para>Переменная CURRENT_TRANSACTION содержит уникальный номер текущей транзакции. </para>
            <para>Значение CURRENT_TRANSACTION хранится в странице заголовка базы данных и
                сбрасывается в 0 после восстановления (или создания базы). Оно увеличивается при
                старте новой транзакции.</para>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_TRANSACTION</title>
                        <para><programlisting language="sql">
SELECT CURRENT_TRANSACTION FROM RDB$DATABASE;

NEW.TRANS_ID = CURRENT_TRANSACTION;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_connection"
                        >CURRENT_CONNECTION</link>, <link
                        linkend="internalfunc-func-context-getcontext">RDB$GET_CONTEXT</link>.
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-current_user">
            <info>
                <title>CURRENT_USER</title>
                <keywordset>
                    <keyword>CURRENT_USER</keyword>
                </keywordset>
            </info>

            <indexterm><primary>CURRENT_USER</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
CURRENT_USER                      
                        </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>VARCHAR(63)</para>
            </formalpara>

            <para>Переменная CURRENT_USER содержит имя текущего подключенного пользователя базы
                данных. </para>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной CURRENT_USER</title>
                        <para><programlisting language="sql">
NEW.ADDED_BY = CURRENT_USER;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-user">USER</link>, <link
                        linkend="internalfunc-contextvar-current_role">CURRENT_ROLE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-deleting">
            <info>
                <title>DELETING</title>
                <keywordset>
                    <keyword>DELETING</keyword>
                </keywordset>
            </info>

            <indexterm><primary>DELETING</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
DELETING                      
                        </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BOOLEAN</para>
            </formalpara>

            <para>Контекстная переменная DELETING доступна только в коде табличных триггеров.
                Используется в триггерах на несколько типов событий и показывает, что триггер
                сработал при выполнении операции DELETE.</para>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной DELETING</title>
                        <para><programlisting language="sql">
...
IF (DELETING) THEN
BEGIN
  INSERT INTO REMOVED_CARS (
    ID, MAKE, MODEL, REMOVED)
  VALUES (
    OLD.ID, OLD.MAKE, OLD.MODEL, CURRENT_TIMESTAMP);
END
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-inserting">INSERTING</link>, <link
                        linkend="internalfunc-contextvar-updating">UPDATING</link>. </para>
            </formalpara>
        </section>

        <section xml:id="internalfunc-contextvar-gdscode">
            <info>
                <title>GDSCODE</title>
                <keywordset>
                    <keyword>GDSCODE</keyword>
                </keywordset>
            </info>

            <indexterm><primary>GDSCODE</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
GDSCODE                      
                        </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>INTEGER</para>
            </formalpara>

            <para>В блоке обработки ошибок &quot;WHEN ... DO&quot; контекстная переменная GDSCODE
                содержит числовое представление текущего кода ошибки Firebird. До версии Firebird
                2.0 GDSCODE можно было получить только с использованием конструкции WHEN GDSCODE.
                Теперь эту контекстную переменную можно также использовать в блоках WHEN ANY, WHEN
                SQLCODE и WHEN EXCEPTION при условии, что код ошибки соответствует коду ошибки
                Firebird. Вне обработчика ошибок GDSCODE всегда равен 0. Вне PSQL GDSCODE не
                существует вообще. </para>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной GDSCODE</title>
                        <para><programlisting language="sql">
...
WHEN GDSCODE GRANT_OBJ_NOTFOUND,
     GDSCODE GRANT_FLD_NOTFOUND,
     GDSCODE GRANT_NOPRIV,
     GDSCODE GRANT_NOPRIV_ON_BASE
DO
BEGIN
  EXECUTE PROCEDURE LOG_GRANT_ERROR(GDSCODE);
  EXIT;
END
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <note>
                <para>Обратите внимание, пожалуйста: после, WHEN GDSCODE вы должны использовать
                    символьные имена — такие, как <replaceable>grant_obj_notfound</replaceable> и
                    т.д. Но контекстная переменная GDSCODE - целое число. Для сравнения его с
                    определённой ошибкой вы должны использовать числовое значение, например,
                    335544551 для <replaceable>grant_obj_notfound</replaceable>.</para>
            </note>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-sqlcode">SQLCODE</link>, <link
                        linkend="internalfunc-contextvar-sqlstate">SQLSTATE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-inserting">
            <info>
                <title>INSERTING</title>
                <keywordset>
                    <keyword>INSERTING</keyword>
                </keywordset>
            </info>

            <indexterm><primary>INSERTING</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
INSERTING                      
                    </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BOOLEAN</para>
            </formalpara>

            <para>Контекстная переменная INSERTING доступна только коде табличных триггеров.
                Используется в триггерах на несколько типов событий и показывает, что триггер
                сработал при выполнении операции INSERT. </para>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной INSERTING</title>
                        <para><programlisting language="sql">
...
IF (INSERTING OR UPDATING) THEN
BEGIN
  IF (NEW.SERIAL_NUM IS NULL) THEN
    NEW.SERIAL_NUM = GEN_ID (GEN_SERIALS, 1);
END
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-updating">UPDATING</link>, <link
                        linkend="internalfunc-contextvar-deleting">DELETING</link>. </para>
            </formalpara>
        </section>

        <section xml:id="internalfunc-contextvar-localtime">
            <info>
                <title>LOCALTIME</title>
                <keywordset>
                    <keyword>LOCALTIME</keyword>
                </keywordset>
            </info>

            <indexterm><primary>LOCALTIME</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
LOCALTIME [(<replaceable>&lt;precision&gt;</replaceable>)]

<replaceable>&lt;precision&gt;</replaceable> ::= 0 | 1 | 2 | 3                        
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры контекстной переменной LOCALTIME</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>precision</replaceable></entry>
                                <entry>
                                    <para>Точность. Значение по умолчанию 0. Не поддерживается в
                                        ESQL.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>TIME WITHOUT TIME ZONE</para>
            </formalpara>

            <para>Переменная LOCALTIME возвращает текущее время в часосом поясе сессии, без
                информации о часовом поясе. Точность определяет, сколько учитывать знаков после
                запятой в долях секунды. Точность по умолчанию равна 0.</para>

            <note>
                <para>В блоке кода PSQL (процедура, триггер, исполняемый блок) значение LOCALTIME не
                    меняется по мере выполнения. При вызове вложенного кода, значение также не
                    изменится и будет равно значению в коде самого верхнего уровня. Для определения
                    реального времени используйте другие переменные, например 'NOW' (с полным
                    приведением типа данных). </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной LOCALTIME</title>
                        <para><programlisting language="sql">
SELECT LOCALTIME(2) FROM RDB$DATABASE;
-- результат будет (например) 23:35:33.1200            
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_time">CURRENT_TIME</link>, <link
                        linkend="internalfunc-contextvar-now">'NOW'</link>, <link
                        linkend="internalfunc-contextvar-current_timestamp"
                    >CURRENT_TIMESTAMP</link>, <link linkend="internalfunc-contextvar-current_date"
                        >CURRENT_DATE</link>. </para>
            </formalpara>
        </section>

        <section xml:id="internalfunc-contextvar-localtimestamp">
            <info>
                <title>LOCALTIMESTAMP</title>
                <keywordset>
                    <keyword>LOCALTIMESTAMP</keyword>
                </keywordset>
            </info>

            <indexterm><primary>LOCALTIMESTAMP</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
LOCALTIMESTAMP [(<replaceable>&lt;precision&gt;</replaceable>)]

<replaceable>&lt;precision&gt;</replaceable> ::= 0 | 1 | 2 | 3                        
                        </programlisting>
                </para>
            </formalpara>
            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры контекстной переменной LOCALTIMESTAMP</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>precision</replaceable></entry>
                                <entry>
                                    <para>Точность. Значение по умолчанию 3. Не поддерживается в
                                        ESQL.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>TIMESTAMP WITHOUT TIME ZONE</para>
            </formalpara>

            <para>Переменная LOCALTIMESTAMP возвращает текущую дату и время в часовом поясе сессии,
                без информации о часовом поясе. Точность определяет, сколько учитывать знаков после
                запятой в долях секунды. Точность по умолчанию равна 3.</para>
            <note>
                <para>В блоке кода PSQL (процедура, триггер, исполняемый блок) значение
                    LOCALTIMESTAMP не меняется по мере выполнения. При вызове вложенного кода,
                    значение также не изменится и будет равно значению в коде самого верхнего
                    уровня. Для определения реального времени используйте другие переменные,
                    например 'NOW' (с полным приведением типа данных). </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной LOCALTIMESTAMP</title>
                        <para><programlisting language="sql">
SELECT LOCALTIMESTAMP(2) FROM RDB$DATABASE;
-- результат будет (например) 02.03.2014 23:35:33.1200            
                </programlisting></para>
                    </example>
                </para>
            </formalpara>


            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_timestamp"
                        >CURRENT_TIMESTAMP</link>, <link linkend="internalfunc-contextvar-now"
                        >'NOW'</link>, <link linkend="internalfunc-contextvar-current_time"
                        >CURRENT_TIME</link>, <link linkend="internalfunc-contextvar-current_date"
                        >CURRENT_DATE</link>. </para>
            </formalpara>
        </section>

        <section xml:id="internalfunc-contextvar-new">
            <info>
                <title>NEW</title>
                <keywordset>
                    <keyword>NEW</keyword>
                </keywordset>
            </info>
            <indexterm><primary>NEW</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
NEW                     
                    </programlisting>
                </para>
            </formalpara>

            <para>Контекстная переменная NEW доступна только в коде табличных триггеров. Значение
                NEW содержит новые значения полей данных, которое возникли в базе во время операции
                обновления или вставки.</para>
            <para>В AFTER триггерах переменная доступна только для чтения.</para>
            <note>
                <para>Для табличных триггеров, срабатывающих на несколько типов событий, переменная
                    NEW доступна всегда. Однако в случае если триггер сработал на операцию удаления,
                    то для него новая версия данных не имеет смысла. В этой ситуации чтение
                    переменной NEW всегда вернёт NULL.</para>
            </note>
            <important>
                <para>Попытка записи в переменную NEW в AFTER триггере вызовет исключение в коде.
                </para>
            </important>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной NEW</title>
                        <para><programlisting language="sql">
...
  IF (NEW.SERIAL_NUM IS NULL) THEN
    NEW.SERIAL_NUM = GEN_ID (GEN_SERIALS, 1);
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-old">OLD</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-now">
            <info>
                <title>'NOW'</title>
                <keywordset>
                    <keyword>'NOW'</keyword>
                </keywordset>
            </info>
            <indexterm><primary>NOW</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
'NOW'                    
                    </programlisting>
                </para>
            </formalpara>

            <para>Не является переменной, а является строковым литералом. При использовании
                преобразования типов данных, например, с помощью функции CAST() в тип даты/времени
                позволяет получить текущую дату и/или время. Значение &quot;после запятой&quot; у
                переменной показывают число миллисекунд. Точность составляет 3 знака после запятой
                (миллисекунды). Написание 'NOW' не зависит от регистра, при преобразовании в дату
                функция игнорирует все пробелы слева и справа от слова.</para>
            <note>
                <para>Поскольку 'NOW' всегда возвращает актуальные значения даты и времени при
                    использовании CAST() для приведения типов данных она может использоваться для
                    измерения временных интервалов и скорости выполнения кода в процедурах,
                    триггерах и блоках кода PSQL. Будьте внимательны при использовании 'NOW', т.к.
                    использование сокращённого преобразования типов 'NOW' оценивается во время
                    синтаксического анализа, а затем время её &quot;замораживается&quot;, даже при
                    многократном выполнении кода. </para>
            </note>


            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной 'NOW'</title>
                        <para><programlisting language="sql">
SELECT CAST('Now' AS DATE) FROM rdb$database;
-- возвратит, например 2014-10-03

SELECT CAST('now' AS TIME) FROM rdb$database;
-- возвратит, например 14:20:19.6170

SELECT CAST('NOW' AS TIMESTAMP) FROM rdb$database;
-- возвратит, например 2014-10-03 14:20:19.6170
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_timestamp"
                        >CURRENT_TIMESTAMP</link>, <link
                        linkend="internalfunc-contextvar-current_date">CURRENT_DATE</link>, <link
                        linkend="internalfunc-contextvar-current_time">CURRENT_TIME</link>, <link
                        linkend="internalfunc-contextvar-today">TODAY</link>, <link
                        linkend="internalfunc-contextvar-tomorrow">TOMORROW</link>, <link
                        linkend="internalfunc-contextvar-yesterday">YESTERDAY</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-old">
            <info>
                <title>OLD</title>
                <keywordset>
                    <keyword>OLD</keyword>
                </keywordset>
            </info>
            <indexterm><primary>OLD</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
OLD                     
                    </programlisting>
                </para>
            </formalpara>

            <para>Контекстная переменная OLD доступна только коде триггеров. Значения, содержащееся
                в OLD, хранит прошлые значения полей, которые были в базе до операции изменения или
                удаления.</para>
            <para>Переменная OLD доступна только для чтения.</para>
            <note>
                <para>Для табличных триггеров, срабатывающих на несколько типов событий, значения
                    для переменной OLD всегда возможны. Однако для триггеров, сработавших на вставку
                    записи, значение данной переменной не имеет смысла, поэтому в этой ситуации
                    чтение OLD возвратит NULL, а попытка записи в неё вызовет исключение в
                    коде.</para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной OLD</title>
                        <para><programlisting language="sql">
...
  IF (NEW.QUANTITY IS DISTINCT FROM OLD.QUANTITY) THEN
    DELTA = NEW.QUANTITY - OLD.QUANTITY;
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-new">NEW</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-row_count">
            <info>
                <title>ROW_COUNT</title>
                <keywordset>
                    <keyword>ROW_COUNT</keyword>
                </keywordset>
            </info>

            <indexterm><primary>ROW_COUNT</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
ROW_COUNT                     
                    </programlisting>
                </para>
            </formalpara>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>INTEGER</para>
            </formalpara>

            <para>Контекстная переменная ROW_COUNT содержит число строк, затронутых последним
                оператором DML (INSERT, UPDATE, DELETE, SELECT или FETCH) в текущем триггере,
                хранимой процедуре или исполняемом блоке.</para>
            <para>Поведение с SELECT и FETCH: <itemizedlist spacing="compact">
                    <listitem>
                        <para>После выполнения singleton SELECT запроса (запроса, который может
                            вернуть не более одной строки данных), ROW_COUNT равна 1, если была
                            получена строка данных и 0 в противном случае;</para>
                    </listitem>
                    <listitem>
                        <para>В цикле <link linkend="psql-statements-forselect">FOR SELECT</link>
                            переменная ROW_COUNT увеличивается на каждой итерации (начиная с 0 в
                            качестве первого значения);</para>
                    </listitem>
                    <listitem>
                        <para>После выборки (FETCH) из курсора, ROW_COUNT равна 1, если была
                            получена строка данных и 0 в противном случае. Выборка нескольких
                            записей из одного курсора не увеличивает ROW_COUNT после 1.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <important>
                <para>Переменная ROW_COUNT не может быть использована для определения количества
                    строк, затронутых при выполнении операторов EXECUTE STATEMENT или EXECUTE
                    PROCEDURE. Для оператора MERGE переменная ROW_COUNT будет содержать 0 или 1,
                    даже если было затронуто более записей </para>
            </important>
            <warning>
                <para>Не используйте переменную ROW_COUNT внутри DML операторов. Дело в том, что эта
                    переменная сбрасывает своё значение в 0 перед началом выполнения любого DML
                    оператора, а потому вы можете получить не то что ожидаете.
                    <programlisting language="sql">
...                        
UPDATE t2 SET 
    evt='upd', 
    old_id = old.id, old_x = old.x, 
    new_id = new.id, new_x = new.x
WHERE new_id = old.id;

INSERT INTO t2log(evt, affected_rows) VALUES('upd', ROW_COUNT); 
...
                    </programlisting>
                    В вышеприведённом примере в столбец affected_rows будут записаны нулевые
                    значения, даже если оператором UPDATE были затронуты строки. Для того, чтобы
                    исправить эту ошибку, необходимо сохранить значение контекстной переменной
                    ROW_COUNT в локальную переменную PSQL модуля и использовать эту локальную
                    переменную в DML операторе.
                    <programlisting language="sql">
...                        
DECLARE rc INT;                        
...                        
UPDATE t2 SET 
    evt='upd', 
    old_id = old.id, old_x = old.x, 
    new_id = new.id, new_x = new.x
WHERE new_id = old.id;

rc = ROW_COUNT;
INSERT INTO t2log(evt, affected_rows) VALUES('upd', rc); 
...
                    </programlisting>
                </para>
            </warning>
            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной ROW_COUNT</title>
                        <para><programlisting language="sql">
...
UPDATE Figures SET Number = 0 WHERE id = :id;
IF (row_count = 0) THEN
  INSERT INTO Figures (id, Number) 
  VALUES (:id, 0);
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-sqlcode">
            <info>
                <title>SQLCODE</title>
                <keywordset>
                    <keyword>SQLCODE</keyword>
                </keywordset>
            </info>
            <indexterm><primary>SQLCODE</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
SQLCODE                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>INTEGER</para>
            </formalpara>

            <para>В блоках обработки ошибок &quot;WHEN ... DO&quot; контекстная переменная SQLCODE
                содержит текущий код ошибки SQL. До Firebird 2.0 значение SQLCODE можно было
                получить только в блоках обработки ошибок WHEN SQLCODE и WHEN ANY. Теперь она может
                быть отлична от нуля в блоках WHEN GDSCODE и WHEN EXCEPTION при условии, что ошибка,
                вызвавшее срабатывание блока, соответствует коду ошибки SQL. Вне обработчиков ошибок
                SQLCODE всегда равен 0, а вне PSQL не существует вообще.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной SQLCODE</title>
                        <para><programlisting language="sql">
...
WHEN ANY DO
BEGIN
  IF (SQLCODE &lt;&gt; 0) THEN
    MSG = 'Обнаружена ошибка SQL!';
  ELSE
    MSG = 'Ошибки нет!';
  EXCEPTION EX_CUSTOM MSG;
END
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-gdscode">GDSCODE</link>, <link
                        linkend="internalfunc-contextvar-sqlstate">SQLSTATE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-sqlstate">
            <info>
                <title>SQLSTATE</title>
                <keywordset>
                    <keyword>SQLSTATE</keyword>
                </keywordset>
            </info>
            <indexterm><primary>SQLSTATE</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
SQLSTATE                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>CHAR(5)</para>
            </formalpara>

            <para>В блоках обработки ошибок &quot;WHEN ... DO&quot; контекстная переменная SQLSTATE
                переменная содержит 5 символов SQL-2003 — совместимого кода состояния, переданного
                оператором, вызвавшим ошибку. Вне обработчиков ошибок SQLSTATE всегда равен '00000',
                а вне PSQL не существует вообще.</para>
            <note>
                <para>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>SQLSTATE предназначен для замены SQLCODE. Последняя, в настоящее
                                время устарела и буден удалена будущих версиях Firebird;</para>
                        </listitem>
                        <listitem>
                            <para>Любой код SQLSTATE состоит из двух символов класса и трёх символов
                                подкласса. Класс 00 (успешное выполнение), 01 (предупреждение) и 02
                                (нет данных) представляют собой условия завершения. Каждый код
                                статуса вне этих классов является исключением. Поскольку классы 00,
                                01 и 02 не вызывают ошибку, они никогда не будут обнаруживаться в
                                переменной SQLSTATE.</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной SQLSTATE</title>
                        <para><programlisting language="sql">
WHEN ANY DO
BEGIN
  MSG = CASE SQLSTATE
          WHEN '22003' THEN
            'Число вышло за пределы диапазона!'
          WHEN '22012' THEN
            'Деление на ноль!'
          WHEN '23000' THEN
            'Нарушение ограничения целостности!'
          ELSE 'Ошибок нет! SQLSTATE = ' || SQLSTATE;
        END;
  EXCEPTION EX_CUSTOM MSG;
END
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-gdscode">GDSCODE</link>, <link
                        linkend="internalfunc-contextvar-sqlcode">SQLCODE</link>, <link
                        linkend="error">Коды ошибок SQLSTATE</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-today">
            <info>
                <title>'TODAY'</title>
                <keywordset>
                    <keyword>'TODAY'</keyword>
                </keywordset>
            </info>

            <indexterm><primary>TODAY</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
'TODAY'                    
                    </programlisting>
                </para>
            </formalpara>

            <para>Не является переменной, а является строковым литералом. При использовании
                преобразования типов данных, например, с помощью функции CAST() в тип даты/времени
                позволяет получить текущую дату. Написание 'TODAY' не зависит от регистра, при
                преобразовании в дату функция игнорирует все пробелы слева и справа от слова.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной 'TODAY'</title>
                        <para><programlisting language="sql">
SELECT CAST('Today' AS DATE) FROM rdb$database;
 -- возвратит, например 2014-10-03
SELECT CAST('TODAY' AS TIMESTAMP) FROM rdb$database;
 -- возвратит, например 2014-10-03 00:00:00.0000

-- при использовании короткого, "C-Style" преобразования:
SELECT DATE 'Today' FROM rdb$database;
SELECT TIMESTAMP 'TODAY' FROM rdb$database;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_date">CURRENT_DATE</link>, <link
                        linkend="internalfunc-contextvar-tomorrow">TOMORROW</link>, <link
                        linkend="internalfunc-contextvar-yesterday">YESTERDAY</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-tomorrow">
            <info>
                <title>'TOMORROW'</title>
                <keywordset>
                    <keyword>'TOMORROW'</keyword>
                </keywordset>
            </info>

            <indexterm><primary>TOMORROW</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
'TOMORROW'                    
                    </programlisting>
                </para>
            </formalpara>

            <para>Не является переменной, а является строковым литералом. При использовании
                преобразования, например, с помощью функции CAST() в тип даты / времени позволяет
                получить дату, следующую за текущей. Написание 'TOMORROW' не зависит от регистра,
                при преобразовании в дату функция игнорирует все пробелы слева и справа от
                слова.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной 'TOMORROW'</title>
                        <para><programlisting language="sql">
SELECT CAST('Tomorrow' AS DATE) FROM rdb$database;
-- возвратит, например 2014-10-04

SELECT CAST('TOMORROW' AS TIMESTAMP) FROM rdb$database;
-- возвратит, например 2014-10-04 00:00:00.0000

-- при использовании короткого, "C-Style" преобразования:
SELECT DATE 'Tomorrow' FROM rdb$database;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_date">CURRENT_DATE</link>, <link
                        linkend="internalfunc-contextvar-today">TODAY</link>, <link
                        linkend="internalfunc-contextvar-yesterday">YESTERDAY</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-updating">
            <info>
                <title>UPDATING</title>
                <keywordset>
                    <keyword>UPDATING</keyword>
                </keywordset>
            </info>

            <indexterm><primary>UPDATING</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>PSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
UPDATING                     
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BOOLEAN</para>
            </formalpara>

            <para>Контекстная переменная UPDATING доступна только коде табличных триггеров.
                Используется в триггерах на несколько типов событий и показывает, что триггер
                сработал при выполнении операции UPDATE. </para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной UPDATING</title>
                        <para><programlisting language="sql">
...
IF (INSERTING OR UPDATING) THEN
BEGIN
  IF (NEW.SERIAL_NUM IS NULL) THEN
    NEW.SERIAL_NUM = GEN_ID (GEN_SERIALS, 1);
END
...
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-inserting">INSERTING</link>, <link
                        linkend="internalfunc-contextvar-deleting">DELETING</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-yesterday">
            <info>
                <title>'YERSTERDAY'</title>
                <keywordset>
                    <keyword>'YERSTERDAY'</keyword>
                </keywordset>
            </info>

            <indexterm><primary>YERSTERDAY</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL, ESQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
'YERSTERDAY'                    
                    </programlisting>
                </para>
            </formalpara>

            <para>Не является переменной, а является строковым литералом. При использовании
                преобразования, например, с помощью функции CAST() в тип даты / времени позволяет
                получить дату, предыдущую перед текущей. Написание 'YERSTERDAY' не зависит от
                регистра, при преобразовании в дату функция игнорирует все пробелы слева и справа от
                слова.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной 'YERSTERDAY'</title>
                        <para><programlisting language="sql">
SELECT CAST('Yesterday' AS DATE) FROM rdb$database;
--возвратит, например 2014-10-04

-- при использовании короткого, "C-Style" преобразования
SELECT DATE 'Yesterday' FROM rdb$database;
SELECT TIMESTAMP 'YESTERDAY' FROM rdb$database;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_date">CURRENT_DATE</link>, <link
                        linkend="internalfunc-contextvar-today">TODAY</link>, <link
                        linkend="internalfunc-contextvar-tomorrow">TOMORROW</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-contextvar-user">
            <info>
                <title>USER</title>
                <keywordset>
                    <keyword>USER</keyword>
                </keywordset>
            </info>

            <indexterm><primary>USER</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL, PSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
USER                      
                        </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>VARCHAR(63)</para>
            </formalpara>

            <para>Переменная USER содержит имя текущего подключенного пользователя базы данных. </para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование переменной USER</title>
                        <para><programlisting language="sql">
NEW.ADDED_BY = USER;
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="internalfunc-contextvar-current_user">CURRENT_USER</link>, <link
                        linkend="internalfunc-contextvar-current_role">CURRENT_ROLE</link>. </para>
            </formalpara>
        </section>
    </section>
    <section xml:id="internalfunc-func">
        <info>
            <title>Скалярные функции</title>
        </info>
        <note>
            <para>Если в вашей базе данных имя декларированной внешней функции (DECLARE EXTERNAL
                FUNCTION) совпадает с именем встроенной, то будет вызываться внешняя функция. Для
                того чтобы была доступна внутренняя функция, необходимо удалить или изменить имя
                внешней функции. </para>
        </note>
        <section xml:id="internalfunc-func-context">
            <info>
                <title>Функции для работы с контекстными переменными</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-context-getcontext">
                <info>
                    <title>RDB$GET_CONTEXT</title>
                    <keywordset>
                        <keyword>RDB$GET_CONTEXT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$GET_CONTEXT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$GET_CONTEXT('<replaceable>&lt;namespace&gt;</replaceable>', '<replaceable>varname</replaceable>')   
                            
<replaceable>&lt;namespace&gt;</replaceable> ::= SYSTEM | DDL_TRIGGER | USER_SESSION | USER_TRANSACTION                            
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RDB$GET_CONTEXT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>namespace</replaceable></entry>
                                    <entry>
                                        <para>Пространство имён.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>varname</replaceable></entry>
                                    <entry>
                                        <para>Имя переменной. Зависит от регистра. Максимальная
                                            длина 80 байт.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(32765) CHARACTER SET NONE</para>
                </formalpara>

                <para>Функция RDB$GET_CONTEXT возвращает значение контекстной переменной из одного
                    из пространства имён.</para>
                <para>В настоящий момент существуют следующие пространства имён: <itemizedlist
                        spacing="compact">
                        <listitem>
                            <para>SYSTEM — предоставляет доступ к системным контекстным переменным.
                                Эти переменные доступны только для чтения;</para>
                        </listitem>
                        <listitem>
                            <para>USER_SESSION — предоставляет доступ к пользовательским контекстным
                                переменным, заданным через функцию RDB$SET_CONTEXT. Переменные
                                существуют в течение подключения;</para>
                        </listitem>
                        <listitem>
                            <para>USER_TRANSACTION — предоставляет доступ к пользовательским
                                контекстным переменным, заданным через функцию RDB$SET_CONTEXT.
                                Переменные существуют в течение транзакции;</para>
                        </listitem>
                        <listitem>
                            <para>DDL_TRIGGER — предоставляет доступ к системным контекстным
                                переменным, доступным только во время выполнения DDL триггера. Эти
                                переменные доступны только для чтения.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>Пространства имён USER_SESSION и USER_TRANSACTION — изначально пусты и
                    пользователь сам создаёт переменные и наполняет их при помощи функции
                    RDB$SET_CONTEXT.</para>
                <note>
                    <para>Для предотвращения DoS атак, существует ограничение на 1000 переменных в
                        одном &quot;пространстве имён&quot;.</para>
                </note>
                <para>Если запрашиваемая функцией переменная существует в указанном пространстве
                    имён, то будет возвращено её значение в виде строки VARCHAR(32765) CHARACTER SET
                    NONE. При обращении к несуществующей переменной в пространстве SYSTEM возникает
                    ошибка, если такое происходит с пространствами имён USER_SESSION или
                    USER_TRANSACTION – функция возвращает NULL.</para>
                <para>Использование пространства имён DDL_TRIGGER допустимо, только во время работы
                    DDL триггера. Его использование также допустимо в хранимых процедурах и
                    функциях, вызванных триггерами DDL.</para>
                <para>Контекст DDL_TRIGGER работает как стек. Перед возбуждением DDL триггера,
                    значения, относящиеся к выполняемой команде, помещаются в этот стек. После
                    завершения работы триггера значения выталкиваются. Таким образом. В случае
                    каскадных DDL операторов, когда каждая пользовательская DDL команда возбуждает
                    DDL триггер, и этот триггер запускает другие DDL команды, с помощью EXECUTE
                    STATEMENT, значения переменных в пространстве имён DDL_TRIGGER будут
                    соответствовать команде, которая вызвала последний DDL триггер в стеке
                    вызовов.</para>
                <para>
                    <table frame="all">
                        <title>Переменные пространства имён SYSTEM</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.3*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.0*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center"> Переменная </entry>
                                    <entry align="center"> Описание </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>CLIENT_ADDRESS</entry>
                                    <entry>Для TCPv4 – IP адрес, для XNET – локальный ID процесса.
                                        Для остальных случаев NULL.</entry>
                                </row>
                                <row>
                                    <entry>CLIENT_HOST</entry>
                                    <entry>Имя хоста сетевого протокола удаленного клиента. Значение
                                        возвращается для всех поддерживаемых протоколов.</entry>
                                </row>
                                <row>
                                    <entry>CLIENT_PID</entry>
                                    <entry>PID процесса на клиентском компьютере.</entry>
                                </row>
                                <row>
                                    <entry>CLIENT_PROCESS</entry>
                                    <entry>Полный путь к клиентскому приложению, подключившемуся к
                                        базе данных. Позволяет не использовать системную таблицу
                                        MON$ATTACHMENTS (поле MON$REMOTE_PROCESS).</entry>
                                </row>
                                <row>
                                    <entry>CURRENT_ROLE</entry>
                                    <entry>Глобальная переменная CURRENT_ROLE.</entry>
                                </row>
                                <row>
                                    <entry>CURRENT_USER</entry>
                                    <entry>Глобальная переменная CURRENT_USER.</entry>
                                </row>
                                <row>
                                    <entry>EFFECTIVE_USER</entry>
                                    <entry>Эффективный пользователь в текущий момент. Указывает
                                        пользователя с привилегиями которого в текущий момент
                                        времени выполняется процедура, функция или триггер.</entry>
                                </row>
                                <row>
                                    <entry>DB_NAME</entry>
                                    <entry>Каноническое имя текущей базы данных. Это либо имя
                                        псевдонима (если соединение с помощью имён файлов запрещено
                                        DatabaseAccess = NONE) или, в противном случае,полностью
                                        расширенное имя файла базы данных.</entry>
                                </row>
                                <row>
                                    <entry>ENGINE_VERSION</entry>
                                    <entry>Версия сервера Firebird. </entry>
                                </row>
                                <row>
                                    <entry>ISOLATION_LEVEL</entry>
                                    <entry>Уровень изоляции текущей транзакции —
                                        CURRENT_TRANSACTION. Значения: &quot;READ_COMMITED&quot;,
                                        &quot;SNAPSHOT&quot; или &quot;CONSISTENCY&quot;. </entry>
                                </row>
                                <row>
                                    <entry>LOCK_TIMEOUT</entry>
                                    <entry> Время ожидания транзакцией высвобождения ресурса при
                                        блокировке, в секундах.</entry>
                                </row>
                                <row>
                                    <entry>NETWORK_PROTOCOL </entry>
                                    <entry>Протокол, используемый для соединения с базой данных.
                                        Возможные значения: &quot;TCPv4&quot;, &quot;TCPv6&quot;,
                                        &quot;WNET&quot;, &quot;XNET&quot;,  NULL. </entry>
                                </row>
                                <row>
                                    <entry>READ_ONLY</entry>
                                    <entry>Отображает, является ли транзакция, транзакцией только
                                        для чтения. FALSE для R/W транзакций TRUE для ReadOnly.
                                    </entry>
                                </row>
                                <row>
                                    <entry>SESSION_ID</entry>
                                    <entry>Глобальная переменная CURRENT_CONNECTION.</entry>
                                </row>
                                <row>
                                    <entry>TRANSACTION_ID</entry>
                                    <entry>Глобальная переменная CURRENT_TRANSACTION.</entry>
                                </row>
                                <row>
                                    <entry>GLOBAL_CN</entry>
                                    <entry>Последнее значение текущего глобального счётчика Commit
                                        Number</entry>
                                </row>
                                <row>
                                    <entry>SNAPSHOT_NUMBER</entry>
                                    <entry>Номер моментального снимка базы данных: уровеня
                                        транзакции (для транзакции SNAPSHOT или CONSISTENCY) или
                                        уровня запроса (для транзакции READ COMMITTED READ
                                        CONSISTENCY). NULL, если моментальный снимок не
                                        существует.</entry>
                                </row>
                                <row>
                                    <entry>WIRE_COMPRESSED</entry>
                                    <entry>Используется ли сжатие сетевого трафика. Если
                                        используется сжатие сетевого трафика возвращает "TRUE", если
                                        не используется — "FALSE". Для встроенных соединений —
                                        возвращает NULL.</entry>
                                </row>
                                <row>
                                    <entry>WIRE_ENCRYPTED</entry>
                                    <entry>Используется ли шифрование сетевого трафика. Если
                                        используется шифрование сетевого трафика возвращает "TRUE",
                                        если не используется — "FALSE". Для встроенных соединений —
                                        возвращает NULL.</entry>
                                </row>
                                <row>
                                    <entry>SESSION_IDLE_TIMEOUT</entry>
                                    <entry>Содержит текущее значение тайм-аут простоя соединения в
                                        секундах, который был установлен на уровне соединения, или
                                        ноль, если тайм-аут не был установлен. </entry>
                                </row>
                                <row>
                                    <entry>STATEMENT_TIMEOUT</entry>
                                    <entry>Содержит текущее значение тайм-аута выполнения оператора
                                        в миллисекундах, который был установлен на уровне
                                        подключения, или ноль, если тайм-аут не был
                                        установлен.</entry>
                                </row>
                                <row>
                                    <entry>REPLICATION_SEQUENCE</entry>
                                    <entry>Текущее значение последовательности репликации (номер
                                        последнего сегмента, записанного в журнал
                                        репликации).</entry>
                                </row>
                                <row>
                                    <entry>EXT_CONN_POOL_SIZE</entry>
                                    <entry>Размер пула внешних соединений.</entry>
                                </row>
                                <row>
                                    <entry>EXT_CONN_POOL_LIFETIME</entry>
                                    <entry>Время жизни неактивных соединений в пуле внешних
                                        соединений.</entry>
                                </row>
                                <row>
                                    <entry>EXT_CONN_POOL_IDLE_COUNT</entry>
                                    <entry>Текущее количество неактивных соединений в пуле внешних
                                        соединений.</entry>
                                </row>
                                <row>
                                    <entry>EXT_CONN_POOL_ACTIVE_COUNT</entry>
                                    <entry>Текущее количество активных соединений в пуле внешних
                                        соединений.</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <para>
                    <table frame="all">
                        <title>Переменные пространства имён DDL_TRIGGER</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.0*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center"> Переменная </entry>
                                    <entry align="center"> Описание </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>EVENT_TYPE </entry>
                                    <entry>Тип события (CREATE, ALTER, DROP). </entry>
                                </row>
                                <row>
                                    <entry>OBJECT_TYPE </entry>
                                    <entry>Тип объекта (TABLE, VIEW и др.).</entry>
                                </row>
                                <row>
                                    <entry>DDL_EVENT</entry>
                                    <entry>Имя события. DDL_EVENT = EVENT_TYPE || ' ' ||
                                        OBJECT_TYPE</entry>
                                </row>
                                <row>
                                    <entry>OBJECT_NAME</entry>
                                    <entry>Имя объекта метаданных.</entry>
                                </row>
                                <row>
                                    <entry>OLD_OBJECT_NAME</entry>
                                    <entry>Имя объекта метаданных до переименования.</entry>
                                </row>
                                <row>
                                    <entry>NEW_OBJECT_NAME</entry>
                                    <entry>Имя объекта метаданных после переименования.</entry>
                                </row>
                                <row>
                                    <entry>SQL_TEXT</entry>
                                    <entry>Текст SQL запроса.</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <note>
                    <para>Ещё раз обратите внимание на то, что пространства имён и имена переменных
                        регистрочувствительны, должны быть непустыми строками, и заключены в
                        кавычки!</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RDB$GET_CONTEXT</title>
                            <para><programlisting language="sql">
NEW.USER_ADR = RDB$GET_CONTEXT ('SYSTEM', 'CLIENT_ADDRESS');                  
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-context-setcontext">RDB$SET_CONTEXT</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-context-setcontext">
                <info>
                    <title>RDB$SET_CONTEXT</title>
                    <keywordset>
                        <keyword>RDB$SET_CONTEXT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$SET_CONTEXT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$SET_CONTEXT('<replaceable>&lt;namespace&gt;</replaceable>', '<replaceable>varname</replaceable>', {<replaceable>&lt;value&gt;</replaceable> | NULL})   
                            
<replaceable>&lt;namespace&gt;</replaceable> ::= USER_SESSION | USER_TRANSACTION                            
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RDB$SET_CONTEXT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>namespace</replaceable></entry>
                                    <entry>
                                        <para>Пространство имён.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>varname</replaceable></entry>
                                    <entry>
                                        <para>Имя переменной. Зависит от регистра. Максимальная
                                            длина 80 байт.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Данные любого типа при условии, что их можно привести
                                            к типу VARCHAR(32765) CHARACTER SET NONE.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER</para>
                </formalpara>

                <para>Функция RDB$SET_CONTEXT создаёт, устанавливает значение или обнуляет
                    переменную в одном из используемых пользователем пространстве имён: USER_SESSION
                    или USER_TRANSACTION. </para>
                <para>Функция возвращает 1, если переменная уже существовала до вызова и 0, если не
                    существовала. Для удаления переменной надо установить её значение в NULL. Если
                    данное пространство имён не существует, то функция вернёт ошибку. Пространство
                    имён и имя переменной зависят от регистра, должны быть не пустыми строками, и
                    заключены в кавычки.</para>
                <note>
                    <para>
                        <itemizedlist spacing="compact">
                            <listitem>
                                <para>Пространство имён SYSTEM доступно только для чтения;</para>
                            </listitem>
                            <listitem>
                                <para>Максимальное число переменных в рамках одного соединения (для
                                    пространства USER_SESSION) или одной транзакции (для
                                    пространства USER_TRANSACTION) равно 1000;</para>
                            </listitem>
                            <listitem>
                                <para>Все переменные в пространстве имён USER_TRANSACTION
                                    сохраняются при ROLLBACK RETAIN или ROLLBACK TO SAVEPOINT,
                                    независимо от того, в какой точке во время выполнения транзакции
                                    они были установлены.</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RDB$SET_CONTEXT</title>
                            <para><programlisting language="sql">
SELECT RDB$SET_CONTEXT ('USER_SESSION', 'DEBUGL', 3)	
FROM RDB$DATABASE;

-- в PSQL доступен такой синтаксис
RDB$SET_CONTEXT('USER_SESSION', 'RECORDSFOUND', RECCOUNTER);

SELECT RDB$SET_CONTEXT ('USER_TRANSACTION', 'SAVEPOINTS', 'YES')
FROM RDB$DATABASE;               
                </programlisting></para>
                        </example>
                        <example>
                            <title>Использование функций для работы с контекстными
                                переменными</title>
                            <para><programlisting language="sql">
SET TERM ^;
CREATE PROCEDURE set_context(User_ID VARCHAR(40), 
                             Trn_ID INT) AS
BEGIN
  RDB$SET_CONTEXT('USER_TRANSACTION', 'Trn_ID', Trn_ID);
  RDB$SET_CONTEXT('USER_TRANSACTION', 'User_ID', User_ID);
END^
SET TERM ;^

CREATE TABLE journal (
   jrn_id INTEGER NOT NULL PRIMARY KEY,
   jrn_lastuser VARCHAR(40),
   jrn_lastaddr VARCHAR(255),
   jrn_lasttran INTEGER
);

SET TERM ^;
CREATE TRIGGER UI_JOURNAL 
FOR JOURNAL BEFORE INSERT OR UPDATE
AS 
BEGIN
  new.jrn_lastuser = RDB$GET_CONTEXT('USER_TRANSACTION',
                                     'User_ID');
  new.jrn_lastaddr = RDB$GET_CONTEXT('SYSTEM',
                                     'CLIENT_ADDRESS');
  new.jrn_lasttran = RDB$GET_CONTEXT('USER_TRANSACTION',
                                         'Trn_ID');
END^
SET TERM ;^

EXECUTE PROCEDURE set_context('skidder', 1);

INSERT INTO journal(jrn_id) VALUES(0);

COMMIT;              
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-context-getcontext">RDB$GET_CONTEXT</link>.
                    </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-security">
            <info>
                <title>Функции подсистемы безопасности</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-security-roleinuse">
                <info>
                    <title>RDB$ROLE_IN_USE</title>
                    <keywordset>
                        <keyword>RDB$ROLE_IN_USE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$ROLE_IN_USE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$ROLE_IN_USE (<replaceable>role_name</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RDB$ROLE_IN_USE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>role_name</replaceable></entry>
                                    <entry>
                                        <para>Имя роли использование которой проверяется</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BOOLEAN.</para>
                </formalpara>

                <para>Функция RDB$ROLE_IN_USE возвращает используется ли роль текущим
                    пользователем.</para>

                <note>
                    <para>Данная функция позволяет проверить использование любой роли: указанной
                        явно (при входе в систему или изменённой с помощью оператора SET ROLE) и
                        назначенной неявно (роли назначенные пользователю с использованием
                        предложения DEFAULT).</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RDB$ROLE_IN_USE</title>
                            <para><programlisting language="sql">
-- Проверяем используется ли явно назначенная или 
-- неявно полученная роль MANAGER                                
IF (RDB$ROLE_IN_USE('MANAGER')) THEN
BEGIN
  ...
END
                </programlisting></para>
                        </example>
                        <example>
                            <title>Список ролей используемых текущим подключением</title>
                            <para><programlisting language="sql">
SELECT * FROM RDB$ROLES WHERE RDB$ROLE_IN_USE(RDB$ROLE_NAME)
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="security-priv-grant-role">GRANT ROLE</link>, <link
                            linkend="session-role-setrole">SET ROLE</link>, <link
                            linkend="internalfunc-contextvar-current_role">CURRENT_ROLE</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-security-sysprivelege">
                <info>
                    <title>RDB$SYSTEM_PRIVILEGE</title>
                    <keywordset>
                        <keyword>RDB$SYSTEM_PRIVILEGE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$SYSTEM_PRIVILEGE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$SYSTEM_PRIVILEGE (<replaceable>privilege</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RDB$SYSTEM_PRIVILEGE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>privilege</replaceable></entry>
                                    <entry>
                                        <para>Проверяемая системная привилегия</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BOOLEAN.</para>
                </formalpara>
                <para>Функция RDB$SYSTEM_PRIVILEGE используется системная привилегия текущим
                    соединением. Список системных привилегий см. в <link
                        linkend="security-roles-create">CREATE ROLE</link>.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RDB$SYSTEM_PRIVILEGE</title>
                            <para><programlisting language="sql">
SELECT RDB$SYSTEM_PRIVILEGE(USER_MANAGEMENT) FROM RDB$DATABASE;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="security-roles-create">CREATE ROLE</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-error">
            <info>
                <title>Функции для обработки ошибок</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-error-rdberror">
                <info>
                    <title>RDB$ERROR</title>
                    <keywordset>
                        <keyword>RDB$ERROR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$ERROR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$ERROR (<replaceable>&lt;context&gt;</replaceable>)   
                            
<replaceable>&lt;context&gt;</replaceable> ::= { GDSCODE | SQLCODE | SQLSTATE | EXCEPTION | MESSAGE }                            
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>Зависит от контекста</para>
                </formalpara>
                <para>Возвращает значение контекста активного исключения. Тип возвращаемого значения
                    зависит от контекста.</para>
                <note>
                    <para>Функция RDB$ERROR всегда возвращает NULL вне блока обработки ошибок "WHEN
                        ... DO".</para>
                </note>
                <para>Если задан контекст EXCEPTION то функция возвращает имя исключения, если
                    активно исключение определённое пользователем, и NULL если активно одно из
                    системных исключений. Для контекста EXCEPTION тип возвращаемого значения:
                    VARCHAR(63) CHARACTER SET UTF8.</para>
                <para>Если задан контекст MESSAGE то функция возвращает интерпретированный текст
                    активного исключения. Для контекста MESSAGE тип возвращаемого значения:
                    VARCHAR(1024) CHARACTER SET UTF8.</para>
                <para>Если заданы контексты GDSCODE, SQLCODE или SQLSTATE то функция возвращает
                    значение соответствующей контекстной переменной.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RDB$ERROR для сохранения текста ошибки в
                                журнал</title>
                            <para><programlisting language="sql">
...
BEGIN
...
WHEN ANY DO
  EXECUTE PROCEDURE P_LOG_EXCEPTION(RDB$ERROR(MESSAGE));
END
...
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="psql-statements-when">WHEN ... DO</link>, <link
                            linkend="psql-statements-exception">EXCEPTION</link>, <link
                            linkend="internalfunc-contextvar-gdscode">GDSCODE</link>, <link
                            linkend="internalfunc-contextvar-sqlcode">SQLCODE</link>, <link
                            linkend="internalfunc-contextvar-sqlstate">SQLSTATE</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-transaction">
            <info>
                <title>Функции работы с транзакциями</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-transaction-cn">
                <info>
                    <title>RDB$GET_TRANSACTION_CN</title>
                    <keywordset>
                        <keyword>RDB$GET_TRANSACTION_CN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RDB$GET_TRANSACTION_CN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RDB$GET_TRANSACTION_CN (<replaceable>transaction number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RDB$GET_TRANSACTION_CN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>transaction number</replaceable></entry>
                                    <entry>
                                        <para>Номер (идентификатор) транзакции</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Возвращает номер подтверждения (Commit Number) для заданной транзакции.</para>

                <note>
                    <para>Внутренние механизмы Firebird используют беззнаковое 8-байтное целое для
                        Commit Number и беззнаковое 6-байтное целое для номера транзакции. Поэтому,
                        не смотря на то, что язык SQL не имеет беззнаковых целых, а
                            <code>RDB$GET_TRANSACTION_CN</code> возвращает знаковый BIGINT, не
                        возможно увидеть отрицательный номер подтверждения, за исключением
                        нескольких специальных значений, используемых для неподтверждённых
                        транзакций.</para>
                </note>

                <para>Таким образом, числа возвращаемые <code>RDB$GET_TRANSACTION_CN</code> могут
                    иметь следующие значения: <itemizedlist spacing="compact">
                        <listitem>
                            <para>-2 — мёртвые транзакции (отмененные);</para>
                        </listitem>
                        <listitem>
                            <para>-1 — зависшие транзакции (в состоянии limbo 2PC
                                транзакций);</para>
                        </listitem>
                        <listitem>
                            <para>0 — активные транзакции;</para>
                        </listitem>
                        <listitem>
                            <para>1 — для транзакций подверждённых до старта базы данных или с
                                номером меньше чем OIT (Oldest Interesting Transaction);</para>
                        </listitem>
                        <listitem>
                            <para>&gt;1 — транзакции подтверждённые после старта базы данных;</para>
                        </listitem>
                        <listitem>
                            <para>NULL — если номер транзакции равен NULL или больше чем Next
                                Transaction.</para>
                        </listitem>
                    </itemizedlist></para>

                <example>
                    <title>Использование RDB$GET_TRANSACTION_CN</title>

                    <para>
                        <programlisting language="sql">
select rdb$get_transaction_cn(current_transaction) from rdb$database;

select rdb$get_transaction_cn(123) from rdb$database;                        
                        </programlisting>
                    </para>
                </example>

                <formalpara>
                    <title>См. также:</title>

                    <para>README.read_consistency.md</para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-math">
            <info>
                <title>Математические функции</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-math-abs">
                <info>
                    <title>ABS</title>
                    <keywordset>
                        <keyword>ABS</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ABS</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ABS (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ABS</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и входной аргумент.</para>
                </formalpara>

                <para>Функция ABS возвращает абсолютное значение (модуль) аргумента. </para>
            </section>
            <section xml:id="internalfunc-func-math-acos">
                <info>
                    <title>ACOS</title>
                    <keywordset>
                        <keyword>ACOS</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ACOS</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ACOS (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ACOS</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа в диапазоне [-1; 1].</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ACOS возвращает арккосинус (в радианах) аргумента. </para>
                <para>В случае если аргумент функции вне границы диапазона [-1, 1], то функция
                    вернёт неопределённое значения NaN.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-cos">COS</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-acosh">
                <info>
                    <title>ACOSH</title>
                    <keywordset>
                        <keyword>ACOSH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ACOSH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ACOSH (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ACOSH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа в диапазоне [1;
                                            +&#8734;].</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ACOSH возвращает гиперболический арккосинус (в радианах) аргумента. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-cosh">COSH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-asin">
                <info>
                    <title>ASIN</title>
                    <keywordset>
                        <keyword>ASIN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ASIN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ASIN (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ASIN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа в диапазоне [-1; 1].</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ASIN возвращает арксинус (в радианах) аргумента. </para>
                <para>В случае если аргумент функции вне границы диапазона [-1, 1], то функция
                    вернёт неопределённое значения NaN.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-sin">SIN</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-asinh">
                <info>
                    <title>ASINH</title>
                    <keywordset>
                        <keyword>ASINH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ASINH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ASINH (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ASINH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ASINH возвращает гиперболический арксинус (в радианах) аргумента. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-sinh">ASINH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-atan">
                <info>
                    <title>ATAN</title>
                    <keywordset>
                        <keyword>ATAN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ATAN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ATAN (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ATAN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ATAN возвращает арктангенс аргумента. </para>
                <para>Функция возвращает угол в радианах в диапазоне [-&#960;/2; &#960;/2].</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-atan2">ATAN2</link>, <link
                            linkend="internalfunc-func-math-tan">TAN</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-atan2">
                <info>
                    <title>ATAN2</title>
                    <keywordset>
                        <keyword>ATAN2</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ATAN2</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ATAN2 (<replaceable>y</replaceable>, <replaceable>x</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ATAN2</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ATAN2 возвращает угол как отношение синуса к косинусу, аргументы, у
                    которых задаются этими двумя параметрами, а знаки синуса и косинуса
                    соответствуют знакам параметров. Это позволяет получать результаты по всей
                    окружности, включая углы -&#960;/2 и &#960;/2. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Результат — угол в диапазоне [-&#960;, &#960;] радиан;</para>
                        </listitem>
                        <listitem>
                            <para>Если <replaceable>х</replaceable> отрицательный, то при нулевом
                                значении y результат равен &#960;, а при значении 0 равен
                                -&#960;;</para>
                        </listitem>
                        <listitem>
                            <para>Если и y и x равны 0, то результат бессмыслен.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <note>
                    <para>
                        <itemizedlist spacing="compact">
                            <listitem>
                                <para>Полностью эквивалентное описание этой функции следующее: ATAN2
                                    (y, x) является углом между положительной осью X и линией от
                                    начала координат до точки (x, y). Это также делает очевидным,
                                    что значение ATAN2 (0, 0) не определено;</para>
                            </listitem>
                            <listitem>
                                <para>Если <replaceable>x</replaceable> больше, чем 0, ATAN2 (y, x)
                                    совпадает с ATAN (y/x);</para>
                            </listitem>
                            <listitem>
                                <para>Если известны и синус, и косинус угла, то ATAN2 (SIN, COS)
                                    возвращает угол.</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-atan">ATAN</link>, <link
                            linkend="internalfunc-func-math-sin">SIN</link>, <link
                            linkend="internalfunc-func-math-cos">COS</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-atanh">
                <info>
                    <title>ATANH</title>
                    <keywordset>
                        <keyword>ATANH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ATANH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ATANH (<replaceable>value</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ATANH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ATANH возвращает гиперболический арктангенс (в радианах) аргумента. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-tanh">TANH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-ceil">
                <info>
                    <title>CEIL, CEILING</title>
                    <keywordset>
                        <keyword>CEIL</keyword>
                        <keyword>CEILING</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CEIL</primary></indexterm>
                <indexterm><primary>CEILING</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CEIL[ING] (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции CEIL[ING]</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT или DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция CEIL возвращает наименьшее целое число, большее или равное
                    аргументу.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-floor">FLOOR</link>, <link
                            linkend="internalfunc-func-math-trunc">TRUNC</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-cos">
                <info>
                    <title>COS</title>
                    <keywordset>
                        <keyword>COS</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COS</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COS (<replaceable>angle</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COS</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>angle</replaceable></entry>
                                    <entry>
                                        <para>Угол, выраженный в радианах.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция COS возвращает косинус угла. Аргумент должен быть задан в
                    радианах.</para>
                <para>Любой NOT NULL результат находится в диапазоне [-1, 1].</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-acos">ACOS</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-cosh">
                <info>
                    <title>COSH</title>
                    <keywordset>
                        <keyword>COSH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COSH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COSH (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COSH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция COSH возвращает гиперболический косинус аргумента.</para>
                <para>Любой NOT NULL результат находится в диапазоне [1, +&#8734;].</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-acosh">ACOSH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-cot">
                <info>
                    <title>COT</title>
                    <keywordset>
                        <keyword>COT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COT (<replaceable>angle</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>angle</replaceable></entry>
                                    <entry>
                                        <para>Угол, выраженный в радианах.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция COT возвращает котангенс угла. Аргумент должен быть задан в
                    радианах.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-tan">TAN</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-exp">
                <info>
                    <title>EXP</title>
                    <keywordset>
                        <keyword>EXP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>EXP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
EXP (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции EXP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция EXP возвращает значение натуральной экспоненты, <inlineequation>
                        <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML">
                            <mml:mrow>
                                <mml:msup>
                                    <mml:mi>e</mml:mi>
                                    <mml:mn>number</mml:mn>
                                </mml:msup>
                            </mml:mrow>
                        </mml:math>
                    </inlineequation>.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-ln">LN</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-floor">
                <info>
                    <title>FLOOR</title>
                    <keywordset>
                        <keyword>FLOOR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>FLOOR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
FLOOR (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции FLOOR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT или DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция FLOOR возвращает целое число, меньшее или равное аргументу.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-ceil">CEIL, CEILING</link>, <link
                            linkend="internalfunc-func-math-trunc">TRUNC</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-ln">
                <info>
                    <title>LN</title>
                    <keywordset>
                        <keyword>LN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LN (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция LN возвращает натуральный логарифм аргумента.</para>
                <note>
                    <para>В случае если передан отрицательный или нулевой аргумент функция вернёт
                        ошибку. </para>
                </note>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-exp">EXP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-log">
                <info>
                    <title>LOG</title>
                    <keywordset>
                        <keyword>LOG</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LOG</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LOG (<replaceable>x</replaceable>, <replaceable>y</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LOG</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Основание. Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция LOG возвращает логарифм <replaceable>y</replaceable> (второй аргумент)
                    по основанию <replaceable>x</replaceable> (первый аргумент).</para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Если один из аргументов меньше или равен 0, то возникает
                                ошибка;</para>
                        </listitem>
                        <listitem>
                            <para>Если оба аргумента равны 1, то результатом функции будет NaN
                                (Not-a-Number — не число);</para>
                        </listitem>
                        <listitem>
                            <para>Если <replaceable>x</replaceable> = 1 и
                                    <replaceable>y</replaceable> &lt; 1, то результатом функции
                                будет -INF (-&#8734;);</para>
                        </listitem>
                        <listitem>
                            <para>Если <replaceable>x</replaceable> = 1 и
                                    <replaceable>y</replaceable> &gt; 1, то результатом функции
                                будет +INF (+&#8734;).</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </section>
            <section xml:id="internalfunc-func-math-log10">
                <info>
                    <title>LOG10</title>
                    <keywordset>
                        <keyword>LOG10</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LOG10</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LOG10 (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LOG10</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция LOG10 возвращает десятичный логарифм аргумента.</para>
                <note>
                    <para>Если входной аргумент отрицательный или равен 0, возникает ошибка. </para>
                </note>
            </section>
            <section xml:id="internalfunc-func-math-mod">
                <info>
                    <title>MOD</title>
                    <keywordset>
                        <keyword>MOD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>MOD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
MOD (<replaceable>a</replaceable>, <replaceable>b</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции MOD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>a</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>b</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER или BIGINT.</para>
                </formalpara>

                <para>Функция MOD возвращает остаток от целочисленного деления. </para>
                <note>
                    <para>Вещественные числа округляются до выполнения деления. Например,
                        результатом 7.5 mod 2.5 будет 2 (8 mod 3), а не 0.</para>
                </note>
            </section>
            <section xml:id="internalfunc-func-math-pi">
                <info>
                    <title>PI</title>
                    <keywordset>
                        <keyword>PI</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>PI</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
PI ()                         
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция PI возвращает число &#960;. </para>
            </section>
            <section xml:id="internalfunc-func-math-power">
                <info>
                    <title>POWER</title>
                    <keywordset>
                        <keyword>POWER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>POWER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
POWER (<replaceable>x</replaceable>, <replaceable>y</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции POWER</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция POWER возвращает результат возведения числа
                        <replaceable>x</replaceable> в степень <replaceable>y</replaceable>.</para>
                <note>
                    <para>Если <replaceable>x</replaceable> меньше нуля, возникает ошибка.</para>
                </note>
            </section>
            <section xml:id="internalfunc-func-math-rand">
                <info>
                    <title>RAND</title>
                    <keywordset>
                        <keyword>RAND</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RAND</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RAND ()                         
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция RAND возвращает псевдослучайное число в интервале от 0 до 1. </para>
            </section>
            <section xml:id="internalfunc-func-math-round">
                <info>
                    <title>ROUND</title>
                    <keywordset>
                        <keyword>ROUND</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ROUND</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ROUND (<replaceable>number</replaceable> [, <replaceable>scale</replaceable>])                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ROUND</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>scale</replaceable></entry>
                                    <entry>
                                        <para>Масштаб — целое число, определяющее число десятичных
                                            разрядов, к которым должен быть проведено округление,
                                            т.е.
                                            <screen>
2 для округления к самому близкому кратному 0.01 числу
1 для округления к самому близкому кратному 0.1 числу
0 для округления к самому близкому целому числу
-1 для округления к самому близкому кратному 10 числу
-2 для округления к самому близкому кратному 100 числу
                                        </screen>
                                            По умолчанию 0. </para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER, масштабируемый BIGINT, DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция ROUND округляет число до ближайшего целого числа. Если дробная часть
                    равна 0.5, то округление до ближайшего большего целого числа для положительных
                    чисел и до ближайшего меньшего для отрицательных чисел. С дополнительным
                    опциональным параметром <replaceable>scale</replaceable> число может быть
                    округлено до одной из степеней числа 10 (десятки, сотни, десятые части, сотые
                    части и т.д.) вместо просто целого числа. </para>
                <note>
                    <para>Если используется параметр <replaceable>scale</replaceable>, то результат
                        имеет такой же масштаб, как и первый параметр
                            <replaceable>number</replaceable>. </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции ROUND</title>
                            <para><programlisting language="sql">
ROUND(123.654, 1) -- Результат: 123.700 (а не 123.7)
ROUND(8341.7, -3) -- Результат: 8000.0 (а не 8000)
ROUND(45.1212, 0) -- Результат: 45.0000 (а не 45)
ROUND(45.1212)    -- Результат: 45           
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-trunc">TRUNC</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-sign">
                <info>
                    <title>SIGN</title>
                    <keywordset>
                        <keyword>SIGN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>SIGN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
SIGN (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции SIGN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>SMALLINT.</para>
                </formalpara>

                <para>Функция SIGN возвращает знак входного параметра. </para>
                <para>
                    <table frame="all">
                        <title>Таблица результатов функции SIGN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.0*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center"> Результат </entry>
                                    <entry align="center"> Значение </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry> -1 </entry>
                                    <entry> число меньше нуля </entry>
                                </row>
                                <row>
                                    <entry> 0 </entry>
                                    <entry> число равно нулю </entry>
                                </row>
                                <row>
                                    <entry> 1 </entry>
                                    <entry> число больше нуля </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
            </section>
            <section xml:id="internalfunc-func-math-sin">
                <info>
                    <title>SIN</title>
                    <keywordset>
                        <keyword>SIN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>SIN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
SIN (<replaceable>angle</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции SIN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>angle</replaceable></entry>
                                    <entry>
                                        <para>Угол, выраженный в радианах.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция SIN возвращает синус угла. Аргумент должен быть задан в
                    радианах.</para>
                <para>Любой NOT NULL результат находится в диапазоне [-1, 1].</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-asin">ASIN</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-sinh">
                <info>
                    <title>SINH</title>
                    <keywordset>
                        <keyword>SINH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>SINH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
SINH (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции SINH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция SINH возвращает гиперболический синус аргумента.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-asinh">ASINH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-sqrt">
                <info>
                    <title>SQRT</title>
                    <keywordset>
                        <keyword>SQRT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>SQRT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
SQRT (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции SQRT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция SQRT возвращает квадратный корень аргумента.</para>
            </section>
            <section xml:id="internalfunc-func-math-tan">
                <info>
                    <title>TAN</title>
                    <keywordset>
                        <keyword>TAN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>TAN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
TAN (<replaceable>angle</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции TAN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>angle</replaceable></entry>
                                    <entry>
                                        <para>Угол, выраженный в радианах.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция TAN возвращает тангенс угла. Аргумент должен быть задан в
                    радианах.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-atan">ATAN</link>, <link
                            linkend="internalfunc-func-math-atan2">ATAN2</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-tanh">
                <info>
                    <title>TANH</title>
                    <keywordset>
                        <keyword>TANH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>TANH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
TANH (<replaceable>number</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции TANH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция TANH возвращает гиперболический тангенс аргумента.</para>
                <para>Любой NOT NULL результат находится в диапазоне [-1, 1].</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-atanh">ATANH</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-math-trunc">
                <info>
                    <title>TRUNC</title>
                    <keywordset>
                        <keyword>TRUNC</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>TRUNC</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
TRUNC (<replaceable>number</replaceable> [, <replaceable>scale</replaceable>])                         
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции TRUNC</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Выражение числового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>scale</replaceable></entry>
                                    <entry>
                                        <para>Масштаб — целое число, определяющее число десятичных
                                            разрядов, к которым должен быть проведено усечение, т.е.
                                            <screen>
2 для усечения к самому близкому кратному 0.01 числу
1 для усечения к самому близкому кратному 0.1 числу
0 для усечения к самому близкому целому числу
-1 для усечения к самому близкому кратному 10 числу
-2 для усечения к самому близкому кратному 100 числу
                                        </screen>
                                            По умолчанию 0.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER, масштабируемый BIGINT, DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция TRUNC усекает число до ближайшего целого числа. С дополнительным
                    опциональным параметром <replaceable>scale</replaceable> число может быть
                    усечено до одной из степеней числа 10 (десятки, сотни, десятые части, сотые
                    части и т.д.) вместо просто целого числа. </para>
                <note>
                    <para>Если используется параметр <replaceable>scale</replaceable>, то результат
                        имеет такой же масштаб, как и первый параметр
                            <replaceable>number</replaceable>. </para>
                </note>
                <important>
                    <para>Функция всегда увеличивает отрицательные числа, поскольку она обрезает
                        дробную часть. </para>
                </important>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции TRUNC</title>
                            <para><programlisting language="sql">
TRUNC(789.2225, 2)  -- Результат: 789.2200 (а не 789.22)
TRUNC(345.4, -2) 	-- Результат: 300.0 (а не 300)
TRUNC(-163.41, 0)	-- Результат: -163.00 (а не -163)
TRUNC(-163.41)      -- Результат: -163        
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-math-round">ROUND</link>, <link
                            linkend="internalfunc-func-math-ceil">CEIL, CEILING</link>, <link
                            linkend="internalfunc-func-math-floor">FLOOR</link>. </para>
                </formalpara>
            </section>
        </section>

        <section xml:id="internalfunc-func-string">
            <info>
                <title>Функции для работы со строками</title>
            </info>

            <section xml:id="internalfunc-func-string-ascii_char">
                <info>
                    <title>ASCII_CHAR</title>
                    <keywordset>
                        <keyword>ASCII_CHAR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ASCII_CHAR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ASCII_CHAR (<replaceable>code</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ASCII_CHAR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>code</replaceable></entry>
                                    <entry>
                                        <para>Целое число в диапазоне от 0 до 255.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>[VAR]CHAR(1) CHARSET NONE.</para>
                </formalpara>

                <para>Функция ASCII_CHAR возвращает ASCII символ соответствующий номеру, переданному
                    в качестве аргумента.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-ascii_val">ASCII_VAL</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-ascii_val">
                <info>
                    <title>ASCII_VAL</title>
                    <keywordset>
                        <keyword>ASCII_VAL</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ASCII_VAL</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ASCII_VAL (<replaceable>ch</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ASCII_VAL</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>ch</replaceable></entry>
                                    <entry>
                                        <para>Строка типа данных [VAR]CHAR или текстовый BLOB
                                            максимального размера 32767 байт.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>SMALLINT.</para>
                </formalpara>

                <para>Функция ASCII_VAL возвращает ASCII код символа, переданного в качестве
                    аргумента.</para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Если строка содержит более одного символа, то возвращается код
                                первого символа строки;</para>
                        </listitem>
                        <listitem>
                            <para>Если строка пустая, возвращается ноль;</para>
                        </listitem>
                        <listitem>
                            <para>Если аргумент NULL, то возвращаемое значение также NULL.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-ascii_char">ASCII_CHAR</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-bit_length">
                <info>
                    <title>BIT_LENGTH</title>
                    <keywordset>
                        <keyword>BIT_LENGTH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIT_LENGTH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIT_LENGTH (<replaceable>str</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIT_LENGTH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция BIT_LENGTH возвращает длину входной строки в битах. Для многобайтных
                    наборов символов результат может быть в 8 раз больше, чем количество символов в
                        <quote>формальном</quote> числе байт на символ, записанном в
                    RDB$CHARACTER_SETS.</para>
                <para>С параметрами типа CHAR эта функция берет во внимание всю формальную строковую
                    длину (например, объявленная длина поля или переменной). Если вы хотите получить
                        <quote>логическую</quote> длину в битах, не считая пробелов, то перед
                    передачей аргумента в BIT_LENGTH надо выполнить над ним операцию RIGHT TRIM. </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции BIT_LENGTH</title>
                            <para><programlisting language="sql">
SELECT BIT_LENGTH ('Hello!') FROM RDB$DATABASE
-- возвращает 48

SELECT BIT_LENGTH (_ISO8859_1 'Grüß Di!')
FROM RDB$DATABASE
-- возвращает 64: каждый, и ü, и ß занимают один байт в ISO8859_1

SELECT BIT_LENGTH (
CAST (_ISO8859_1 'Grüß di!' AS VARCHAR (24)
CHARACTER SET UTF8))
FROM RDB$DATABASE
-- возвращает 80: каждый, и ü, и ß занимают по два байта в UTF8

SELECT BIT_LENGTH (
CAST (_ISO8859_1 'Grüß di!' AS CHAR (24)
CHARACTER SET UTF8))
FROM RDB$DATABASE
-- возвращает 208: размер всех 24 позиций CHAR и два из них 16-битные
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-char_length">CHAR_LENGTH</link>,
                            <link linkend="internalfunc-func-string-octet_length"
                            >OCTET_LENGTH</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-char_length">
                <info>
                    <title>CHAR_LENGTH, CHARACTER_LENGTH</title>
                    <keywordset>
                        <keyword>CHAR_LENGTH</keyword>
                        <keyword>CHARACTER_LENGTH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CHAR_LENGTH</primary></indexterm>
                <indexterm><primary>CHARACTER_LENGTH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CHAR_LENGTH (<replaceable>str</replaceable>)    
                            
CHARACTER_LENGTH (<replaceable>str</replaceable>)                              
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции CHAR_LENGTH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция CHAR_LENGTH возвращает длину (в символах) строки, переданной в
                    качестве аргумента.</para>
                <note>
                    <para>С параметрами типа CHAR эта функция берет во внимание всю формальную
                        строковую длину (например, объявленная длина поля или переменной). Если вы
                        хотите получить <quote>логическую</quote> длину без учёта пробелов, то перед
                        передачей аргумента в CHAR[ACTER]_LENGTH надо выполнить над ним операцию
                        RIGHT TRIM.</para>
                </note>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-bit_length">BIT_LENGTH</link>, <link
                            linkend="internalfunc-func-string-octet_length">OCTET_LENGTH</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-left">
                <info>
                    <title>LEFT</title>
                    <keywordset>
                        <keyword>LEFT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LEFT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LEFT (<replaceable>str</replaceable>, <replaceable>num</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LEFT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>num</replaceable></entry>
                                    <entry>
                                        <para>Целое число. Определяет количество возвращаемых
                                            символов.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция LEFT возвращает левую часть строки, количество возвращаемых символов
                    определяется вторым параметром. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция поддерживает текстовые блоки любой длины и с любыми
                                наборами символов;</para>
                        </listitem>
                        <listitem>
                            <para>Если строковый аргумент BLOB, результатом будет BLOB, в противном
                                случае результатом будет VARCHAR(N), при этом N – будет равно длине
                                строкового параметра;</para>
                        </listitem>
                        <listitem>
                            <para>Если числовой параметр превысит длину текста, результатом будет
                                исходный текст.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект полностью в память. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции LEFT</title>
                            <para><programlisting language="sql">
SELECT LEFT('ABC', 2) FROM rdb$database;
-- результат AB
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-right">RIGHT</link>, <link
                            linkend="internalfunc-func-string-substring">SUBSTRING</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-lower">
                <info>
                    <title>LOWER</title>
                    <keywordset>
                        <keyword>LOWER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LOWER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LOWER (<replaceable>str</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LOWER</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция LOWER возвращает входную строку в нижнем регистре. Точный результат
                    зависит от набора символов входной строки. Например, для наборов символов NONE и
                    ASCII только ASCII символы переводятся в нижний регистр; для OCTETS — вся
                    входная строка возвращается без изменений. </para>
                <para><emphasis>Примеры:</emphasis></para>
                <example>
                    <title>Использование функции LOWER</title>
                    <para><programlisting language="sql">
/* Результат: 'debacle', в соответствии с французскими 
 * правилами приведения в нижний регистр 
 */                        
SELECT LOWER(_ISO8859_1 'Débâcle' COLLATE FR_FR)
FROM RDB$DATABASE
                </programlisting></para>
                </example>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-upper">UPPER</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-lpad">
                <info>
                    <title>LPAD</title>
                    <keywordset>
                        <keyword>LPAD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LPAD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LPAD (<replaceable>str</replaceable>, <replaceable>endlen</replaceable> [, <replaceable>padstr</replaceable>])                                                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LPAD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>endlen</replaceable></entry>
                                    <entry>
                                        <para>Длина выходной строки.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>padstr</replaceable></entry>
                                    <entry>
                                        <para>Строка, которой дополняется исходная строка до
                                            указанной длины. По умолчанию является пробелом ('
                                            ').</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(<replaceable>endlen</replaceable>) или BLOB.</para>
                </formalpara>

                <para>Функция LPAD дополняет слева входную строку пробелами или определённой
                    пользователем строкой до заданной длины. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция поддерживает текстовые блоки любой длины и с любыми
                                наборами символов;</para>
                        </listitem>
                        <listitem>
                            <para>Если входная строка имеет тип BLOB, то результат также будет BLOB,
                                в противном случае результат будет
                                    VARCHAR(<replaceable>endlen</replaceable>).</para>
                        </listitem>
                        <listitem>
                            <para>Если аргумент <replaceable>padstr</replaceable> задан, но равен
                                пустой строке (''), то дополнения строки не происходит! В случае
                                если <replaceable>endlen</replaceable> меньше длины входной строки,
                                то в результате происходит её усечение до длины
                                    <replaceable>endlen</replaceable>, даже если параметр
                                    <replaceable>padstr</replaceable> равен пустой строке.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект полностью в память. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции LPAD</title>
                            <para><programlisting language="sql">
LPAD ('Hello', 12)                -- возвращает '       Hello'
LPAD ('Hello', 12, '-')           -- возвращает '-------Hello'
LPAD ('Hello', 12, '')            -- возвращает 'Hello'
LPAD ('Hello', 12, 'abc')         -- возвращает 'abcabcaHello'
LPAD ('Hello', 12, 'abcdefghij')  -- возвращает 'abcdefgHello'
LPAD ('Hello', 2)                 -- возвращает 'He'
LPAD ('Hello', 2, '-')            -- возвращает 'He'
LPAD ('Hello', 2, '')             -- возвращает 'He'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-rpad">RPAD</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-octet_length">
                <info>
                    <title>OCTET_LENGTH</title>
                    <keywordset>
                        <keyword>OCTET_LENGTH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>OCTET_LENGTH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
OCTET_LENGTH (<replaceable>str</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции OCTET_LENGTH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция OCTET_LENGTH возвращает количество байт занимаемое строкой.</para>
                <para>При работе с параметрами типа CHAR функция возвращает значение всей формальной
                    строковой длины. Для того чтобы узнать &quot;логическую&quot; длину строки в
                    байтах, то перед передачей аргумента функции следует применить RIGHT
                    TRIM.</para>
                <note>
                    <para>Следует помнить, что не во всех наборах символов количество байт
                        занимаемых строкой равно количеству символов.</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции OCTET_LENGTH</title>
                            <para><programlisting language="sql">
SELECT OCTET_LENGTH('Hello!') 
FROM rdb$database
-- возвратит 6

SELECT OCTET_LENGTH(_iso8859_1 'Grüß di!') 
FROM rdb$database
-- возвратит 8: ü и ß занимают не более 1 байта в ISO8859_1

SELECT 
  OCTET_LENGTH(CAST(_iso8859_1 'Grüß di!' AS VARCHAR(24) CHARACTER SET utf8))
FROM rdb$database
-- возвратит 10: ü и ß занимают 2 байта в UTF8

SELECT 
  OCTET_LENGTH(CAST(_iso8859_1 'Grüß di!' AS CHAR(24) CHARACTER SET utf8))
FROM rdb$database
-- возвратит 26: всего 24 CHAR позиции, и две из них занимают 2 байта
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-bit_length">BIT_LENGTH</link>, <link
                            linkend="internalfunc-func-string-char_length">CHAR_LENGTH</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-overlay">
                <info>
                    <title>OVERLAY</title>
                    <keywordset>
                        <keyword>OVERLAY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>OVERLAY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
OVERLAY (<replaceable>string</replaceable> PLACING <replaceable>replacement</replaceable> FROM <replaceable>pos</replaceable> [FOR <replaceable>length</replaceable>])                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции OVERLAY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>string</replaceable></entry>
                                    <entry>
                                        <para>Строка, в которой происходит замена.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>replacement</replaceable></entry>
                                    <entry>
                                        <para>Строка, которой заменяется.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>pos</replaceable></entry>
                                    <entry>
                                        <para>Позиция, с которой происходит замена. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>length</replaceable></entry>
                                    <entry>
                                        <para>Количество символов, которые будут удалены из исходной
                                            строки. </para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция OVERLAY предназначена для замены части строки другой строкой. </para>
                <para>По умолчанию число удаляемых из строки символов равняется длине заменяемой
                    строки. Дополнительный четвёртый параметр позволяет пользователю задать своё
                    число символов, которые будут удалены.</para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция полностью поддерживает тестовые BLOB с любым набором
                                символов и любой длины;</para>
                        </listitem>
                        <listitem>
                            <para>Если входная строка имеет тип BLOB, то и результат будет иметь тип
                                BLOB. В противном случае тип результата будет VARCHAR(n), где n
                                является суммой длин параметров <replaceable>string</replaceable> и
                                    <replaceable>replacement</replaceable>;</para>
                        </listitem>
                        <listitem>
                            <para>Как и во всех строковых функциях SQL параметр
                                    <replaceable>pos</replaceable> является определяющим;</para>
                        </listitem>
                        <listitem>
                            <para>Если <replaceable>pos</replaceable> больше длины строки, то
                                    <replaceable>replacement</replaceable> помещается сразу после
                                окончания строки;</para>
                        </listitem>
                        <listitem>
                            <para>Если число символов от <replaceable>pos</replaceable> до конца
                                строки меньше, чем длина <replaceable>replacement</replaceable>
                                (или, чем параметр <replaceable>length</replaceable>, если он
                                задан), то строка усекается до значения pos и
                                    <replaceable>replacement</replaceable> помещается после
                                него;</para>
                        </listitem>
                        <listitem>
                            <para>При нулевом параметре <replaceable>length</replaceable> (FOR 0)
                                    <replaceable>replacement</replaceable> просто вставляется в
                                строку, начиная с позиции <replaceable>pos</replaceable>;</para>
                        </listitem>
                        <listitem>
                            <para>Если любой из параметров имеет значение NULL, то и результат будет
                                NULL;</para>
                        </listitem>
                        <listitem>
                            <para>Если параметры <replaceable>pos</replaceable> и
                                    <replaceable>length</replaceable> не являются целым числом, то
                                используется банковское округление (до чётного): 0.5 становится 0,
                                1.5 становится 2, 2.5 становится 2, 3.5 становится 4 и т.д.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB функции может потребоваться загрузить весь объект в
                        память. При больших размерах BLOB это может повлиять на производительность.
                    </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции OVERLAY</title>
                            <para><programlisting language="sql">
OVERLAY ('Goodbye' PLACING 'Hello' FROM 2) -- Результат: 'Ghelloe'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 5) -- Результат: 'GoodHello'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 8) -- Результат: 'GoodbyeHello'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 20) -- Результат: 'GoodbyeHello'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 2 FOR 0) -– Результат: 'GHellooodbye'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 2 FOR 3) -- Результат: 'GHellobye'
OVERLAY ('Goodbye' PLACING 'Hello' FROM 2 FOR 6) -- Результат: 'GHello'	
OVERLAY ('Goodbye' PLACING 'Hello' FROM 2 FOR 9) -- Результат: 'Ghello'
OVERLAY ('Goodbye' PLACING '' FROM 4) -- Результат: 'Goodbye'
OVERLAY ('Goodbye' PLACING '' FROM 4 FOR 3) -- Результат: 'Gooe'
OVERLAY ('Goodbye' PLACING '' FROM 4 FOR 20) -- Результат: 'Goo'
OVERLAY ('' PLACING 'Hello' FROM 4) -- Результат: 'Hello'
OVERLAY ('' PLACING 'Hello' FROM 4 FOR 0) -- Результат: 'Hello'
OVERLAY ('' PLACING 'Hello' FROM 4 FOR 20) -- Результат: 'Hello'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-substring">SUBSTRING</link>, <link
                            linkend="internalfunc-func-string-replace">REPLACE</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-string-position">
                <info>
                    <title>POSITION</title>
                    <keywordset>
                        <keyword>POSITION</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>POSITION</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
POSITION (<replaceable>&lt;args&gt;</replaceable>)

<replaceable>&lt;args&gt;</replaceable> ::= 
    <replaceable>substr</replaceable> IN <replaceable>string</replaceable>
  | <replaceable>substr</replaceable>, <replaceable>string</replaceable> [, <replaceable>startpos</replaceable>]                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции POSITION</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>substr</replaceable></entry>
                                    <entry>
                                        <para>Подстрока, позиция которой ищется.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>string</replaceable></entry>
                                    <entry>
                                        <para>Строка, в которой ищется позиция.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>startpos</replaceable></entry>
                                    <entry>
                                        <para>Позиция, с которой начинается поиск подстроки.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER.</para>
                </formalpara>

                <para>Функция POSITION возвращает позицию первого вхождения подстроки в строку.
                    Отсчёт начинается с 1. Третий аргумент (опциональный) задаёт позицию в строке, с
                    которой начинается поиск подстроки, тем самым игнорирую любые вхождения
                    подстроки в строку до этой позиции. Если совпадение не найдено, функция
                    возвращает 0. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Опциональный третий параметр поддерживается только вторым
                                вариантом синтаксиса (синтаксис с запятой);</para>
                        </listitem>
                        <listitem>
                            <para>Пустую строку, функция считает подстрокой любой строки. Поэтому
                                при входном параметре <replaceable>substr</replaceable>, равном ''
                                (пустая строка), и при параметре <replaceable>string</replaceable>,
                                отличном от NULL, результатом будет:<itemizedlist>
                                    <listitem>
                                        <para>1, если параметр <replaceable>startpos</replaceable>
                                            не задан;</para>
                                    </listitem>
                                    <listitem>
                                        <para>1, если параметр <replaceable>startpos</replaceable>
                                            не задан;</para>
                                    </listitem>
                                    <listitem>
                                        <para><replaceable>startpos</replaceable>, если
                                                <replaceable>startpos</replaceable> не превышает
                                            длину параметра
                                            <replaceable>string</replaceable>.</para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции POSITION</title>
                            <para><programlisting language="sql">
POSITION ('be' IN 'To be or not to be')   -- Результат: 4
POSITION ('be', 'To be or not to be')     -- Результат: 4
POSITION ('be', 'To be or not to be', 4)  -- Результат: 4
POSITION ('be', 'To be or not to be', 8)  -- Результат: 17
POSITION ('be', 'To be or not to be', 18) -- Результат: 0
POSITION ('be' in 'Alas, poor Yorick!') -- Результат: 0
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-substring">SUBSTRING</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-replace">
                <info>
                    <title>REPLACE</title>
                    <keywordset>
                        <keyword>REPLACE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REPLACE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REPLACE (<replaceable>str</replaceable>, <replaceable>find</replaceable>, <replaceable>repl</replaceable>)                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REPLACE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Строка, в которой делается замена.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>find</replaceable></entry>
                                    <entry>
                                        <para>Строка, которая ищется.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>repl</replaceable></entry>
                                    <entry>
                                        <para>Строка, на которую происходит замена.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция REPLACE заменяет в строке все вхождения одной строки на другую строку. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция поддерживает текстовые блоки любой длины и с любыми
                                наборами символов;</para>
                        </listitem>
                        <listitem>
                            <para>Если один из аргументов имеет тип BLOB, то результат будет иметь
                                тип BLOB. В противном случае результат будет иметь тип VARCHAR(N),
                                где N рассчитывается из длин <replaceable>str</replaceable>,
                                    <replaceable>find</replaceable> и
                                    <replaceable>repl</replaceable> таким образом, что даже
                                максимальное количество замен не будет вызывать переполнения
                                поля.</para>
                        </listitem>
                        <listitem>
                            <para>Если параметр <replaceable>find</replaceable> является пустой
                                строкой, то возвращается <replaceable>str</replaceable> без
                                изменений;</para>
                        </listitem>
                        <listitem>
                            <para>Если параметр <replaceable>repl</replaceable> является пустой
                                строкой, то все вхождения <replaceable>find</replaceable> удаляются
                                из строки <replaceable>str</replaceable>;</para>
                        </listitem>
                        <listitem>
                            <para>Если любой из аргументов равен NULL, то результатом всегда будет
                                NULL, даже если не было произведено ни одной замены.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект полностью в память. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции REPLACE</title>
                            <para><programlisting language="sql">
REPLACE ('Billy Wilder', 'il', 'oog')  -- возвращает 'Boogly Woogder'
REPLACE ('Billy Wilder', 'il', '')     -- возвращает 'Bly Wder'
REPLACE ('Billy Wilder', null, 'oog')  -- возвращает NULL
REPLACE ('Billy Wilder', 'il', null)   -- возвращает NULL
REPLACE ('Billy Wilder', 'xyz', null)  -- возвращает NULL (!)
REPLACE ('Billy Wilder', 'xyz', 'abc') -- возвращает 'Billy Wilder'
REPLACE ('Billy Wilder', '', 'abc')    -- возвращает 'Billy Wilder'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-overlay">OVERLAY</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-reverse">
                <info>
                    <title>REVERSE</title>
                    <keywordset>
                        <keyword>REVERSE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REVERSE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REVERSE (<replaceable>str</replaceable>)                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REVERSE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N).</para>
                </formalpara>

                <para>Функция REVERSE возвратит строку перевёрнутую &quot;задом наперёд&quot;. </para>
                <para><emphasis>Примеры:</emphasis></para>
                <example>
                    <title>Использование функции REVERSE</title>
                    <para><programlisting language="sql">
REVERSE ('spoonful')             -- возвращает 'lufnoops'
REVERSE ('Was it a cat I saw?')  -- возвращает '?was I tac a ti saW'
                </programlisting></para>
                </example>
                <tip>
                    <para>Данная функция очень удобна, если вам предстоит работать (сортировать или
                        группировать информацию) которая находится в окончаниях строк. Пример такой
                        информации – доменные имена или имена адресов электронной почты.
                        <programlisting language="sql">
CREATE INDEX ix_people_email ON people
COMPUTED BY (reverse(email));

SELECT * FROM people
WHERE REVERSE(email) STARTING WITH reverse('.br');
                </programlisting>
                    </para>
                </tip>
            </section>
            <section xml:id="internalfunc-func-string-right">
                <info>
                    <title>RIGHT</title>
                    <keywordset>
                        <keyword>RIGHT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RIGHT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RIGHT (<replaceable>str</replaceable>, <replaceable>num</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RIGHT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>num</replaceable></entry>
                                    <entry>
                                        <para>Целое число. Определяет количество возвращаемых
                                            символов.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция RIGHT возвращает конечную (правую) часть входной строки. Длина
                    возвращаемой подстроки определяется вторым параметром. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция поддерживает текстовые блоки любой длины и с любыми
                                наборами символов;</para>
                        </listitem>
                        <listitem>
                            <para>Если строковый аргумент BLOB, результатом будет BLOB, в противном
                                случае результатом будет VARCHAR(N), при этом N – будет равно длине
                                строкового параметра;</para>
                        </listitem>
                        <listitem>
                            <para>Если числовой параметр превысит длину текста, результатом будет
                                исходный текст.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект полностью в память. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RIGHT</title>
                            <para><programlisting language="sql">
SELECT RIGHT('ABC', 1) FROM rdb$database;
-- результат C
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-left">LEFT</link>, <link
                            linkend="internalfunc-func-string-substring">SUBSTRING</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-rpad">
                <info>
                    <title>RPAD</title>
                    <keywordset>
                        <keyword>RPAD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RPAD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RPAD (<replaceable>str</replaceable>, <replaceable>endlen</replaceable> [, <replaceable>padstr</replaceable>])                                                     
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RPAD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>endlen</replaceable></entry>
                                    <entry>
                                        <para>Длина выходной строки.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>padstr</replaceable></entry>
                                    <entry>
                                        <para>Строка, которой дополняется исходная строка до
                                            указанной длины. По умолчанию является пробелом ('
                                            ').</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(<replaceable>endlen</replaceable>) или BLOB.</para>
                </formalpara>

                <para>Функция RPAD дополняет справа входную строку пробелами или определённой
                    пользователем строкой до заданной длины. </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Функция поддерживает текстовые блоки любой длины и с любыми
                                наборами символов;</para>
                        </listitem>
                        <listitem>
                            <para>Если входная строка имеет тип BLOB, то результат также будет BLOB,
                                в противном случае результат будет
                                    VARCHAR(<replaceable>endlen</replaceable>).</para>
                        </listitem>
                        <listitem>
                            <para>Если аргумент <replaceable>padstr</replaceable> задан, но равен
                                пустой строке (''), то дополнения строки не происходит! В случае
                                если <replaceable>endlen</replaceable> меньше длины входной строки,
                                то в результате происходит её усечение до длины
                                    <replaceable>endlen</replaceable>, даже если параметр
                                    <replaceable>padstr</replaceable> равен пустой строке.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект полностью в память. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RPAD</title>
                            <para><programlisting language="sql">
RPAD ('Hello', 12)                -- возвращает 'Hello       '
RPAD ('Hello', 12, '-')           -- возвращает 'Hello-------'
RPAD ('Hello', 12, '')            -- возвращает 'Hello'
RPAD ('Hello', 12, 'abc')         -- возвращает 'Helloabcabca'
RPAD ('Hello', 12, 'abcdefghij')  -- возвращает 'Helloabcdefg'
RPAD ('Hello', 2)                 -- возвращает 'He'
RPAD ('Hello', 2, '-')            -- возвращает 'He'
RPAD ('Hello', 2, '')             -- возвращает 'He'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-lpad">LPAD</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-substring">
                <info>
                    <title>SUBSTRING</title>
                    <keywordset>
                        <keyword>SUBSTRING</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>SUBSTRING</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
SUBSTRING (<replaceable>&lt;args&gt;</replaceable>)                                                                                
                        
<replaceable>&lt;args&gt;</replaceable> ::= 
    <replaceable>str</replaceable> FROM <replaceable>startpos</replaceable> [FOR <replaceable>length</replaceable>]                        
  | <replaceable>str</replaceable> SIMILAR <replaceable>&lt;similar_pattern&gt;</replaceable> ESCAPE <replaceable>&lt;escape&gt;</replaceable>                     
                            
<replaceable>&lt;similar_pattern&gt;</replaceable> ::=
  <replaceable>&lt;similar pattern: R1&gt;</replaceable>
  <replaceable>&lt;escape&gt;</replaceable>&quot;<replaceable>&lt;similar pattern: R2&gt;</replaceable><replaceable>&lt;escape&gt;</replaceable>&quot;
  <replaceable>&lt;similar pattern: R3&gt;</replaceable>                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции SUBSTRING</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>startpos</replaceable></entry>
                                    <entry>
                                        <para>Позиция, с которой начинается извлечение подстроки.
                                            Целочисленное выражение.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>length</replaceable></entry>
                                    <entry>
                                        <para>Длина возвращаемой подстроки. Целочисленное
                                            выражение.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>similar_pattern</replaceable></entry>
                                    <entry>
                                        <para>Шаблон регулярного выражения SQL, по которому ищется
                                            подстрока.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>escape</replaceable></entry>
                                    <entry>
                                        <para>Символ экранирования.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция SUBSTRING возвращает подстроку строки <replaceable>str</replaceable>,
                    начиная с позиции <replaceable>startpos</replaceable> (позиция начинается с 1)
                    до конца строки или указанной длины. Без предложения FOR возвращаются все
                    оставшиеся символы в строке. С предложением FOR возвращается
                        <replaceable>length</replaceable> символов или остаток строки, в зависимости
                    от того что короче.</para>
                <para>Функция полностью поддерживает двоичные и текстовые BLOB любой длины и с любым
                    набором символов. Если параметр <replaceable>str</replaceable> имеет тип BLOB,
                    то и результат будет иметь тип BLOB. Для любых других типов результатом будет
                    тип VARCHAR(n). Для входного параметра <replaceable>str</replaceable>, не
                    являющегося BLOB, длина результата функции всегда будет равна длине строки
                        <replaceable>str</replaceable>, независимо от значений параметров
                        <replaceable>startpos</replaceable> и <replaceable>length</replaceable>. </para>
                <para>Функция SUBSTRING с регулярным выражением возвращает часть строки
                    соответствующей шаблону в предложении SIMILAR. Если соответствия не найдено, то
                    возвращается NULL. </para>
                <para>Особенности использования функции SUBSTRING с регулярным выражением:
                        <itemizedlist spacing="compact">
                        <listitem>
                            <para>Если любая из частей (R1, R2 или R3) регулярного выражения не
                                является пустой строкой и не соответствует формату
                                    <replaceable>&lt;similar_pattern&gt;</replaceable>, будет
                                возбуждено исключение;</para>
                        </listitem>
                        <listitem>
                            <para>Возвращаемое значение соответствует части R2 регулярного
                                выражения. Для этого значения истинно выражение
                                <programlisting>
<replaceable>str</replaceable> SIMILAR TO R1 || R2 || R3 ESCAPE <replaceable>&lt;escape&gt;</replaceable>                            
                                    </programlisting></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>Если любой из входных параметров имеет значение NULL, то и результат тоже
                    будет иметь значение NULL.</para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект в память полностью. При больших объёмах BLOB могут наблюдаться потери
                        производительности. </para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции SUBSTRING</title>
                            <para><programlisting language="sql">
SUBSTRING('Привет!' FROM 4 FOR 3)  -- вернёт подстроку 'вет'
                </programlisting></para>
                        </example>
                        <example>
                            <title>Использование функции SUBSTRING с регулярными выражениями</title>
                            <para><programlisting language="sql">
SUBSTRING('abcabc' SIMILAR 'a#"bcab#"c' ESCAPE '#')  -- bcab
SUBSTRING('abcabc' SIMILAR 'a#"%#"c' ESCAPE '#')     -- bcab
SUBSTRING('abcabc' SIMILAR '_#"%#"_' ESCAPE '#')     -- bcab
SUBSTRING('abcabc' SIMILAR '#"(abc)*#"' ESCAPE '#')  -- abcabc
SUBSTRING('abcabc' SIMILAR '#"abc#"' ESCAPE '#')     -- &lt;null&gt;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-position">POSITION</link>, <link
                            linkend="internalfunc-func-string-left">LEFT</link>, <link
                            linkend="internalfunc-func-string-right">RIGHT</link>, <link
                            linkend="internalfunc-func-string-char_length">CHAR_LENGTH</link>, <link
                            linkend="common-predicats-othercompare-similar">SIMILAR TO</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-trim">
                <info>
                    <title>TRIM</title>
                    <keywordset>
                        <keyword>TRIM</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>TRIM</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
TRIM ([<replaceable>&lt;adjust&gt;</replaceable>] <replaceable>str</replaceable>)

<replaceable>&lt;adjust&gt;</replaceable> ::=  {[<replaceable>&lt;where&gt;</replaceable>] [<replaceable>what</replaceable>]} FROM

<replaceable>&lt;where&gt;</replaceable> ::=  BOTH | LEADING | TRAILING                                                                                 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции TRIM</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>where</replaceable></entry>
                                    <entry>
                                        <para>Из какого места необходимо удалить подстроку. По
                                            умолчанию BOTH.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>what</replaceable></entry>
                                    <entry>
                                        <para>Подстрока, которую надо удалить (неоднократно, если
                                            таких вхождений несколько) из входной строки
                                                <replaceable>str</replaceable> в её начале и/или
                                            конце. По умолчанию является пробелом (' ').</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция TRIM удаляет начальные и /или концевые пробелы (или текст согласно
                    настройкам) из входной строки.</para>
                <para>
                    <table frame="all">
                        <title>Спецификация опций функции TRIM</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.0*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center"> Опция </entry>
                                    <entry align="center"> Описание </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry> BOTH </entry>
                                    <entry> с обеих сторон строки (по умолчанию) </entry>
                                </row>
                                <row>
                                    <entry> LEADING </entry>
                                    <entry> с начала строки </entry>
                                </row>
                                <row>
                                    <entry> TRAILING </entry>
                                    <entry> с конца строки </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Если входной параметр <replaceable>str</replaceable> имеет тип
                                BLOB, то и результат будет иметь тип BLOB. В противном случае
                                результат будет иметь тип VARCHAR(n), где n является длиной
                                параметра <replaceable>str</replaceable>;</para>
                        </listitem>
                        <listitem>
                            <para>Подстрока для удаления, если она, конечно, задана, не должна иметь
                                длину больше, чем 32767 байта. Однако при повторениях подстроки в
                                начале и/или конце входного параметра <replaceable>str</replaceable>
                                общее число удаляемых байтов может быть гораздо больше.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <warning>
                    <para>При использовании BLOB в параметрах функции может потребоваться загрузить
                        объект в память полностью. При больших объёмах BLOB могут наблюдаться потери
                        производительности.</para>
                </warning>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции TRIM</title>
                            <para><programlisting language="sql">
SELECT TRIM (' Waste no space ')
FROM RDB$DATABASE -- Результат: 'Waste no space'

SELECT TRIM (LEADING FROM ' Waste no space ')
FROM RDB$DATABASE -- Результат: 'Waste no space '

SELECT TRIM (LEADING '.' FROM ' Waste no space ')
FROM RDB$DATABASE -- Результат: ' Waste no space '

SELECT TRIM (TRAILING '!' FROM 'Help!!!!')
FROM RDB$DATABASE -- Результат: 'Help'

SELECT TRIM ('la' FROM 'lalala I love you Ella')
FROM RDB$DATABASE -- Результат: ' I love you El'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-overlay">OVERLAY</link>, <link
                            linkend="internalfunc-func-string-replace">REPLACE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-string-upper">
                <info>
                    <title>UPPER</title>
                    <keywordset>
                        <keyword>UPPER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>UPPER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
UPPER (<replaceable>str</replaceable>)                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции UPPER</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR(N) или BLOB.</para>
                </formalpara>

                <para>Функция UPPER возвращает входную строку в верхнем регистре. Точный результат
                    зависит от набора символов входной строки. Например, для наборов символов NONE и
                    ASCII только ASCII символы переводятся в верхний регистр; для OCTETS — вся
                    входная строка возвращается без изменений. </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции UPPER</title>
                            <para><programlisting language="sql">
/* Результат: 'DEBACLE', в соответствии с французскими 
 * правилами приведения в верхний регистр 
 */                        
SELECT UPPER(_ISO8859_1 'Débâcle' COLLATE FR_FR)
FROM RDB$DATABASE
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-string-lower">LOWER</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-datetime">
            <info>
                <title>Функции для работы с датой и временем</title>
            </info>

            <section xml:id="internalfunc-func-datetime-attimezone">
                <info>
                    <title>AT</title>
                    <keywordset>
                        <keyword>AT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>AT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>                                                           
<replaceable>&lt;expr&gt;</replaceable> AT {TIME ZONE <replaceable>&lt;time zone string&gt;</replaceable> | LOCAL}                       
                        
<replaceable>&lt;time zone string&gt;</replaceable> ::=
    '<replaceable>&lt;time zone&gt;</replaceable>'                            
                            
<replaceable>&lt;time zone&gt;</replaceable> ::=
    <replaceable>&lt;time zone region&gt;</replaceable> |
    [+/-] <replaceable>&lt;hour displacement&gt;</replaceable> [: <replaceable>&lt;minute displacement&gt;</replaceable>]                         
                        </programlisting>
                    </para>
                </formalpara>

                <para>Преобразует время или временную метку в указанный часовой пояс. Если
                    используется ключевое слово LOCAL, то преобразование происходит в часовой пояс
                    сессии.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции AT</title>
                            <para><programlisting language="sql">
select time '12:00 GMT' at time zone '-03'
  from rdb$database;

select current_timestamp at time zone 'America/Sao_Paulo'
  from rdb$database;

select timestamp '2018-01-01 12:00 GMT' at local
  from rdb$database;
                </programlisting>
                            </para>
                        </example>
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-datetime-dateadd">
                <info>
                    <title>DATEADD</title>
                    <keywordset>
                        <keyword>DATEADD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>DATEADD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DATEADD (<replaceable>&lt;args&gt;</replaceable>)
                            
<replaceable>&lt;args&gt;</replaceable> ::= <replaceable>amount</replaceable> <replaceable>&lt;unit&gt;</replaceable> TO <replaceable>datetime</replaceable>
         | <replaceable>&lt;unit&gt;</replaceable>, <replaceable>amount</replaceable>, <replaceable>datetime</replaceable> 
                            
<replaceable>&lt;unit&gt;</replaceable> ::= 
    YEAR | MONTH | WEEK | DAY | WEEKDAY | YEARDAY
  | HOUR | MINUTE | SECOND | MILLISECOND                           
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции DATEADD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>amount</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа SMALLINT, INTEGER, BIGINT или NUMERIC
                                            (отрицательное вычитается).</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>unit</replaceable></entry>
                                    <entry>
                                        <para>Составляющая даты/времени.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>datetime</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE, TIME или TIMESTAMP.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>определяется третьим аргументом функции. </para>
                </formalpara>

                <para>Функция DATEADD позволяет добавить заданное число лет, месяцев, недель, часов,
                    минут, секунд, миллисекунд к заданному значению даты/времени.</para>
                <note>
                    <para>
                        <itemizedlist spacing="compact">
                            <listitem>
                                <para>С аргументом типа TIMESTAMP и DATE можно использовать любую
                                    составляющую даты/времени
                                        (<replaceable>&lt;unit&gt;</replaceable>);</para>
                            </listitem>
                            <listitem>
                                <para>Для типа данных TIME разрешается использовать только HOUR,
                                    MINUTE, SECOND и MILLISECOND.</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции DATEADD</title>
                            <para><programlisting language="sql">
DATEADD (28 DAY TO CURRENT_DATE)
DATEADD (-6 HOUR TO CURRENT_TIME)
DATEADD (MONTH, 9, DATEOFCONCEPTION)
DATEADD (-38 WEEK TO DATEOFBIRTH)
DATEADD (MINUTE, 90, TIME 'NOW')
DATEADD (? YEAR TO DATE '11-SEP-1973')

SELECT 
  CAST(DATEADD(-1 * EXTRACT(MILLISECOND FROM ts) MILLISECOND TO ts) AS VARCHAR(30)) AS t, 
  EXTRACT(MILLISECOND FROM ts) AS ms 
FROM ( 
    SELECT TIMESTAMP'2014-06-09 13:50:17.4971' as ts 
    FROM RDB$DATABASE 
) a 
                </programlisting>
                                <screen>
T                             MS
------------------------------------    
2014-06-09 13:50:17.0000	497.1 
</screen>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-datetime-datediff">DATEDIFF</link>, <link
                            linkend="types-datetime-operation">Операции, использующие значения даты
                            и времени</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-datetime-datediff">
                <info>
                    <title>DATEDIFF</title>
                    <keywordset>
                        <keyword>DATEDIFF</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>DATEDIFF</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DATEDIFF (<replaceable>&lt;args&gt;</replaceable>)
                            
<replaceable>&lt;args&gt;</replaceable> ::= <replaceable>&lt;unit&gt;</replaceable> FROM <replaceable>moment_1</replaceable> TO <replaceable>moment_2</replaceable>
         | <replaceable>&lt;unit&gt;</replaceable>, <replaceable>moment_1</replaceable>, <replaceable>moment_2</replaceable> 
                            
<replaceable>&lt;unit&gt;</replaceable> ::= 
    YEAR | MONTH | WEEK | DAY | WEEKDAY | YEARDAY
  | HOUR | MINUTE | SECOND | MILLISECOND                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции DATEDIFF</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>unit</replaceable></entry>
                                    <entry>
                                        <para>Составляющая даты/времени.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>monent_1</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE, TIME или TIMESTAMP.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>monent_2</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE, TIME или TIMESTAMP.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция DATEDIFF возвращает количество лет, месяцев, недель, дней, часов,
                    минут, секунд или миллисекунд между двумя значениями даты/времени.</para>
                <para>Особенности использования: <itemizedlist spacing="compact">
                        <listitem>
                            <para>Параметры DATE и TIMESTAMP могут использоваться совместно.
                                Совместное использование типа TIME с типами DATE и TIMESTAMP не
                                разрешается;</para>
                        </listitem>
                        <listitem>
                            <para>С аргументом типа TIMESTAMP и DATE можно использовать любую
                                составляющую даты/времени
                                (<replaceable>&lt;unit&gt;</replaceable>);</para>
                        </listitem>
                        <listitem>
                            <para>Для типа данных TIME разрешается использовать только HOUR, MINUTE,
                                SECOND и MILLISECOND.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <note>
                    <para>
                        <itemizedlist spacing="compact">
                            <listitem>
                                <para>Функция DATEDIFF не проверяет разницу в более мелких
                                    составляющих даты/времени, чем задана в первом аргументе
                                        (<replaceable>&lt;unit&gt;</replaceable>). В результате
                                    получаем:
                                    <programlisting>
- DATEDIFF (YEAR, DATE '1-JAN-2009', DATE '31-DEC-2009') = 0, но 
- DATEDIFF (YEAR, DATE '31-DEC-2009', DATE '1-JAN-2010') = 1
                                </programlisting>
                                </para>
                            </listitem>
                            <listitem>
                                <para>Однако для более мелких составляющих даты/времени имеем:
                                    <programlisting>
- DATEDIFF (DAY, DATE '26-JUN-1908', DATE '11-SEP-1973') = 23818 
- DATEDIFF (DAY, DATE '30-NOV-1971', DATE '8-JAN-1972') = 39
                                </programlisting>
                                </para>
                            </listitem>
                            <listitem>
                                <para>Отрицательное значение функции говорит о том, что дата/время в
                                        <replaceable>moment_2</replaceable> меньше, чем в
                                        <replaceable>moment_1</replaceable>. </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции DATEDIFF</title>
                            <para><programlisting language="sql">
DATEDIFF (HOUR FROM CURRENT_TIMESTAMP TO TIMESTAMP '12-JUN-2059 06:00')
DATEDIFF (MINUTE FROM TIME '0:00' TO CURRENT_TIME)
DATEDIFF (MONTH, CURRENT_DATE, DATE '1-1-1900')
DATEDIFF (DAY FROM CURRENT_DATE TO CAST (? AS DATE))
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-datetime-dateadd">DATEADD</link>, <link
                            linkend="types-datetime-operation">Операции, использующие значения даты
                            и времени</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-datetime-extract">
                <info>
                    <title>EXTRACT</title>
                    <keywordset>
                        <keyword>EXTRACT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>EXTRACT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
EXTRACT (<replaceable>&lt;part&gt;</replaceable> FROM <replaceable>datetime</replaceable>) 
                            
<replaceable>&lt;part&gt;</replaceable> ::= 
    YEAR | MONTH | WEEK | DAY | WEEKDAY | YEARDAY
  | HOUR | MINUTE | SECOND | MILLISECOND
  | TIMEZONE_HOUR | TIMEZONE_MINUTE                             
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции EXTRACT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>part</replaceable></entry>
                                    <entry>
                                        <para>Составляющая даты/времени.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>datetime</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE, TIME или TIMESTAMP.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>SMALLINT или NUNERIC.</para>
                </formalpara>

                <para>Функция EXTRACT извлекает составляющие даты и времени из типов данных DATE,
                    TIME и TIMESTAMP.</para>
                <para>
                    <table frame="all">
                        <title>Типы и диапазоны результатов функции EXTRACT</title>
                        <tgroup cols="4">
                            <colspec colname="c1" colnum="1" colwidth="1.0*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="1.0*" align="left"/>
                            <colspec colname="c3" colnum="3" colwidth="1.0*" align="left"/>
                            <colspec colname="c4" colnum="4" colwidth="1.0*" align="left"/>
                            <thead>
                                <row>
                                    <entry align="center"> Составляющая даты/времени </entry>
                                    <entry align="center"> Тип </entry>
                                    <entry align="center"> Диапазон </entry>
                                    <entry align="center"> Комментарий </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>YEAR </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>1–9999 </entry>
                                    <entry>Год</entry>
                                </row>
                                <row>
                                    <entry>MONTH </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>1–12 </entry>
                                    <entry>Месяц</entry>
                                </row>
                                <row>
                                    <entry>WEEK </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>1–53 </entry>
                                    <entry>Номер недели в году</entry>
                                </row>
                                <row>
                                    <entry>DAY </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>1–31 </entry>
                                    <entry>День</entry>
                                </row>
                                <row>
                                    <entry>WEEKDAY </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>0–6 </entry>
                                    <entry>День недели. 0 — Воскресенье </entry>
                                </row>
                                <row>
                                    <entry>YEARDAY </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>0–365 </entry>
                                    <entry>Номер дня в году. 0 = 1 января </entry>
                                </row>
                                <row>
                                    <entry>HOUR </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>0–23 </entry>
                                    <entry>Часы</entry>
                                </row>
                                <row>
                                    <entry>MINUTE </entry>
                                    <entry>SMALLINT </entry>
                                    <entry>0–59 </entry>
                                    <entry>Минуты</entry>
                                </row>
                                <row>
                                    <entry>SECOND </entry>
                                    <entry>NUMERIC(9,4) </entry>
                                    <entry>0.0000–59.9999 </entry>
                                    <entry>Секунды. Включает в себя миллисекунды </entry>
                                </row>
                                <row>
                                    <entry>MILLISECOND </entry>
                                    <entry>NUMERIC(9,1) </entry>
                                    <entry>0.0–999.9 </entry>
                                    <entry>Миллисекунды</entry>
                                </row>
                                <row>
                                    <entry>TIMEZONE_HOUR</entry>
                                    <entry>SMALLINT</entry>
                                    <entry>от -14 до +14</entry>
                                    <entry>Смещение часов часового пояса</entry>
                                </row>
                                <row>
                                    <entry>TIMEZONE_MINUTE</entry>
                                    <entry>SMALLINT</entry>
                                    <entry>от -59 до +59</entry>
                                    <entry>Смещение минут часового пояса</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <note>
                    <para>Если составляющая даты/времени не присутствует в аргументе дата/время,
                        например SECOND в аргументе с типом DATE или YEAR в TIME, то функция вызовет
                        ошибку.</para>
                </note>
                <para>Из аргумента с типом данных DATE или TIMESTAMP можно извлекать номер недели. В
                    соответствии со стандартом ISO-8601 неделя начинается с понедельника и всегда
                    включает в себя 7 дней. Первой неделей года является первая неделя, у которой в
                    ней больше дней в новом году (по крайней мере, 4): дни 1-3 могут принадлежать
                    предыдущей неделе (52 или 53) прошлого года. По аналогии дни 1-3 текущего года
                    могут принадлежать 1 неделе следующего года. </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции EXTRACT</title>
                            <para><programlisting language="sql">
/* получить по дате номер квартала */
SELECT (EXTRACT(MONTH FROM CURRENT_TIMESTAMP)-1)/3+1
FROM RDB$DATABASE
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="types-datetime">Типы данных для работы с датой и
                            временем</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-datetime-firstday">
                <info>
                    <title>FIRST_DAY</title>
                    <keywordset>
                        <keyword>FIRST_DAY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>FIRST_DAY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
FIRST_DAY( OF <replaceable>&lt;part&gt;</replaceable> FROM <replaceable>&lt;date_or_timestamp&gt;</replaceable> )   
                            
<replaceable>&lt;part&gt;</replaceable> ::= { YEAR | MONTH | WEEK }                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции FIRST_DAY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>part</replaceable></entry>
                                    <entry>
                                        <para>Составляющая даты/времени.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>date_or_timestamp</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE или TIMESTAMP.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DATE или TIMESTAMP.</para>
                </formalpara>

                <para>Возвращает первый день года, месяца или недели для заданной даты.</para>

                <note>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Первым днём недели считается воскресенье, как это возвращает
                                    функция EXTRACT с частью WEEKDAY.</para>
                            </listitem>
                            <listitem>
                                <para>Когда в качестве аргумента функции передаётся выражение типа
                                    TIMESTAMP, то возвращаемое значение сохраняет временную
                                    часть.</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции FIRST_DAY</title>
                            <para><programlisting language="sql">
SELECT FIRST_DAY(OF MONTH FROM current_date) FROM rdb$database;
SELECT FIRST_DAY(OF YEAR FROM current_timestamp) FROM rdb$database;
SELECT FIRST_DAY(OF WEEK FROM date '2017-11-01') FROM rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-datetime-lastday">LAST_DAY</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-datetime-lastday">
                <info>
                    <title>LAST_DAY</title>
                    <keywordset>
                        <keyword>LAST_DAY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LAST_DAY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LAST_DAY( OF <replaceable>&lt;part&gt;</replaceable> FROM <replaceable>&lt;date_or_timestamp&gt;</replaceable> )   
                            
<replaceable>&lt;part&gt;</replaceable> ::= { YEAR | MONTH | WEEK }                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции LAST_DAY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>part</replaceable></entry>
                                    <entry>
                                        <para>Составляющая даты/времени.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>date_or_timestamp</replaceable></entry>
                                    <entry>
                                        <para>Выражение типа DATE или TIMESTAMP.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DATE или TIMESTAMP.</para>
                </formalpara>

                <para>Возвращает последний день года, месяца или недели для заданной даты.</para>

                <note>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Последним днём недели считается суббота, как это возвращает
                                    функция EXTRACT с частью WEEKDAY.</para>
                            </listitem>
                            <listitem>
                                <para>Когда в качестве аргумента функции передаётся выражение типа
                                    TIMESTAMP, то возвращаемое значение сохраняет временную
                                    часть.</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции LAST_DAY</title>
                            <para><programlisting language="sql">
SELECT LAST_DAY(OF MONTH FROM current_date) FROM rdb$database;
SELECT LAST_DAY(OF YEAR FROM current_timestamp) FROM rdb$database;
SELECT LAST_DAY(OF WEEK FROM date '2017-11-01') FROM rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-datetime-firstday">FIRST_DAY</link>.
                    </para>
                </formalpara>
            </section>
        </section>

        <section xml:id="internalfunc-func-decfloat">
            <info>
                <title>Функции для работы с типом DECFLOAT</title>
            </info>

            <section xml:id="internalfunc-func-decfloat-compare_decfloat">
                <info>
                    <title>COMPARE_DECFLOAT</title>
                    <keywordset>
                        <keyword>COMPARE_DECFLOAT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COMPARE_DECFLOAT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COMPARE_DECFLOAT (<replaceable>value1</replaceable>, <replaceable>value2</replaceable>)                                                    
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COMPARE_DECFLOAT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value1</replaceable>,
                                            <replaceable>value2</replaceable></entry>
                                    <entry>
                                        <para>Значения типа DECFLOAT.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>SMALLINT.</para>
                </formalpara>

                <para>Функция COMPARE_DECFLOAT сравнивает два значения типа DECFLOAT, которые могут
                    быть одинаковыми, разными или неупорядоченными.</para>

                <para>Функция возвращает: <itemizedlist>
                        <listitem>
                            <para>0 - если значения равны;</para>
                        </listitem>
                        <listitem>
                            <para>1 - если первое значение меньше чем второе;</para>
                        </listitem>
                        <listitem>
                            <para>2 - если первое значение больше чем второе;</para>
                        </listitem>
                        <listitem>
                            <para>3 - значения не упорядочены (одно или оба NAN / SNAN).</para>
                        </listitem>
                    </itemizedlist></para>

                <para>В отличие от операторов сравнения (&lt;, &gt;, = и др.) сравнение с помощью
                    COMPARE_DECFLOAT является точным, т.е.
                    <programlisting language="sql">
COMPARE_DECFLOAT(2.17, 2.170)                       
                    </programlisting>
                    вернёт 2, а не 0. </para>
            </section>

            <section xml:id="internalfunc-func-decfloat-normalize_decfloat">
                <info>
                    <title>NORMALIZE_DECFLOAT</title>
                    <keywordset>
                        <keyword>NORMALIZE_DECFLOAT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>NORMALIZE_DECFLOAT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
NORMALIZE_DECFLOAT (<replaceable>value</replaceable>)                                                    
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции NORMALIZE_DECFLOAT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Значение типа DECFLOAT.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DECFLOAT.</para>
                </formalpara>

                <para>Функция NORMALIZE_DECFLOAT возвращает число в нормализованном виде. Это
                    обозначает, что для любого ненулевого значения удаляются завершающие нули с
                    соответствующей коррекцией экспоненты.</para>

                <example>
                    <title>Нормализация различных значений типа DECFLOAT</title>

                    <para>
                        <programlisting language="sql"> 
NORMALIZE_DECFLOAT(12.00) -- возвращает 12
NORMALIZE_DECFLOAT(120) -- возвращает 1.2E+2
                </programlisting>
                    </para>
                </example>
            </section>

            <section xml:id="internalfunc-func-decfloat-quantize">
                <info>
                    <title>QUANTIZE</title>
                    <keywordset>
                        <keyword>QUANTIZE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>QUANTIZE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
QUANTIZE (<replaceable>value</replaceable>, <replaceable>pattern</replaceable>)                                                    
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции NORMALIZE_DECFLOAT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>Значение типа DECFLOAT.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>pattern</replaceable></entry>
                                    <entry>
                                        <para>Значение шаблона типа DECFLOAT, по которому будет
                                            отмасштабирован значение первого аргумента.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DECFLOAT.</para>
                </formalpara>
                <para>Функция QUANTIZE возвращает значение первого аргумента масштабированным с
                    использованием второго значения в качестве шаблона. Другими словами функция
                    QUANTIZE возвращает значение DECFLOAT, равное по значению (за исключением любого
                    округления) и знаку <replaceable>value</replaceable>, а также экспоненте, равной
                    по значению экспоненте <replaceable>pattern</replaceable>. Функцию QUANTIZE
                    можно использовать для реализации округления с точностью до нужного знака,
                    например, округление до ближайшего цента с использованием установленного режима
                    округления DECFLOAT.</para>
                <note>
                    <para>Для значения шаблона не никаких ограничений, тем не менее при
                        использовании SNaN функция выдаст исключение, при использовании NULL
                        результатом будет NULL и т.д.</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции QUANTIZE</title>
                            <para><programlisting language="sql">
select v, pic, quantize(v, pic) from examples;
                </programlisting></para>
                            <para>
                                <screen>
V                       PIC                   QUANTIZE
======================= ===================== ==================
                   3.16                 0.001              3.160
                   3.16                 0.01               3.16
                   3.16                 0.1                3.2
                   3.16                 1                  3
                   3.16                 1E+1               0E+1
                   -0.1                 1                 -0
                      0                 1E+5               0E+5
                    316                 0.1              316.0
                    316                 1                316
                    316                 1E+1             3.2E+2
                    316                 1E+2               3E+2                                    
                                </screen>
                            </para>
                        </example>
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-decfloat-totalorder">
                <info>
                    <title>TOTALORDER</title>
                    <keywordset>
                        <keyword>TOTALORDER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>TOTALORDER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
TOTALORDER (<replaceable>value1</replaceable>, <replaceable>value2</replaceable>)                                                    
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции TOTALORDER</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value1</replaceable>,
                                            <replaceable>value2</replaceable></entry>
                                    <entry>
                                        <para>Значения типа DECFLOAT.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>SMALLINT.</para>
                </formalpara>
                <para>Функция TOTALORDER сравнивает два значения типа DECFLOAT, включая специальные
                    значения. Сравнение является точным. </para>
                <para>Функция возвращает:<itemizedlist>
                        <listitem>
                            <para>-1 — если первое значение меньше второго;</para>
                        </listitem>
                        <listitem>
                            <para>0 — если значения равны;</para>
                        </listitem>
                        <listitem>
                            <para>1 — если первое значение больше второго.</para>
                        </listitem>
                    </itemizedlist></para>
                <para>Значения DEFLOAT в следующем виде:
                    <programlisting>
-nan &lt; -snan &lt; -inf &lt; -0.1 &lt; -0.10 &lt; -0 &lt; 0 &lt; 0.10 &lt; 0.1 &lt; inf &lt; snan &lt; nan                                                
                        </programlisting>
                </para>
            </section>
        </section>

        <section xml:id="internalfunc-func-binary">
            <info>
                <title>Кодирование и декодирование бинарных данных</title>
            </info>

            <section xml:id="internalfunc-func-binary-base64_encode">
                <info>
                    <title>BASE64_ENCODE</title>
                    <keywordset>
                        <keyword>BASE64_ENCODE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BASE64_ENCODE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BASE64_ENCODE (<replaceable>&lt;binary data&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARCHAR.</para>
                </formalpara>
                <para>Функция BASE64_ENCODE кодирует входные данные в представлении BASE64. Функция
                    может работать как с символьной строкой, так и с BLOB.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции BASE64_ENCODE</title>
                            <para><programlisting language="sql">
select base64_encode(public_key) from clients;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-binary-base64_decode">BASE64_DECODE</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-binary-base64_decode">
                <info>
                    <title>BASE64_DECODE</title>
                    <keywordset>
                        <keyword>BASE64_DECODE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BASE64_DECODE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BASE64_DECODE (<replaceable>&lt;base64 data&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARCHAR.</para>
                </formalpara>
                <para>Функция BASE64_DECODE декодирует входные данные из представления BASE64.
                    Функция может работать как с символьной строкой, так и с BLOB.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-binary-base64_encode">BASE64_ENCODE</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-binary-hex_encode">
                <info>
                    <title>HEX_ENCODE</title>
                    <keywordset>
                        <keyword>HEX_ENCODE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>HEX_ENCODE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
HEX_ENCODE (<replaceable>&lt;binary data&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARCHAR.</para>
                </formalpara>
                <para>Функция HEX_ENCODE кодирует двоичные данные в шестнадцатеричное представлении.
                    Функция может работать как с символьной строкой, так и с BLOB.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции HEX_ENCODE</title>
                            <para><programlisting language="sql">
select hex_encode(public_key) from clients;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>
                    
                    <para>
                        <link linkend="internalfunc-func-binary-hex_decode">HEX_DECODE</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-binary-hex_decode">
                <info>
                    <title>HEX_DECODE</title>
                    <keywordset>
                        <keyword>HEX_DECODE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>HEX_DECODE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
HEX_DECODE (<replaceable>&lt;hex data&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARBINARY.</para>
                </formalpara>
                <para>Функция HEX_DECODE декодирует данные в шестнадцатеричном представлении в
                    двоичные данные. Функция может работать как с символьной строкой, так и с
                    BLOB.</para>
                <formalpara>
                    <title>См. также:</title>
                    
                    <para>
                        <link linkend="internalfunc-func-binary-hex_encode">HEX_ENCODE</link>.
                    </para>
                </formalpara>
            </section>
        </section>

        <section xml:id="internalfunc-func-hash">
            <info>
                <title>Хеш функции</title>
            </info>

            <section xml:id="internalfunc-func-hash-hash">
                <info>
                    <title>HASH</title>
                    <keywordset>
                        <keyword>HASH</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>HASH</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
HASH (<replaceable>str</replaceable> [USING <replaceable>&lt;algorithm&gt;</replaceable>])        
                            
<replaceable>&lt;algorithm&gt;</replaceable> ::= { MD5 | SHA1 | SHA256 | SHA512 }                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции HASH</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>str</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT или VARBINARY.</para>
                </formalpara>

                <para>Функция HASH возвращает хэш-значение входной строки. Эта функция полностью
                    поддерживает текстовые BLOB любой длины и с любым набором символов. </para>

                <para>Если предложение USING не указано, то функция возвращает BIGINT. В этом случае
                    используется 64-битный вариант некриптографической хэш-функции PJW (также
                    известной как ELF64) <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="https://en.wikipedia.org/wiki/PJW_hash_function"
                        >https://en.wikipedia.org/wiki/PJW_hash_function</link>. Эта функция очень
                    быстра и может использоваться для общих целей (хеш-таблицы и т. д.), но имеет
                    большое количество коллизий. Для более надёжного хэширования рекомендуется
                    использовать другие алгоритмы указывая их с помощью предложения USING.</para>

                <para>Предложение USING позволяет указать алгоритм по которому вычисляет хэш. В этом
                    случае функция возвращает результат с типом VARCHAR с кодировкой OCTETS.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции HASH</title>
                            <para><programlisting language="sql">
SELECT HASH(x) FROM MyTable;
-- результат типа BIGINT

SELECT HASH(x USING SHA256) FROM MyTable;
-- результат типа VARCHAR с кодировкой OCTETS
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
            </section>
        </section>

        <section xml:id="internalfunc-func-crypt">
            <info>
                <title>Криптографические функции</title>
            </info>

            <para>В Firebird 4.0 поддерживается только подмножество симметричных алгоритмов
                шифрования (как блочных так и потоковых), так и RSA.</para>

            <section xml:id="internalfunc-func-crypt-crc32">
                <info>
                    <title>CRC32</title>
                    <keywordset>
                        <keyword>CRC32</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CRC32</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CRC32 (<replaceable>&lt;data&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR.</para>
                </formalpara>
                <para>Функция CRC32 возвращает CRC-32 с полиномом 0x04C11DB7. Функция может работать
                    с любым типом данных.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции CRC32</title>
                            <para><programlisting language="sql">
select crc32(job_title) from job;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-encrypt">
                <info>
                    <title>ENCRYPT</title>
                    <keywordset>
                        <keyword>ENCRYPT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ENCRYPT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ENCRYPT (<replaceable>&lt;data&gt;</replaceable> [USING <replaceable>&lt;algorithm&gt;</replaceable>] [MODE <replaceable>&lt;mode&gt;</replaceable>] KEY <replaceable>&lt;key&gt;</replaceable>
  [IV <replaceable>&lt;iv&gt;</replaceable>] [<replaceable>&lt;endianness&gt;</replaceable>] [CTR_LENGTH <replaceable>&lt;ctr_length&gt;</replaceable>] [COUNTER <replaceable>&lt;counter&gt;</replaceable>])        
                            
<replaceable>&lt;algorithm&gt;</replaceable> ::= { <replaceable>&lt;block_cipher&gt;</replaceable> | <replaceable>&lt;stream_cipher&gt;</replaceable> }

<replaceable>&lt;block_cipher&gt;</replaceable> ::= 
  { AES | ANUBIS | BLOWFISH | KHAZAD | RC5 | RC6 | SAFER+ | TWOFISH | XTEA }  

<replaceable>&lt;stream_cipher&gt;</replaceable> ::= { CHACHA20 | RC4 | SOBER128 }

<replaceable>&lt;mode&gt;</replaceable> ::= { CBC | CFB | CTR | ECB | OFB }

<replaceable>&lt;endianness&gt;</replaceable> ::= { CTR_BIG_ENDIAN | CTR_LITTLE_ENDIAN }
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции ENCRYPT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа или BLOB, которое необходимо
                                            зашифровать.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>algorithm</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм шифрования. Поддерживаются как блочные, так и
                                            потоковые алгоритмы.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>mode</replaceable></entry>
                                    <entry>
                                        <para>Режим шифрования. Обязателен для блочных алгоритмов
                                            шифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>key</replaceable></entry>
                                    <entry>
                                        <para>Ключ шифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>iv</replaceable></entry>
                                    <entry>
                                        <para>Вектор инициализаяии (IV). Должен быть указан для всех
                                            блочных алгоримов шифрования за исключением ECB и всех
                                            потоковых алгоритмов шифрования за исключением
                                            RC4.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>endianness</replaceable></entry>
                                    <entry>
                                        <para>Порядок байтов счётчика. Может быть указан только в
                                            режиме CTR. По умолчанию используется
                                            CTR_LITTLE_ENDIAN.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>ctr_length</replaceable></entry>
                                    <entry>
                                        <para>Длина счётчика в байтах. Может быть указана только в
                                            режиме CTR. По умолчанию равна длине вектора
                                            инициализации IV.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>counter</replaceable></entry>
                                    <entry>
                                        <para>Начальное значение счётчика. Может быть указана только
                                            для алгоритма CHACHA20. По умолчанию равно 0.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARBINARY.</para>
                </formalpara>
                <para>Функция ENCRYPT шифрует данные с использованием симмитричного шифра. Размеры
                    строк передаваемых в эту функцию должны соответсвовать требованиям выбранного
                    алгорима и режима.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции ENCRYPT</title>
                            <para><programlisting language="sql">
select encrypt('897897' using sober128 key 'AbcdAbcdAbcdAbcd' iv '01234567') 
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-decrypt">DECRYPT</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-decrypt">
                <info>
                    <title>DECRYPT</title>
                    <keywordset>
                        <keyword>DECRYPT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>DECRYPT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DECRYPT (<replaceable>&lt;data&gt;</replaceable> [USING <replaceable>&lt;algorithm&gt;</replaceable>] [MODE <replaceable>&lt;mode&gt;</replaceable>] KEY <replaceable>&lt;key&gt;</replaceable>
  [IV <replaceable>&lt;iv&gt;</replaceable>] [<replaceable>&lt;endianness&gt;</replaceable>] [CTR_LENGTH <replaceable>&lt;ctr_length&gt;</replaceable>] [COUNTER <replaceable>&lt;counter&gt;</replaceable>])        
                            
<replaceable>&lt;algorithm&gt;</replaceable> ::= { <replaceable>&lt;block_cipher&gt;</replaceable> | <replaceable>&lt;stream_cipher&gt;</replaceable> }

<replaceable>&lt;block_cipher&gt;</replaceable> ::= 
  { AES | ANUBIS | BLOWFISH | KHAZAD | RC5 | RC6 | SAFER+ | TWOFISH | XTEA }  

<replaceable>&lt;stream_cipher&gt;</replaceable> ::= { CHACHA20 | RC4 | SOBER128 }

<replaceable>&lt;mode&gt;</replaceable> ::= { CBC | CFB | CTR | ECB | OFB }

<replaceable>&lt;endianness&gt;</replaceable> ::= { CTR_BIG_ENDIAN | CTR_LITTLE_ENDIAN }
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции DECRYPT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Выражение строкового типа или BLOB, которое необходимо
                                            зашифровать.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>algorithm</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм шифрования. Поддерживаются как блочные, так и
                                            потоковые алгоритмы.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>mode</replaceable></entry>
                                    <entry>
                                        <para>Режим шифрования. Обязателен для блочных алгоритмов
                                            шифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>key</replaceable></entry>
                                    <entry>
                                        <para>Ключ шифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>iv</replaceable></entry>
                                    <entry>
                                        <para>Вектор инициализаяии (IV). Должен быть указан для всех
                                            блочных алгоримов шифрования за исключением ECB и всех
                                            потоковых алгоритмов шифрования за исключением
                                            RC4.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>endianness</replaceable></entry>
                                    <entry>
                                        <para>Порядок байтов счётчика. Может быть указан только в
                                            режиме CTR. По умолчанию используется
                                            CTR_LITTLE_ENDIAN.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>ctr_length</replaceable></entry>
                                    <entry>
                                        <para>Длина счётчика в байтах. Может быть указана только в
                                            режиме CTR. По умолчанию равна длине вектора
                                            инициализации IV.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>counter</replaceable></entry>
                                    <entry>
                                        <para>Начальное значение счётчика. Может быть указана только
                                            для алгоритма CHACHA20. По умолчанию равно 0.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BLOB или VARBINARY.</para>
                </formalpara>
                <para>Функция DECRYPT дешифрует данные с использованием симмитричного шифра. Размеры
                    строк передаваемых в эту функцию должны соответсвовать требованиям выбранного
                    алгорима и режима.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции DECRYPT</title>
                            <para><programlisting language="sql">
select decrypt(x'0154090759DF' using sober128 key 'AbcdAbcdAbcdAbcd' 
               iv '01234567') 
from rdb$database;

select decrypt(secret_field using aes mode ofb key '0123456701234567' 
               iv init_vector) 
from secure_table;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-encrypt">ENCRYPT</link>. </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_private">
                <info>
                    <title>RSA_PRIVATE</title>
                    <keywordset>
                        <keyword>RSA_PRIVATE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_PRIVATE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_PRIVATE (<replaceable>&lt;size&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_PRIVATE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>size</replaceable></entry>
                                    <entry>
                                        <para>Размер ключа в байтах.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARBINARY.</para>
                </formalpara>
                <para>Функция RSA_PRIVATE возвращает RSA закрытый ключ заданной длины (в байтах) в
                    PKCS#1 формате как строку VARBINARY.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_PRIVATE</title>
                            <para><programlisting language="sql">
select rdb$set_context('USER_SESSION', 'private_key', rsa_private(256))
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_public">RSA_PUBLIC</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_public">
                <info>
                    <title>RSA_PUBLIC</title>
                    <keywordset>
                        <keyword>RSA_PUBLIC</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_PUBLIC</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_PUBLIC (<replaceable>&lt;private key&gt;</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_PUBLIC</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>private key</replaceable></entry>
                                    <entry>
                                        <para>RSA закрытый ключ.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARBINARY.</para>
                </formalpara>
                <para>Функция RSA_PUBLIC возвращает RSA открытый ключ для заданного RSA закрытого
                    ключа. Оба ключа должны быть в PKCS#1 формате.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_PUBLIC</title>

                            <para>Закрытый ключ должен быть инициализирован ранее см. пример в <link
                                    linkend="internalfunc-func-crypt-rsa_private">RSA_PRIVATE</link>
                            </para>
                            <para><programlisting language="sql">
select rdb$set_context('USER_SESSION', 'public_key',
    rsa_public(rdb$get_context('USER_SESSION', 'private_key'))) 
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_private">RSA_PRIVATE</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_encrypt">
                <info>
                    <title>RSA_ENCRYPT</title>
                    <keywordset>
                        <keyword>RSA_ENCRYPT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_ENCRYPT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_ENCRYPT (<replaceable>&lt;data&gt;</replaceable> KEY <replaceable>&lt;public_key&gt;</replaceable> [LPARAM <replaceable>&lt;tag&gt;</replaceable>] [HASH <replaceable>&lt;hash&gt;</replaceable>])
                            
<replaceable>&lt;hash&gt;</replaceable> ::= { MD5 | SHA1 | SHA256 | SHA512 }                            
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_ENCRYPT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Данные (строка или BLOB) для шифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>public_key</replaceable></entry>
                                    <entry>
                                        <para>Открытый RSA ключ, который возвращает функция
                                            RSA_UBLIC.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>tag</replaceable></entry>
                                    <entry>
                                        <para>Дополнительный системный тег, который можно применять
                                            для определения того, какая система закодировала
                                            сообщение. Значением по умолчанию является NULL.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>hash</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм хеширования. По умолчанию SHA256.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARBINARY.</para>
                </formalpara>
                <para>Заполняет данные, используя заполнение OAEP, и шифрует их, используя открытый
                    ключ RSA. Обычно используется для шифрования коротких симметричных ключей,
                    которые затем используются в блочных шифрах для шифрования сообщения.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_ENCRYPT</title>

                            <para>Открытый ключ должен быть инициализирован ранее см. пример в <link
                                    linkend="internalfunc-func-crypt-rsa_public">RSA_PUBLIC</link>
                            </para>
                            <para><programlisting language="sql">
select rdb$set_context('USER_SESSION', 'msg', 
    rsa_encrypt('Some message' key rdb$get_context('USER_SESSION', 'public_key'))) 
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_public">RSA_PUBLIC</link>, <link
                            linkend="internalfunc-func-crypt-rsa_decrypt">RSA_DECRYPT</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_decrypt">
                <info>
                    <title>RSA_DECRYPT</title>
                    <keywordset>
                        <keyword>RSA_DECRYPT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_DECRYPT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_DECRYPT (<replaceable>&lt;data&gt;</replaceable> KEY <replaceable>&lt;private_key&gt;</replaceable> [LPARAM <replaceable>&lt;tag&gt;</replaceable>] [HASH <replaceable>&lt;hash&gt;</replaceable>])
                            
<replaceable>&lt;hash&gt;</replaceable> ::= { MD5 | SHA1 | SHA256 | SHA512 }                            
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_DECRYPT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Данные (строка или BLOB) для дешифрования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>private_key</replaceable></entry>
                                    <entry>
                                        <para>Закрытый RSA ключ, который возвращает функция
                                            RSA_PRIVATE.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>tag</replaceable></entry>
                                    <entry>
                                        <para>Дополнительный системный тег. Должно быть тем же самым
                                            значением, которое передавалось RSA_ENCRYPT. Если оно не
                                            совпадает с тем, который использовался во время
                                            кодирования, эта функция не расшифровывает пакет.
                                            Значением по умолчанию является NULL.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>hash</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм хеширования. По умолчанию SHA256.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARCHAR.</para>
                </formalpara>
                <para>Расшифровывает с использованием закрытого ключа RSA, и удаляет OAEP
                    дополненные данные.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_DECRYPT</title>

                            <para>Закрытый ключ должен быть инициализирован ранее см. пример в <link
                                    linkend="internalfunc-func-crypt-rsa_private"
                                >RSA_PRIVATE</link>. Данные для расшифровки сипользуются из примера
                                в <link linkend="internalfunc-func-crypt-rsa_encrypt"
                                    >RSA_ENCRYPT</link>
                            </para>
                            <para><programlisting language="sql">
select RSA_DECRYPT(rdb$get_context('USER_SESSION', 'msg')
    key rdb$get_context('USER_SESSION', 'private_key'))
from RDB$DATABASE;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_private">RSA_PRIVATE</link>,
                            <link linkend="internalfunc-func-crypt-rsa_encrypt">RSA_ENCRYPT</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_sign">
                <info>
                    <title>RSA_SIGN</title>
                    <keywordset>
                        <keyword>RSA_SIGN</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_SIGN</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_SIGN (<replaceable>&lt;data&gt;</replaceable> KEY <replaceable>&lt;private_key&gt;</replaceable> [HASH <replaceable>&lt;hash&gt;</replaceable>] [SALT_LENGTH <replaceable>&lt;length&gt;</replaceable>])
                            
<replaceable>&lt;hash&gt;</replaceable> ::= { MD5 | SHA1 | SHA256 | SHA512 }                            
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_SIGN</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Данные (строка или BLOB) для кодирования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>private_key</replaceable></entry>
                                    <entry>
                                        <para>Закрытый RSA ключ, который возвращает функция
                                            RSA_PRIVATE.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>hash</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм хеширования. По умолчанию SHA256.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>length</replaceable></entry>
                                    <entry>
                                        <para>Указывает на длину желаемой соли и, как правило,
                                            должен быть небольшим. Хорошее значение от 8 до
                                            16.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>VARBINARY.</para>
                </formalpara>
                <para>Выполняет PSS-кодирование дайджеста сообщения для подписи и подписывает его с
                    использованием закрытого ключа RSA. Возващает подпись сообщения.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_SIGN</title>

                            <para>Закрытый ключ должен быть инициализирован ранее см. пример в <link
                                    linkend="internalfunc-func-crypt-rsa_private"
                                >RSA_PRIVATE</link>. </para>
                            <para><programlisting language="sql">
select rdb$set_context('USER_SESSION', 'msg', 
    rsa_sign(hash('Test message' using sha256)
    key rdb$get_context('USER_SESSION', 'private_key'))) 
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_private">RSA_PRIVATE</link>.
                    </para>
                </formalpara>
            </section>

            <section xml:id="internalfunc-func-crypt-rsa_verify">
                <info>
                    <title>RSA_VERIFY</title>
                    <keywordset>
                        <keyword>RSA_VERIFY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RSA_VERIFY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RSA_VERIFY (<replaceable>&lt;data&gt;</replaceable> SIGNATURE <replaceable>&lt;signature&gt;</replaceable> KEY <replaceable>&lt;public_key&gt;</replaceable> [HASH <replaceable>&lt;hash&gt;</replaceable>] 
  [SALT_LENGTH <replaceable>&lt;length&gt;</replaceable>])
                            
<replaceable>&lt;hash&gt;</replaceable> ::= { MD5 | SHA1 | SHA256 | SHA512 }                            
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции RSA_VERIFY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>data</replaceable></entry>
                                    <entry>
                                        <para>Данные (строка или BLOB) для кодирования.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>signature</replaceable></entry>
                                    <entry>
                                        <para>Подпись. Должно быть значением возвращаемым функцией
                                            RSA_SIGN.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>public_key</replaceable></entry>
                                    <entry>
                                        <para>Открытый RSA ключ, который возвращает функция
                                            RSA_PUBLIC.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>hash</replaceable></entry>
                                    <entry>
                                        <para>Алгоритм хеширования. По умолчанию SHA256.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>length</replaceable></entry>
                                    <entry>
                                        <para>Указывает на длину желаемой соли и, как правило,
                                            должен быть небольшим. Хорошее значение от 8 до
                                            16.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BOOLEAN.</para>
                </formalpara>
                <para>Выполняет PSS-кодирование дайджеста сообщения для подписи и проверяет его
                    цифровую подпись, используя открытый ключ RSA. Возвращает результат проверки
                    подписи.</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции RSA_SIGN</title>

                            <para>Открытый ключ должен быть инициализирован ранее см. пример в <link
                                    linkend="internalfunc-func-crypt-rsa_public">RSA_PUBLIC</link>
                                Цифровая подпись получена ранее с помощью функции RSA_SIGN. </para>
                            <para><programlisting language="sql">
select rsa_verify(hash('Test message' using sha256) 
    signature rdb$get_context('USER_SESSION', 'msg')
    key rdb$get_context('USER_SESSION', 'public_key')) 
from rdb$database;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-crypt-rsa_sign">RSA_SIGN</link>, <link
                            linkend="internalfunc-func-crypt-rsa_public">RSA_PUBLIC</link>. </para>
                </formalpara>
            </section>

        </section>

        <section xml:id="internalfunc-func-cast">
            <info>
                <title>Функции преобразования типов</title>
            </info>
            <section xml:id="internalfunc-func-cast-cast">
                <info>
                    <title>CAST</title>
                    <keywordset>
                        <keyword>CAST</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CAST</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CAST(<replaceable>value</replaceable> | NULL AS <replaceable>&lt;type&gt;</replaceable>)
                            
<replaceable>&lt;type&gt;</replaceable> ::= 
    <replaceable>&lt;datatype&gt;</replaceable>
  | [TYPE OF] <replaceable>domain</replaceable>
  | TYPE OF COLUMN <replaceable>relname</replaceable>.<replaceable>colname</replaceable>

<replaceable>&lt;datatype&gt;</replaceable> ::= 
    {SMALLINT | INTEGER | BIGINT} 
  | {FLOAT | DOUBLE PRECISION} 
  | {DATE | TIME | TIMESTAMP}
  | BOOLEAN
  | {DECIMAL | NUMERIC} [(<replaceable>precision</replaceable> [, <replaceable>scale</replaceable>])] 
  | {CHAR | CHARACTER | CHARACTER VARYING | VARCHAR} [(<replaceable>size</replaceable>)]
    [CHARACTER SET <replaceable>charset</replaceable>]
  | {NCHAR | NATIONAL CHARACTER | NATIONAL CHAR} [VARYING] [(<replaceable>size</replaceable>)] 
  | BLOB [SUB_TYPE {<replaceable>subtype_num</replaceable> | <replaceable>subtype_name</replaceable>}] 
    [SEGMENT SIZE <replaceable>seglen</replaceable>] [CHARACTER SET <replaceable>charset</replaceable>]
  | BLOB [(<replaceable>seglen</replaceable> [, <replaceable>subtype_num</replaceable>])]   
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Сокращённый синтаксис:</title>
                    <para>
                        <programlisting>
<replaceable>&lt;datatype&gt;</replaceable> '<replaceable>date/timestring</replaceable>'  
                            
<replaceable>&lt;datatype&gt;</replaceable> ::= DATE | TIME | TIMESTAMP                            
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции CAST</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>value</replaceable></entry>
                                    <entry>
                                        <para>SQL выражение.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>datatype</replaceable></entry>
                                    <entry>
                                        <para>Тип данных SQL.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>domain</replaceable></entry>
                                    <entry>
                                        <para>Домен.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>relname</replaceable></entry>
                                    <entry>
                                        <para>Имя таблицы или представления. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>colname</replaceable></entry>
                                    <entry>
                                        <para>Имя столбца таблицы или представления. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>precision</replaceable></entry>
                                    <entry>
                                        <para>Точность. От 1 до 34. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>scale</replaceable></entry>
                                    <entry>
                                        <para>Масштаб. От 0 до 34, должно быть меньше или равно
                                                <replaceable>precision</replaceable>. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>size</replaceable></entry>
                                    <entry>
                                        <para>Максимальный размер строки в символах. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>charset</replaceable></entry>
                                    <entry>
                                        <para>Набор символов. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>subtype_num</replaceable></entry>
                                    <entry>
                                        <para>Номер подтипа BLOB. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>subtype_name</replaceable></entry>
                                    <entry>
                                        <para>Мнемоника подтипа BLOB. </para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>seqlen</replaceable></entry>
                                    <entry>
                                        <para>Размер сегмента, не может превышать 65535</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para><replaceable>&lt;type&gt;</replaceable>.</para>
                </formalpara>

                <para>Функция CAST служит для явного преобразования данных из одного типа данных в
                    другой тип данных или домен. Если это невозможно будет выдана ошибка.</para>
                <para>Сокращённый синтаксис поддерживается только для литералов даты и времени.
                    Доступен только в 3 диалекте.</para>
                <note>
                    <para>Сокращенный синтаксис вычисляется сразу во время синтаксического анализа,
                        в результате чего значение сохраняется до тех пор пока для оператора не
                        сделано unprepare. Для литералов даты и времени таких как '12-OCT-2012' это
                        не имеет никакого значения. Но для псевдо-переменных 'NOW', 'YESTERDAY',
                        'TODAY' и 'TOMORROW' вы можете получить не то, что хотите. Если вам нужно
                        значение, которое будет вычисляться при каждом вызове, используйте
                        CAST().</para>
                </note>
                <para>
                    <table>
                        <title>Допустимые преобразования для функции CAST</title>

                        <tgroup cols="2">
                            <thead>
                                <row>
                                    <entry align="center">Из типа</entry>
                                    <entry align="center">В тип</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>Числовые типы</member>
                                        </simplelist>
                                    </entry>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>Числовые типы</member>
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                        </simplelist>
                                    </entry>
                                </row>
                                <row>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                        </simplelist>
                                    </entry>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                            <member>BOOLEAN</member>
                                            <member>Числовые типы</member>
                                            <member>DATE</member>
                                            <member>TIME</member>
                                            <member>TIMESTAMP</member>
                                        </simplelist>
                                    </entry>
                                </row>
                                <row>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>DATE</member>
                                            <member>TIME</member>
                                        </simplelist>
                                    </entry>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                            <member>TIMESTAMP</member>
                                        </simplelist>
                                    </entry>
                                </row>
                                <row>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>TIMESTAMP</member>
                                        </simplelist>
                                    </entry>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                            <member>TIME</member>
                                            <member>DATE</member>
                                        </simplelist>
                                    </entry>
                                </row>
                                <row>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>BOOLEAN</member>
                                        </simplelist>
                                    </entry>
                                    <entry align="left">
                                        <simplelist type="vert" columns="1">
                                            <member>[VAR]CHAR</member>
                                            <member>BLOB</member>
                                        </simplelist>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <para>Имейте ввиду, что иногда информация может быть потерянна, например, когда вы
                    преобразуете тип TIMESTAMP к DATE. Кроме того, тот факт, что типы совместимы для
                    функции CAST, ещё не гарантирует, что преобразование будет успешным. "CAST
                    (123456789 AS SMALLINT)" безусловно приведёт к ошибке, так же как и
                    "CAST('Judgement Day' as DATE)".</para>
                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <programlisting/>Полный синтаксис:
                        <programlisting language="sql">
SELECT CAST ('12' || '-June-' || '1959' AS DATE) FROM rdb$database                        
                    </programlisting>
                        Сокращённый синтаксис для преобразование литералов дат/времени:
                        <programlisting language="sql">
UPDATE People SET AgeCat = 'Old'
WHERE BirthDate &lt; date '1-Jan-1943'                       
                    </programlisting>
                        Заметьте, что вы можете не использовать даже краткий синтаксис
                        преобразования в примере выше, т.к. Firebird поймёт из контекста (сравнение
                        с полем типа DATE) как интерпретировать строку:
                        <programlisting language="sql">
UPDATE People SET AgeCat = 'Old'
WHERE BirthDate &lt; '1-Jan-1943'                       
                    </programlisting>
                        Но это не всегда возможно. Преобразование в примере ниже не может быть
                        опущено, т.к. система будет пытаться преобразовать строку к числу. что бы
                        вычесть из неё число:
                        <programlisting language="sql">
SELECT date 'today' - 7 FROM rdb$database                       
                    </programlisting>
                    </para>
                </formalpara>
                <para>Вы можете применить преобразование типа к параметрам оператора:
                    <programlisting language="sql">
CAST (? AS INTEGER)                        
                    </programlisting>
                    Это дает вам контроль над типом полей ввода. Обратите внимание, что с
                    параметрами операторов, вы всегда должны использовать полный синтаксис
                    преобразования, сокращённый синтаксис не поддерживается. </para>
                <simplesect>
                    <title>Преобразование к домену или к его базовому типу</title>
                    <para>При преобразовании к домену должны быть удовлетворены любые ограничения
                        (NOT NULL и/или CHECK) объявленные для домена, иначе преобразование не будет
                        выполнено. Помните, что проверка CHECK проходит, если его вычисление даёт
                        TRUE или UNKNOWN (NULL). Для следующих операторов:
                        <programlisting language="sql">
CREATE DOMAIN quint AS INT CHECK (VALUE >= 5000)
SELECT CAST (2000 AS quint) FROM rdb$database -- (1)
SELECT CAST (8000 AS quint) FROM rdb$database -- (2)
SELECT CAST (null AS quint) FROM rdb$database -- (3)                       
                    </programlisting>
                        только (1) завершится с ошибкой. </para>
                    <para>При использовании модификатора TYPE OF выражение будет преобразовано к
                        базовому типу домена, игнорируя любые ограничения. Для домена quint,
                        объявленного выше, оба преобразования будут эквивалентны и оба будут успешно
                        выполнены:
                        <programlisting language="sql">
SELECT CAST (2000 AS TYPE OF quint) FROM rdb$database
SELECT CAST (2000 AS INT) FROM rdb$database                      
                    </programlisting>
                    </para>
                    <para>При использовании TYPE OF с (VAR)CHAR типом, его набор символов и порядок
                        сортировки (collate) сохраняются.
                        <programlisting language="sql">
CREATE DOMAIN iso20 VARCHAR(20) CHARACTER SET iso8859_1;
CREATE DOMAIN dunl20 VARCHAR(20) CHARACTER SET iso8859_1 COLLATE du_nl;
CREATE TABLE zinnen (zin VARCHAR(20));
COMMIT;
INSERT INTO zinnen VALUES ('Deze');
INSERT INTO zinnen VALUES ('Die');
INSERT INTO zinnen VALUES ('die');
INSERT INTO zinnen VALUES ('deze');
SELECT CAST(zin AS TYPE OF iso20) FROM zinnen ORDER BY 1;
-- returns Deze -> Die -> deze -> die
SELECT CAST(zin AS TYPE OF dunl20) FROM zinnen ORDER BY 1;
-- returns deze -> Deze -> die -> Die                    
                    </programlisting>
                    </para>
                    <warning>
                        <para>Если определение домена изменяется, то существующие преобразования к
                            домену или его типу могут стать ошибочными. Если такие преобразования
                            происходят в PSQL модулях, то их ошибки могут быть обнаружены. См. <link
                                linkend="valid">Поле RDB$VALID_BLR</link>. </para>
                    </warning>
                </simplesect>
                <simplesect>
                    <title>Преобразование к типу столбца</title>
                    <para>Разрешено преобразовывать выражение к типу столбца существующей таблицы
                        или представления. При этом будет использован только сам тип, для строковых
                        типов будет использован так же набор символов, но не последовательность
                        сортировки. Ограничения и значения по умолчанию исходного столбца не
                        применяются.
                        <programlisting language="sql">
CREATE TABLE ttt (
  s VARCHAR(40) CHARACTER SET utf8 COLLATE unicode_ci_ai
);
COMMIT;  
SELECT CAST ('Jag har många vänner' AS TYPE OF COLUMN ttt.s) 
FROM rdb$database;
                    </programlisting>
                    </para>
                    <warning>
                        <para>Если определение столбца изменяется, то существующие преобразования к
                            его типу могут стать ошибочными. Если такие преобразования происходят в
                            PSQL модулях, то их ошибки могут быть обнаружены. См. <link
                                linkend="valid">Поле RDB$VALID_BLR</link>.</para>
                    </warning>
                    <formalpara>
                        <title>См. также:</title>

                        <para>
                            <link linkend="types-cast-explicit">Явное преобразование типов
                                данных</link>. </para>
                    </formalpara>
                </simplesect>
            </section>
        </section>
        <section xml:id="internalfunc-func-bit">
            <info>
                <title>Функции побитовых операций</title>
            </info>

            <section xml:id="internalfunc-func-bit-bin_and">
                <info>
                    <title>BIN_AND</title>
                    <keywordset>
                        <keyword>BIN_AND</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_AND</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_AND (<replaceable>number</replaceable> [, <replaceable>number</replaceable> ...])
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_AND</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER или BIGINT.</para>
                </formalpara>

                <para>Функция BIN_AND возвращает результат побитовой операции AND (И)
                    аргументов.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_or">BIN_OR</link>, <link
                            linkend="internalfunc-func-bit-bin_xor">BIN_XOR</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-bit-bin_not">
                <info>
                    <title>BIN_NOT</title>
                    <keywordset>
                        <keyword>BIN_NOT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_NOT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_NOT (<replaceable>number</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_NOT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER или BIGINT.</para>
                </formalpara>

                <para>Функция BIN_NOT возвращает результат побитовой операции NOT над
                    аргументом.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_or">BIN_OR</link>, <link
                            linkend="internalfunc-func-bit-bin_and">BIN_AND</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-bit-bin_or">
                <info>
                    <title>BIN_OR</title>
                    <keywordset>
                        <keyword>BIN_OR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_OR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_OR (<replaceable>number</replaceable> [, <replaceable>number</replaceable> ...])
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_OR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER или BIGINT.</para>
                </formalpara>

                <para>Функция BIN_OR возвращает результат побитовой операции OR (ИЛИ) аргументов. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_and">BIN_AND</link>, <link
                            linkend="internalfunc-func-bit-bin_xor">BIN_XOR</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-bit-bin_shl">
                <info>
                    <title>BIN_SHL</title>
                    <keywordset>
                        <keyword>BIN_SHL</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_SHL</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_SHL (<replaceable>number</replaceable>, <replaceable>shift</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_SHL</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>shift</replaceable></entry>
                                    <entry>
                                        <para>Количество бит, на которое смещается значение
                                                <replaceable>number</replaceable>. </para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция BIN_SHL возвращает первый параметр, побитно смещённый влево на
                    значение второго параметра. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_shr">BIN_SHR</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-bit-bin_shr">
                <info>
                    <title>BIN_SHR</title>
                    <keywordset>
                        <keyword>BIN_SHR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_SHR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_SHR (<replaceable>number</replaceable>, <replaceable>shift</replaceable>)
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_SHR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>shift</replaceable></entry>
                                    <entry>
                                        <para>Количество бит на которое смещается значение number.
                                        </para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция BIN_SHR возвращает первый параметр, побитно смещённый вправо на
                    значение второго параметра. </para>
                <note>
                    <para>Выполняемая операция является арифметическим сдвигом вправо (SAR), а это
                        означает, что знак первого операнда всегда сохраняется.</para>
                </note>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_shl">BIN_SHL</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-bit-bin_xor">
                <info>
                    <title>BIN_XOR</title>
                    <keywordset>
                        <keyword>BIN_XOR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>BIN_XOR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
BIN_XOR (<replaceable>number</replaceable> [, <replaceable>number</replaceable> ...])
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции BIN_XOR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>number</replaceable></entry>
                                    <entry>
                                        <para>Целое число.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>INTEGER или BIGINT.</para>
                </formalpara>

                <para>Функция BIN_XOR возвращает результат побитовой операции XOR аргументов. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-bit-bin_and">BIN_AND</link>, <link
                            linkend="internalfunc-func-bit-bin_or">BIN_OR</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-uuid">
            <info>
                <title>Функции для работы с UUID</title>
            </info>
            <para/>
            <section xml:id="internalfunc-func-uuid-char_to_uuid">
                <info>
                    <title>CHAR_TO_UUID</title>
                    <keywordset>
                        <keyword>CHAR_TO_UUID</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CHAR_TO_UUID</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CHAR_TO_UUID (<replaceable>ascii_uuid</replaceable>) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции CHAR_TO_UUID</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>ascii_uuid</replaceable></entry>
                                    <entry>
                                        <para>36-символьное представление UUID. '-' (дефис) в
                                            положениях 9, 14, 19 и 24; допустимые шестнадцатеричные
                                            цифры в любых других позициях.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>CHAR(16) CHARACTER SET OCTETS.</para>
                </formalpara>

                <para>Функция CHAR_TO_UUID преобразует читабельную 36-ти символьную символику UUID к
                    соответствующему 16-ти байтовому значению UUID. </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции CHAR_TO_UUID</title>
                            <para><programlisting language="sql">
SELECT CHAR_TO_UUID('A0bF4E45-3029-2a44-D493-4998c9b439A3') FROM rdb$database
-- returns A0BF4E4530292A44D4934998C9B439A3 (16-byte string)

SELECT CHAR_TO_UUID('A0bF4E45-3029-2A44-X493-4998c9b439A3') FROM rdb$database
-- error: -Human readable UUID argument for CHAR_TO_UUID must
-- have hex digit at position 20 instead of "X (ASCII 88)"
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-uuid-gen_uuid">GEN_UUID</link>, <link
                            linkend="internalfunc-func-uuid-uuid_to_char">UUID_TO_CHAR</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-uuid-gen_uuid">
                <info>
                    <title>GEN_UUID</title>
                    <keywordset>
                        <keyword>GEN_UUID</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>GEN_UUID</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
GEN_UUID() 
                        </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>CHAR(16) CHARACTER SET OCTETS.</para>
                </formalpara>

                <para>Функция возвращает универсальный уникальный идентификатор ID в виде 16-байтной
                    строки символов, отвечающий требованиям стандарта RFC-4122. Функция возвращает
                    строку UUID 4-ой версии, где несколько битов зарезервированы, а остальные
                    являются случайными.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции GEN_UUID</title>
                            <para>
                                <programlisting language="sql">
SELECT GEN_UUID() AS GUID FROM RDB$DATABASE
	
/* результат будет возвращён в виде
	XXXXXXXX-XXXX-4XXX-YXXX-XXXXXXXXXXXX 
	где 4 это номер версии, а Y может принимать значение 8, 9, A или B.
*/                      </programlisting>
                                <screen>
852C5DD9-3453-430B-B697-D0A46B4D2531                            
                        </screen>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-uuid-char_to_uuid">CHAR_TO_UUID</link>,
                            <link linkend="internalfunc-func-uuid-uuid_to_char">UUID_TO_CHAR</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-uuid-uuid_to_char">
                <info>
                    <title>UUID_TO_CHAR</title>
                    <keywordset>
                        <keyword>UUID_TO_CHAR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>UUID_TO_CHAR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
UUID_TO_CHAR (<replaceable>uuid</replaceable>) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции UUID_TO_CHAR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>uuid</replaceable></entry>
                                    <entry>
                                        <para>16-байтный UUID.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>CHAR(36).</para>
                </formalpara>

                <para>Функция UUID_TO_CHAR конвертирует 16-ти байтный UUID в его 36-ти знаковое
                    ASCII человекочитаемое представление. Тип возвращаемого значения
                    CHAR(36).</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции UUID_TO_CHAR</title>
                            <para><programlisting language="sql">
SELECT UUID_TO_CHAR(GEN_UUID()) FROM RDB$DATABASE;

SELECT UUID_TO_CHAR(x'876C45F4569B320DBCB4735AC3509E5F') FROM RDB$DATABASE;
-- returns '876C45F4-569B-320D-BCB4-735AC3509E5F'

SELECT UUID_TO_CHAR(GEN_UUID()) FROM RDB$DATABASE;
-- returns e.g. '680D946B-45FF-DB4E-B103-BB5711529B86'

SELECT UUID_TO_CHAR('Firebird swings!') FROM RDB$DATABASE;
-- returns '46697265-6269-7264-2073-77696E677321'
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-uuid-gen_uuid">GEN_UUID</link>, <link
                            linkend="internalfunc-func-uuid-char_to_uuid">CHAR_TO_UUID</link>.
                    </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-gen">
            <info>
                <title>Функции для работы с генераторами (последовательностями)</title>
            </info>

            <section xml:id="internalfunc-func-gen-gen_id">
                <info>
                    <title>GEN_ID</title>
                    <keywordset>
                        <keyword>GEN_ID</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>GEN_ID</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL, ESQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
GEN_ID(<replaceable>gen_name</replaceable>, <replaceable>step</replaceable>) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции GEN_ID</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>gen_name</replaceable></entry>
                                    <entry>
                                        <para>Имя генератора (последовательности).</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>step</replaceable></entry>
                                    <entry>
                                        <para>Шаг приращения.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция GEN_ID увеличивает значение генератора или последовательности и
                    возвращает новое значение.</para>
                <note>
                    <para>Если значение параметра <replaceable>step</replaceable> меньше нуля,
                        произойдёт уменьшение значения генератора. Внимание! Следует быть крайне
                        аккуратным при таких манипуляциях в базе данных, они могут привести к потере
                        целостности данных. Если <replaceable>step</replaceable> равен 0, функция не
                        будет ничего делать со значением генератора и вернёт его текущее значение.
                    </para>
                </note>
                <para>Начиная с Firebird 2.0 для получения следующего значение последовательности
                    (генератора) стало доступно использование оператора NEXT VALUE FOR.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции GEN_ID</title>
                            <para><programlisting language="sql">
NEW.ID = GEN_ID (GEN_TABLE_ID, 1);
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="common-expr-nextvalue">NEXT VALUE FOR</link>, <link
                            linkend="ddl-sequence">SEQUENCE (GENERATOR)</link>, <link
                            linkend="ddl-sequence-alter">ALTER SEQUENCE</link>, <link
                            linkend="ddl-sequence-setgen">SET GENERATOR</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-func-case">
            <info>
                <title>Условные функции</title>
            </info>
            <para/>

            <section xml:id="internalfunc-func-case-coalesce">
                <info>
                    <title>COALESCE</title>
                    <keywordset>
                        <keyword>COALESCE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COALESCE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COALESCE(<replaceable>expr1</replaceable>, <replaceable>expr2</replaceable> [, <replaceable>exprN</replaceable> ...]) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COALESCE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable>,
                                            <replaceable>expr2</replaceable> ...
                                            <replaceable>exprN</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и первый аргумент функции <replaceable>expr1</replaceable>,
                        если все выражения имеют одинаковый тип, в противном случае происходит
                        преобразование в тип с наибольшей вместимостью.</para>
                </formalpara>

                <para>Функция COALESCE принимает два или более аргумента возвращает значение первого
                    NOT NULL аргумента. Если все аргументы имеют значение NULL, то и результат будет
                    NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции COALESCE</title>
                            <para><programlisting language="sql">
SELECT 
  COALESCE(PE.NICKNAME, PE.FIRSTNAME, 'Mr./Mrs.') ||
  ' ' || PE.LASTNAME AS FULLNAME
FROM PERSONS PE
                </programlisting>
                                В данном примере предпринимается попытка использовать все имеющиеся
                                данные для составления полного имени. Выбирается поле NICKNAME из
                                таблицы PERSONS. Если оно имеет значение NULL, то берётся значение
                                из поля FIRSTNAME. Если и оно имеет значение NULL, то используется
                                строка 'Mr./Mrs.'. Затем к значению функции COALESCE фамилия (поле
                                LASTNAME). Обратите внимание, что эта схема нормально работает,
                                только если выбираемые поля имеют значение NULL или не пустое
                                значение: если одно из них является пустой строкой, то именно оно и
                                возвратится в качестве значения функции COALESCE. </para>
                        </example>
                        <example>
                            <title>Использование функции COALESCE с агрегатными функциями</title>
                            <para><programlisting language="sql">
-- в случае получения при суммировании NULL, вернёт 0.                        
SELECT coalesce (sum (q), 0) 
FROM bills 
WHERE ...
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="common-expr-cond-case">CASE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-case-decode">
                <info>
                    <title>DECODE</title>
                    <keywordset>
                        <keyword>DECODE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>DECODE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DECODE(<replaceable>testexpr</replaceable>, 
       <replaceable>expr1</replaceable>, <replaceable>result1</replaceable>
       [, <replaceable>expr2</replaceable>, <replaceable>result2</replaceable> ...]
       [, <replaceable>defaultresult</replaceable>]) 
                </programlisting>
                        эквивалентная конструкция CASE
                        <programlisting>
CASE <replaceable>testexpr</replaceable> 
  WHEN <replaceable>expr1</replaceable> THEN <replaceable>result1</replaceable>
  [WHEN <replaceable>expr2</replaceable> THEN <replaceable>result2</replaceable> ...]
  [ELSE <replaceable>defaultresult</replaceable>]
END                            
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции DECODE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>testexpr</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа, которое
                                            сравнивается с выражениями
                                                <replaceable>expr1</replaceable>,
                                                <replaceable>expr2</replaceable> ...
                                                <replaceable>exprN</replaceable></para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>expr1</replaceable>,
                                            <replaceable>expr2</replaceable> ...
                                            <replaceable>exprN</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа, с которыми
                                            сравнивают с выражением
                                                <replaceable>testexpr</replaceable>.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>result1</replaceable>,
                                            <replaceable>result2</replaceable> ...
                                            <replaceable>resultN</replaceable></entry>
                                    <entry>
                                        <para>Возвращаемые выражения любого типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>defaultresult</replaceable></entry>
                                    <entry>
                                        <para>Выражения, возвращаемое если ни одно из условий не
                                            было выполнено.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и первый результат <replaceable>result1</replaceable>, если все
                        выражения <replaceable>result</replaceable> имеют одинаковый тип, в
                        противном случае происходит преобразование в тип с наибольшей
                        вместимостью.</para>
                </formalpara>

                <para>Данная функция эквивалентна конструкции <link
                        linkend="common-expr-cond-case-simple">Простой CASE</link>, в которой
                    заданное выражение сравнивается с другими выражениями до нахождения совпадения.
                    Результатом является значение, указанное после выражения, с которым найдено
                    совпадение. Если совпадений не найдено, то возвращается значение по умолчанию
                    (если оно, конечно, задано – в противном случае возвращается NULL).</para>
                <caution>
                    <para>Совпадение эквивалентно оператору &quot;=&quot;, т.е. если
                            <replaceable>testexpr</replaceable> имеет значение NULL, то он не
                        соответствует ни одному из <replaceable>expr</replaceable>, даже тем,
                        которые имеют значение NULL. </para>
                </caution>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции DECODE</title>
                            <para><programlisting language="sql">
SELECT 
  name, 
  age,
  decode (upper(sex),
          'M', 'М',
          'F', 'Ж',
          'не указано') AS sexname,
  UID 
FROM people
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="common-expr-cond-case">CASE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-case-iif">
                <info>
                    <title>IIF</title>
                    <keywordset>
                        <keyword>IIF</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>IIF</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
IIF(<replaceable>&lt;condition&gt;</replaceable>, <replaceable>resultT</replaceable>, <replaceable>resultF</replaceable>) 
                </programlisting>
                    </para>
                </formalpara>
                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции IIF</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>condition</replaceable></entry>
                                    <entry>
                                        <para>Выражение логического типа.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>resultT</replaceable></entry>
                                    <entry>
                                        <para>Возвращаемое значение, если
                                                <replaceable>condition</replaceable> является
                                            истинным.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>resultF</replaceable></entry>
                                    <entry>
                                        <para>Возвращаемое значение, если
                                                <replaceable>condition</replaceable> является
                                            ложным.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>resultT</replaceable>, если
                        выражения <replaceable>resultT</replaceable> и
                            <replaceable>resultF</replaceable> имеют одинаковый тип, в противном
                        случае происходит преобразование в тип с наибольшей вместимостью.</para>
                </formalpara>

                <para>Функция IIF имеет три аргумента. Если первый аргумент является истиной, то
                    результатом будет второй параметр, в противном случае результатом будет третий
                    параметр.</para>
                <para>По сути, функция IIF это короткая запись оператора CASE
                    <programlisting>
CASE WHEN <replaceable>&lt;condition&gt;</replaceable> THEN <replaceable>resultT</replaceable> ELSE <replaceable>resultF</replaceable> END                        
                    </programlisting>
                    Оператор IIF также можно сравнить в тройным оператором "?:" в C-подобных языках. </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции IIF</title>
                            <para><programlisting language="sql">
SELECT IIF(SEX = 'M', 'Sir', 'Madam') FROM CUSTOMERS
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="common-expr-cond-case">CASE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-case-maxvalue">
                <info>
                    <title>MAXVALUE</title>
                    <keywordset>
                        <keyword>MAXVALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>MAXVALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
MAXVALUE(<replaceable>expr1</replaceable> [, <replaceable>exprN</replaceable> ...]) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции MAXVALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable> ...
                                            <replaceable>exprN</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и первый аргумент функции
                        <replaceable>expr1</replaceable>.</para>
                </formalpara>

                <para>Возвращает максимальное значение из входного списка чисел, строк или
                    параметров с типом DATE/TIME/TIMESTAMP.</para>
                <note>
                    <para>Если один или более входных параметров имеют значение NULL, то результатом
                        функции MAXVALUE тоже будет NULL в отличие от агрегатной функции MAX.</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции MAXVALUE</title>
                            <para><programlisting language="sql">
SELECT MAXVALUE(PRICE_1, PRICE_2) AS PRICE
FROM PRICELIST
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-case-minvalue">MINVALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-case-minvalue">
                <info>
                    <title>MINVALUE</title>
                    <keywordset>
                        <keyword>MINVALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>MINVALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
MINVALUE(<replaceable>expr1</replaceable> [, <replaceable>exprN</replaceable> ...]) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции MINVALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable> ...
                                            <replaceable>exprN</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и первый аргумент функции
                        <replaceable>expr1</replaceable>.</para>
                </formalpara>

                <para>Возвращает минимальное значение из входного списка чисел, строк или параметров
                    с типом DATE/TIME/TIMESTAMP.</para>
                <note>
                    <para>Если один или более входных параметров имеют значение NULL, то результатом
                        функции MINVALUE тоже будет NULL в отличие от агрегатной функции MIN.</para>
                </note>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции MINVALUE</title>
                            <para><programlisting language="sql">
SELECT MINVALUE(PRICE_1, PRICE_2) AS PRICE
FROM PRICELIST
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-case-maxvalue">MAXVALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-func-case-nullif">
                <info>
                    <title>NULLIF</title>
                    <keywordset>
                        <keyword>NULLIF</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>NULLIF</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL, PSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
NULLIF(<replaceable>expr1</replaceable>, <replaceable>expr2</replaceable>) 
                        </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции NULLIF</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable>,
                                            <replaceable>expr2</replaceable></entry>
                                    <entry>
                                        <para>Выражения любого совместимого типа.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и первый аргумент функции
                        <replaceable>expr1</replaceable>.</para>
                </formalpara>

                <para>Функция возвращает значение первого аргумента, если он неравен второму. В
                    случае равенства аргументов возвращается NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции NULLIF</title>
                            <para><programlisting language="sql">
/* запрос вернёт среднее значение поля weight по таблице, 
   за исключением строк, где он не указан (равен -1). 
   Если бы не было этой функции простой оператор avg(weight) 
   вернул бы некорректное значение */                        
SELECT AVG(NULLIF(weight, -1)) FROM cargo;
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-func-case-coalesce">COALESCE</link>, <link
                            linkend="common-expr-cond-case">CASE</link>. </para>
                </formalpara>
            </section>
        </section>
    </section>
    <section xml:id="internalfunc-agg">
        <info>
            <title>Агрегатные функции</title>
        </info>
        <para>Агрегатные функции выполняют вычисление на наборе значений и возвращают одиночное
            значение. Агрегатные функции, за исключением COUNT, не учитывают значения NULL.
            Агрегатные функции часто используются совместно с предложением GROUP BY.</para>
        <para>Агрегатные функции могут быть использованы в качестве выражений только в следующих
            случаях: <itemizedlist spacing="compact">
                <listitem>
                    <para>Список выбора инструкции SELECT (вложенный или внешний запрос);</para>
                </listitem>
                <listitem>
                    <para>Предложение HAVING.</para>
                </listitem>
            </itemizedlist> Обобщённый синтаксис агрегатных функций выглядит следующим образом:
            <programlisting>
<replaceable>&lt;agg_function&gt;</replaceable>([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
        </para>
        <section xml:id="internalfunc-agg-filter">
            <info>
                <title>FILTER</title>
                <keywordset>
                    <keyword>AVG</keyword>
                </keywordset>
            </info>

            <indexterm><primary>FILTER</primary></indexterm>

            <para>Предложение FILTER расширяет агрегатные функции дополнительным предложением WHERE.
                Если используется предложение FILTER, то результат агрегата строится только из
                строк, которые также удовлетворяют условию в дополнительном предложении
                WHERE.</para>

            <para>Как правило, предложение фильтра может быть реализовано с использованием выражения
                CASE внутри агрегатной функции: условие фильтра должно быть помещено в предложение
                WHEN, значение, которое должно быть агрегировано в предложение THEN. Поскольку
                агрегатные функции обычно пропускают значения NULL, неявное предложение ELSE NULL
                достаточно, чтобы игнорировать не одходящие под условия фультрации строки. Следующие
                два выражения эквивалентны:
                <programlisting>
SUM(<replaceable>&lt;expression&gt;</replaceable>) FILTER(WHERE <replaceable>&lt;condition&gt;</replaceable>)               
                </programlisting>
                и
                <programlisting>
SUM(CASE WHEN <replaceable>&lt;condition&gt;</replaceable> THEN <replaceable>&lt;expression&gt;</replaceable> END)               
                </programlisting>
            </para>

            <para>Для COUNT(*) этот пример выглядит иначе, потому что выражение <quote>*</quote> не
                может быть использовано в предложении THEN. Вместо этого обычно используется любое
                константное значение не равное NULL.
                <programlisting>
COUNT(*) FILTER(WHERE <replaceable>&lt;condition&gt;</replaceable>)               
                </programlisting>
                и
                <programlisting>
SUM(CASE WHEN <replaceable>&lt;condition&gt;</replaceable> THEN 1 END)               
                </programlisting>
            </para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование предложения FILTER</title>
                        <para><programlisting language="sql">
SELECT 
  invoice_year,
  SUM(revenue) FILTER (WHERE invoice_month = 1) AS jan_revenue,
  SUM(revenue) FILTER (WHERE invoice_month= 2) AS feb_revenue,
  ...
  SUM(revenue) FILTER (WHERE invoice_month = 12) AS dec_revenue 
FROM (
  SELECT
    EXTRACT(YEAR FROM invoices.invoice_date) AS invoice_year,
    EXTRACT(MONTH FROM invoices.invoice_date) AS invoice_month,
    invoices.revenue AS revenue
  FROM invoices
)
GROUP BY invoice_year
                </programlisting></para>
                    </example>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-window">
            <title>Использование агрегатных функций в качестве оконных</title>
            <para>Любая агрегатная функция может быть использована в качестве оконной. Подробнее см.
                    <link linkend="internalfunc-window-agg">OVER</link>. </para>
        </section>
        <section xml:id="internalfunc-agg-avg">
            <info>
                <title>AVG</title>
                <keywordset>
                    <keyword>AVG</keyword>
                </keywordset>
            </info>

            <indexterm><primary>AVG</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
AVG([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции AVG</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF, которая
                                        возвращает числовой тип данных. Агрегатные функции в
                                        качестве выражения не допускаются.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
            </formalpara>

            <para>Функция AVG возвращает среднее значение для группы. Значения NULL
                пропускаются.</para>
            <para>Параметр ALL применяет агрегатную функцию ко всем значениям. ALL является
                параметром по умолчанию. Параметр DISTINCT указывает на то, что функция AVG будет
                выполнена только для одного экземпляра каждого уникального значения, независимо от
                того, сколько раз встречается это значение.</para>
            <para>В случае если выборка записей пустая или содержит только значения NULL, результат
                будет содержать NULL.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции AVG</title>
                        <para><programlisting language="sql">
SELECT 
  dept_no,
  AVG(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-count">
            <info>
                <title>COUNT</title>
                <keywordset>
                    <keyword>COUNT</keyword>
                </keywordset>
            </info>

            <indexterm><primary>COUNT</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
COUNT({[ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable> | *}) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции COUNT</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF.
                                        Агрегатные функции в качестве выражения не
                                        допускаются.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BIGINT.</para>
            </formalpara>

            <para>Функция COUNT возвращает количество значений в группе, которые не являются
                NULL.</para>
            <para>При указании DISTINCT из выборки устраняются дубликаты, ALL является значением по
                умолчанию для всех выборки значений не NULL.</para>
            <para>Если вместо выражения <replaceable>expr</replaceable> указана звёздочка (*), то
                будут подсчитаны все строки. Функция COUNT(*) не принимает параметры и не может
                использоваться с ключевым словом DISTINCT. Для функции COUNT(*) не нужен параметр
                    <replaceable>expr</replaceable>, так как по определению она не использует
                сведения о каких-либо конкретных столбцах. Функция COUNT(*) возвращает количество
                строк в указанной таблице, не отбрасывая дублированные строки. Она подсчитывает
                каждую строку отдельно. При этом учитываются и строки, содержащие значения
                NULL.</para>
            <para>Для пустой выборки данных или если при выборке окажутся одни значения, содержащие
                NULL, функция возвратит значение равное 0.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции COUNT</title>
                        <para><programlisting language="sql">
SELECT 
  dept_no,
  COUNT(*) AS cnt,
  COUNT(DISTINCT name) AS cnt_name
FROM employee
GROUP BY dept_no
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-list">
            <info>
                <title>LIST</title>
                <keywordset>
                    <keyword>LIST</keyword>
                </keywordset>
            </info>
            <indexterm><primary>LIST</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
LIST([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable> [, <replaceable>separator</replaceable>]) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)] 
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>])]                  
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции LIST</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF, которая
                                        возвращает строковый тип данных или BLOB. Поля типа дата /
                                        время и числовые преобразуются к строке. Агрегатные функции
                                        в качестве выражения не допускаются.</para>
                                </entry>
                            </row>
                            <row>
                                <entry><replaceable>separator</replaceable></entry>
                                <entry>
                                    <para>Разделитель. Выражение строкового типа. По умолчанию
                                        разделителем является запятая.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>BLOB.</para>
            </formalpara>

            <para>Функция LIST возвращает строку, содержащую значения элементов выборки, которые не
                равны NULL. При пустой выборке функция возвратит NULL. Тип возвращаемого значения
                текстовый BLOB за исключением тех случаев, когда выражением являются BLOB других
                подтипов.</para>
            <para>ALL является опцией по умолчанию. При ней обрабатываются все значения в выборке,
                не содержащие NULL. При указании DISTINCT из выборки устраняются дубликаты.</para>
            <para>Значения выражения <replaceable>expr</replaceable> и разделитель
                    <replaceable>separator</replaceable> поддерживают тип данных BLOB любого размера
                и набора символов. Поля типа дата / время и числовые перед проведением операции
                конкатенации преобразуются в строки.</para>
            <note>
                <para>Порядок конкатенации строк определяется порядком чтения записей из источников,
                    который в общем случае не определён. Для придания списку необходимого порядка вы
                    можете предварительно упорядочить источник данных, например с помощью
                    производной таблицы.</para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции LIST</title>
                        <para><programlisting language="sql">
-- Получение списка, порядок не определён                    
SELECT LIST (display_name, '; ') 
FROM GR_WORK;          

-- Получение списка в алфавитном порядке
SELECT LIST (display_name, '; ') 
FROM (SELECT display_name 
      FROM GR_WORK 
      ORDER BY display_name);
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-max">
            <info>
                <title>MAX</title>
                <keywordset>
                    <keyword>MAX</keyword>
                </keywordset>
            </info>
            <indexterm><primary>MAX</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
MAX([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)] 
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции MAX</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF.
                                        Агрегатные функции в качестве выражения не
                                        допускаются.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>DOUBLE PRECISION или масштабируемый BIGINT в зависимости от типа аргумента
                    функции <replaceable>expr</replaceable>.</para>
            </formalpara>

            <para>Функция MAX возвращает максимальный элемент выборки, которые не равны NULL. При
                пустой выборке, или при выборке из одних NULL функция возвратит NULL. Если аргумент
                функции строка, то функция вернёт значение, которое окажется последним в сортировке
                при применении COLLATE.</para>
            <note>
                <para>Параметр DISTINCT не имеет смысла при использовании функцией MAX и доступен
                    только для совместимости со стандартом. </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции MAX</title>
                        <para><programlisting language="sql">
SELECT 
  dept_no,
  MAX(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>, <link linkend="internalfunc-agg-min"
                        >MIN</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-min">
            <info>
                <title>MIN</title>
                <keywordset>
                    <keyword>MIN</keyword>
                </keywordset>
            </info>

            <indexterm><primary>MIN</primary></indexterm>

            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>

            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
MIN([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                  
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции MIN</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF.
                                        Агрегатные функции в качестве выражения не
                                        допускаются.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
            </formalpara>

            <para>Функция MIN возвращает минимальный элемент выборки, которые не равны NULL. При
                пустой выборке, или при выборке из одних NULL функция возвратит NULL. Если аргумент
                функции строка, то функция вернёт значение, которое окажется первым в сортировке при
                применении COLLATE.</para>
            <note>
                <para>Параметр DISTINCT не имеет смысла при использовании функцией MIN и доступен
                    только для совместимости со стандартом. </para>
            </note>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции MIN</title>
                        <para><programlisting language="sql">
SELECT 
  dept_no,
  MIN(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>, <link linkend="internalfunc-agg-max"
                        >MAX</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-sum">
            <info>
                <title>SUM</title>
                <keywordset>
                    <keyword>SUM</keyword>
                </keywordset>
            </info>
            <indexterm><primary>SUM</primary></indexterm>
            <formalpara>
                <title>Доступно в:</title>

                <para>DSQL.</para>
            </formalpara>
            <formalpara>
                <title>Синтаксис:</title>
                <para>
                    <programlisting>
SUM([ALL | DISTINCT] <replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                  
                </programlisting>
                </para>
            </formalpara>

            <para>
                <table frame="all">
                    <?dbfo keep-together='auto'?>
                    <title>Параметры функции SUM</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                        <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                        <thead>
                            <row>
                                <entry align="center">Параметр</entry>
                                <entry align="center">Описание</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry><replaceable>expr</replaceable></entry>
                                <entry>
                                    <para>Выражение. Может содержать столбец таблицы, константу,
                                        переменную, выражение, неагрегатную функцию или UDF, которая
                                        возвращает числовой тип данных. Агрегатные функции в
                                        качестве выражения не допускаются.</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>

            <formalpara>
                <title>Тип возвращаемого результата:</title>
                <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
            </formalpara>

            <para>Функция SUM возвращает сумму элементов выборки, которые не равны NULL. При пустой
                выборке, или при выборке из одних NULL функция возвратит NULL.</para>
            <para>ALL является опцией по умолчанию. При ней обрабатываются все значения из выборки,
                не содержащие NULL. При указании DISTINCT из выборки устраняются дубликаты, после
                осуществляется подсчёт.</para>

            <formalpara>
                <title>Примеры:</title>
                <para>
                    <example>
                        <title>Использование функции SUM</title>
                        <para><programlisting language="sql">
SELECT 
  dept_no,
  SUM(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                    </example>
                </para>
            </formalpara>

            <formalpara>
                <title>См. также:</title>

                <para>
                    <link linkend="dml-select">SELECT</link>. </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-agg-stat">
            <info>
                <title>Статистические функции</title>
            </info>
            <para>Статистические функции являются агрегатными функциями. Эти функции не учитывают
                значения NULL. К аргументу статистической функции не применимы параметры ALL и
                DISTINCT.</para>
            <para>Статистические функции часто используются совместно с предложением GROUP BY. Любую
                из статистических функций можно использовать в качестве оконной. Подробнее см. <link
                    linkend="internalfunc-window-agg">OVER</link>.</para>
            <section xml:id="internalfunc-agg-stat-corr">
                <info>
                    <title>CORR</title>
                    <keywordset>
                        <keyword>CORR</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>CORR</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CORR(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции CORR</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>expr2</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция CORR возвращает коэффициент корреляции для пары выражений,
                    возвращающих числовые значения.</para>
                <para>Функция
                    <programlisting>CORR(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>) </programlisting>
                    эквивалентна
                    <programlisting>COVAR_POP(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>) / (STDDEV_POP(<replaceable>&lt;expr2&gt;</replaceable>) * STDDEV_POP(<replaceable>&lt;expr1&gt;</replaceable>))</programlisting>
                </para>
                <para>В статистическом смысле, корреляция — это степень связи между переменными.
                    Связь между переменными означает, что значение одной переменной можно в
                    определённой степени предсказать по значению другой. Коэффициент корреляции
                    представляет степень корреляции в виде числа в диапазоне от -1 (высокая обратная
                    корреляция) до 1 (высокая корреляция). Значение 0 соответствует отсутствию
                    корреляции.</para>
                <para>В случае если выборка записей пустая или содержит только значения NULL,
                    результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции CORR</title>
                            <para><programlisting language="sql">
SELECT
    CORR(alength, aheight) AS c_corr
FROM measure              
                </programlisting>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-covar_pop">COVAR_POP</link>, <link
                            linkend="internalfunc-agg-stat-stddev_pop">STDDEV_POP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-covar_pop">
                <info>
                    <title>COVAR_POP</title>
                    <keywordset>
                        <keyword>COVAR_POP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COVAR_POP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COVAR_POP(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COVAR_POP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>expr2</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция COVAR_POP возвращает ковариацию совокупности (population covariance)
                    пар выражений с числовыми значениями.</para>
                <para>Функция
                    <programlisting>COVAR_POP(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
(SUM(<replaceable>&lt;expr1&gt;</replaceable> * <replaceable>&lt;expr2&gt;</replaceable>) - SUM(<replaceable>&lt;expr1&gt;</replaceable>) * SUM(<replaceable>&lt;expr2&gt;</replaceable>) / COUNT(*)) 
  / COUNT(*)                        
</programlisting>
                </para>
                <para>В случае если выборка записей пустая или содержит только значения NULL,
                    результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции COVAR_POP</title>
                            <para><programlisting language="sql">
SELECT
    COVAR_POP(alength, aheight) AS c_corr
FROM measure              
                </programlisting>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-covar_samp">COVAR_SAMP</link>, <link
                            linkend="internalfunc-agg-sum">SUM</link>, <link
                            linkend="internalfunc-agg-count">COUNT</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-covar_samp">
                <info>
                    <title>COVAR_SAMP</title>
                    <keywordset>
                        <keyword>COVAR_SAMP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>COVAR_SAMP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
COVAR_SAMP(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции COVAR_SAMP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr1</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>expr2</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция COVAR_SAMP возвращает выборочную ковариацию (sample covariance) пары
                    выражений с числовыми значениями.</para>
                <para>Функция
                    <programlisting>COVAR_SAMP(<replaceable>&lt;expr1&gt;</replaceable>, <replaceable>&lt;expr2&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
(SUM(<replaceable>&lt;expr1&gt;</replaceable> * <replaceable>&lt;expr2&gt;</replaceable>) - SUM(<replaceable>&lt;expr1&gt;</replaceable>) * SUM(<replaceable>&lt;expr2&gt;</replaceable>) / COUNT(*)) 
  / (COUNT(*) - 1)                        
</programlisting>
                </para>
                <para>В случае если выборка записей пустая, содержит только 1 запись или содержит
                    только значения NULL, результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции COVAR_SAMP</title>
                            <para><programlisting language="sql">
SELECT
    COVAR_SAMP(alength, aheight) AS c_corr
FROM measure              
                </programlisting>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-covar_pop">COVAR_POP</link>, <link
                            linkend="internalfunc-agg-sum">SUM</link>, <link
                            linkend="internalfunc-agg-count">COUNT</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-stddev_pop">
                <info>
                    <title>STDDEV_POP</title>
                    <keywordset>
                        <keyword>STDDEV_POP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>STDDEV_POP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
STDDEV_POP(<replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции STDDEV_POP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION или NUMERIC в зависимости от типа
                            <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция STDDEV_POP возвращает среднеквадратичное отклонение для группы.
                    Значения NULL пропускаются.</para>
                <para>Функция
                    <programlisting>STDDEV_POP(<replaceable>&lt;expr&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>SQRT(VAR_POP(<replaceable>&lt;expr&gt;</replaceable>))</programlisting>
                </para>
                <para>В случае если выборка записей пустая или содержит только значения NULL,
                    результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции STDDEV_POP</title>
                            <para><programlisting language="sql">
SELECT 
  dept_no,
  STDDEV_POP(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-stddev_pop">STDDEV_SAMP</link>, <link
                            linkend="internalfunc-agg-stat-var_pop">VAR_POP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-stddev_samp">
                <info>
                    <title>STDDEV_SAMP</title>
                    <keywordset>
                        <keyword>STDDEV_SAMP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>STDDEV_SAMP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
STDDEV_SAMP(<replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции STDDEV_SAMP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION или NUMERIC в зависимости от типа
                            <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция STDDEV_SAMP возвращает стандартное отклонение для группы. Значения
                    NULL пропускаются.</para>
                <para>Функция
                    <programlisting>STDDEV_SAMP(<replaceable>&lt;expr&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>SQRT(VAR_SAMP(<replaceable>&lt;expr&gt;</replaceable>))</programlisting>
                </para>
                <para>В случае если выборка записей пустая, содержит только 1 запись или содержит
                    только значения NULL, результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции STDDEV_SAMP</title>
                            <para><programlisting language="sql">
SELECT 
  dept_no,
  STDDEV_SAMP(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-stddev_pop">STDDEV_POP</link>, <link
                            linkend="internalfunc-agg-stat-var_samp">VAR_SAMP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-var_pop">
                <info>
                    <title>VAR_POP</title>
                    <keywordset>
                        <keyword>VAR_POP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>VAR_POP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
VAR_POP(<replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции VAR_POP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION или NUMERIC в зависимости от типа
                            <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция VAR_POP возвращает выборочную дисперсию для группы. Значения NULL
                    пропускаются.</para>
                <para>Функция
                    <programlisting>VAR_POP(<replaceable>&lt;expr&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
(SUM(<replaceable>&lt;expr&gt;</replaceable> * <replaceable>&lt;expr&gt;</replaceable>) - SUM(<replaceable>&lt;expr&gt;</replaceable>) * SUM(<replaceable>&lt;expr&gt;</replaceable>) / COUNT(<replaceable>&lt;expr&gt;</replaceable>)) 
  / COUNT(<replaceable>&lt;expr&gt;</replaceable>)
</programlisting>
                </para>
                <para>В случае если выборка записей пустая или содержит только значения NULL,
                    результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции VAR_POP</title>
                            <para><programlisting language="sql">
SELECT 
  dept_no,
  VAR_POP(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-var_samp">VAR_SAMP</link>, <link
                            linkend="internalfunc-agg-sum">SUM</link>, <link
                            linkend="internalfunc-agg-count">COUNT</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-var_samp">
                <info>
                    <title>VAR_SAMP</title>
                    <keywordset>
                        <keyword>VAR_SAMP</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>VAR_SAMP</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
VAR_SAMP(<replaceable>&lt;expr&gt;</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции VAR_SAMP</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF,
                                            которая возвращает числовой тип данных. Агрегатные
                                            функции в качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION или NUMERIC в зависимости от типа
                            <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция VAR_SAMP возвращает несмещённую выборочную дисперсию для группы.
                    Значения NULL пропускаются.</para>
                <para>Функция
                    <programlisting>VAR_SAMP(<replaceable>&lt;expr&gt;</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
(SUM(<replaceable>&lt;expr&gt;</replaceable> * <replaceable>&lt;expr&gt;</replaceable>) - SUM(<replaceable>&lt;expr&gt;</replaceable>) * SUM(<replaceable>&lt;expr&gt;</replaceable>) / COUNT(<replaceable>&lt;expr&gt;</replaceable>)) 
  / (COUNT(<replaceable>&lt;expr&gt;</replaceable>) - 1)
</programlisting>
                </para>
                <para>В случае если выборка записей пустая, содержит только 1 запись или содержит
                    только значения NULL, результат будет содержать NULL.</para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Использование функции VAR_SAMP</title>
                            <para><programlisting language="sql">
SELECT 
  dept_no,
  VAR_SAMP(salary)
FROM employee
GROUP BY dept_no
                </programlisting></para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-var_pop">VAR_POP</link>, <link
                            linkend="internalfunc-agg-sum">SUM</link>, <link
                            linkend="internalfunc-agg-count">COUNT</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-agg-regr">
            <info>
                <title>Функции линейной регрессии</title>
            </info>
            <para>Функции линейной регрессии полезны для продолжения линии тренда. Линия тренда –
                это, как правило, закономерность, которой придерживается набор значений. Линия
                тренда полезна для прогнозирования будущих значений. Этот означает, что тренд будет
                продолжаться и в будущем. Для продолжения линии тренда необходимо знать угол наклона
                и точку пересечения с осью Y. Набор линейных функций включает функции для вычисления
                этих значений.</para>
            <para>В синтаксисе функций, <replaceable>у</replaceable> интерпретируется в качестве
                переменной, зависящей от <replaceable>х</replaceable>.</para>
            <para>Любую функции линейной регрессии из статистических функций можно использовать в
                качестве оконной. Подробнее см. <link linkend="internalfunc-window-agg"
                >OVER</link>.</para>
            <section xml:id="internalfunc-agg-regr-regr_avgx">
                <info>
                    <title>REGR_AVGX</title>
                    <keywordset>
                        <keyword>REGR_AVGX</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_AVGX</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_AVGX(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_AVGX</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция REGR_AVGX вычисляет среднее независимой переменной линии регрессии. </para>
                <para>Функция
                    <programlisting>REGR_AVGX(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
SUM(<replaceable>&lt;X></replaceable>) / REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>)                       

<replaceable>&lt;X></replaceable> ::= CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN <replaceable>x</replaceable> END                    
                    </programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_count">REGR_COUNT</link>, <link
                            linkend="internalfunc-agg-regr-regr_avgy">REGR_AVGY</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_avgy">
                <info>
                    <title>REGR_AVGY</title>
                    <keywordset>
                        <keyword>REGR_AVGY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_AVGY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_AVGY(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_AVGY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция REGR_AVGY вычисляет среднее зависимой переменной линии регрессии. </para>
                <para>Функция
                    <programlisting>REGR_AVGY(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
SUM(<replaceable>&lt;Y></replaceable>) / REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>)                       

<replaceable>&lt;Y></replaceable> ::= CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN <replaceable>y</replaceable> END                      
                    </programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_count">REGR_COUNT</link>, <link
                            linkend="internalfunc-agg-regr-regr_avgx">REGR_AVGX</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_count">
                <info>
                    <title>REGR_COUNT</title>
                    <keywordset>
                        <keyword>REGR_COUNT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_COUNT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_COUNT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT.</para>
                </formalpara>

                <para>Функция REGR_COUNT возвращает количество непустых пар, используемых для
                    создания линии регрессии. </para>
                <para>Функция
                    <programlisting>REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
SUM(CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN 1 END)                       
</programlisting>
                </para>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_intercept">
                <info>
                    <title>REGR_INTERCEPT</title>
                    <keywordset>
                        <keyword>REGR_INTERCEPT</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_INTERCEPT</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_INTERCEPT(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_INTERCEPT</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция REGR_INTERCEPT вычисляет точку пересечения линии регрессии с осью  Y. </para>
                <para>Функция
                    <programlisting>REGR_INTERCEPT(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
REGR_AVGY(<replaceable>y</replaceable>, <replaceable>x</replaceable>) - REGR_SLOPE(<replaceable>y</replaceable>, <replaceable>x</replaceable>) * REGR_AVGX(<replaceable>y</replaceable>, <replaceable>x</replaceable>)                      
</programlisting>
                </para>

                <formalpara>
                    <title>Примеры:</title>
                    <para>
                        <example>
                            <title>Прогнозирование объёмов продаж</title>
                            <para><programlisting language="sql">
WITH RECURSIVE years(byyear) AS (
  SELECT 1991 FROM rdb$database UNION ALL
  SELECT byyear+1 FROM years WHERE byyear &lt; 2020
),
s AS (
  SELECT EXTRACT(YEAR FROM order_date) AS byyear,
         SUM(total_value) AS total_value
  FROM sales GROUP BY 1
),
regr AS (
  SELECT REGR_INTERCEPT(total_value, byyear) as intercept,
         REGR_SLOPE(total_value, byyear) as slope
FROM s)
SELECT years.byyear AS byyear,
       intercept + (slope * years.byyear) AS total_value
FROM years CROSS JOIN regr
                </programlisting></para>
                            <para>
                                <screen>
BYYEAR     TOTAL_VALUE
----------------------------
 1991        118377,35
 1992        414557,62
 1993        710737,89
 1994       1006918,16
 1995       1303098,43
 1996       1599278,69
 1997       1895458,96
 1998       2191639,23
 1999       2487819,50
 2000       2783999,77
...                                
                            </screen>
                            </para>
                        </example>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_avgy">REGR_AVGY</link>, <link
                            linkend="internalfunc-agg-regr-regr_avgx">REGR_AVGX</link>, <link
                            linkend="internalfunc-agg-regr-regr_slope">REGR_SLOPE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-stat-regr-regr_r2">
                <info>
                    <title>REGR_R2</title>
                    <keywordset>
                        <keyword>REGR_R2</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_R2</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_R2(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_R2</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция REGR_R2 вычисляет коэффициент детерминации, или R-квадрат, линии
                    регрессии.</para>
                <para>Функция
                    <programlisting>REGR_R2(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
POWER(CORR(<replaceable>y</replaceable>, <replaceable>x</replaceable>), 2)                   
</programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-corr">CORR</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_slope">
                <info>
                    <title>REGR_SLOPE</title>
                    <keywordset>
                        <keyword>REGR_SLOPE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_SLOPE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_SLOPE(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_SLOPE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Функция REGR_SLOPE вычисляет угол наклона линии регрессии. </para>
                <para>Функция
                    <programlisting>REGR_SLOPE(<replaceable>y</replaceable>, <replaceable>x</replaceable>)</programlisting>
                    эквивалентна
                    <programlisting>
COVAR_POP(<replaceable>y</replaceable>, <replaceable>x</replaceable>) / VAR_POP(<replaceable>&lt;X></replaceable>) 
                        
<replaceable>&lt;X></replaceable> ::= CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN <replaceable>x</replaceable> END                        
</programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-stat-covar_pop">COVAR_POP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_sxx">
                <info>
                    <title>REGR_SXX</title>
                    <keywordset>
                        <keyword>REGR_SXX</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_SXX</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_SXX(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_SXX</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Диагностическая статистика, используемая для анализа регрессии. Вычисляется
                    следующим образом:
                    <programlisting>
REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>) * VAR_POP(<replaceable>&lt;X></replaceable>)                  

<replaceable>&lt;X></replaceable> ::= CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN <replaceable>x</replaceable> END                     
                    </programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_count">REGR_COUNT</link>, <link
                            linkend="internalfunc-agg-stat-var_pop">VAR_POP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_sxy">
                <info>
                    <title>REGR_SXY</title>
                    <keywordset>
                        <keyword>REGR_SXY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_SXY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_SXY(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_SXY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Диагностическая статистика, используемая для анализа регрессии. Вычисляется
                    следующим образом:
                    <programlisting>
REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>) * COVAR_POP(<replaceable>y</replaceable>, <replaceable>x</replaceable>)                  
</programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_count">REGR_COUNT</link>, <link
                            linkend="internalfunc-agg-stat-covar_pop">COVAR_POP</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-agg-regr-regr_syy">
                <info>
                    <title>REGR_SYY</title>
                    <keywordset>
                        <keyword>REGR_SYY</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>REGR_SYY</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>

                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
REGR_SYY(<replaceable>y</replaceable>, <replaceable>x</replaceable>) [FILTER (WHERE <replaceable>&lt;condition&gt;</replaceable>)]
  [OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])]                 
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры функции REGR_SYY</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>y</replaceable></entry>
                                    <entry>
                                        <para>Зависимая переменная линии регрессии. Может содержать
                                            столбец таблицы, константу, переменную, выражение,
                                            неагрегатную функцию или UDF, которая возвращает
                                            числовой тип данных. Агрегатные функции в качестве
                                            выражения не допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>x</replaceable></entry>
                                    <entry>
                                        <para>Независимая переменная линии регрессии. Может
                                            содержать столбец таблицы, константу, переменную,
                                            выражение, неагрегатную функцию или UDF, которая
                                            возвращает числовой тип данных. Агрегатные функции в
                                            качестве выражения не допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION.</para>
                </formalpara>

                <para>Диагностическая статистика, используемая для анализа регрессии. Вычисляется
                    следующим образом:
                    <programlisting>
REGR_COUNT(<replaceable>y</replaceable>, <replaceable>x</replaceable>) * VAR_POP(<replaceable>&lt;Y></replaceable>)                  

<replaceable>&lt;Y></replaceable> ::= CASE WHEN <replaceable>x</replaceable> IS NOT NULL AND <replaceable>y</replaceable> IS NOT NULL THEN <replaceable>y</replaceable> END                     
                    </programlisting>
                </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="internalfunc-agg-regr-regr_count">REGR_COUNT</link>, <link
                            linkend="internalfunc-agg-stat-var_pop">VAR_POP</link>. </para>
                </formalpara>
            </section>
        </section>
    </section>

    <section xml:id="internalfunc-window">
        <info>
            <title>Оконные (аналитические) функции</title>
            <keywordset>
                <keyword>OVER</keyword>
            </keywordset>
        </info>
        <indexterm><primary>OVER</primary></indexterm>
        <para>Согласно SQL спецификации оконные функции (также известные как аналитические функции)
            являются своего рода агрегатными функциями, не уменьшающими степень детализации. При
            этом агрегированные данные выводятся вместе с неагрегированными.</para>
        <para>Синтаксически вызов оконной функции есть указание её имени, за которым всегда следует
            ключевое слово OVER() с возможными аргументами внутри скобок. В этом и заключается её
            синтаксическое отличие от обычной функции или агрегатной функции. Оконные функции могут
            находиться только в списке SELECT и предложении ORDER BY.</para>
        <para>Предложение OVER может содержать разбивку по группам (&quot;секционирование&quot;),
            сортировку и рамку окна.</para>
        <formalpara>
            <title>Доступно в:</title>

            <para>DSQL. </para>
        </formalpara>
        <formalpara>
            <title>Синтаксис:</title>

            <para><programlisting>
<replaceable>&lt;window function&gt;</replaceable> ::=    
  <replaceable>&lt;function name&gt;</replaceable>([<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...]]) OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                      
     
<replaceable>&lt;function name&gt;</replaceable> ::=
     <replaceable>&lt;aggregate function&gt;</replaceable> 
   | <replaceable>&lt;ranking function&gt;</replaceable>
   | <replaceable>&lt;navigation function&gt;</replaceable> 
               
<replaceable>&lt;window specification&gt;</replaceable> ::= 
   ([<replaceable>&lt;window name&gt;</replaceable>] [<replaceable>&lt;window partition&gt;</replaceable>] [<replaceable>&lt;window order&gt;</replaceable>] [<replaceable>&lt;window frame&gt;</replaceable>])  
 
                  
<replaceable>&lt;window partition&gt;</replaceable> ::= PARTITION BY <replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...]

<replaceable>&lt;window order&gt;</replaceable> ::= 
  ORDER BY <replaceable>&lt;expr&gt;</replaceable> [<replaceable>&lt;direction&gt;</replaceable>] [<replaceable>&lt;nulls placement&gt;</replaceable>]  
        [, <replaceable>&lt;expr&gt;</replaceable> [<replaceable>&lt;direction&gt;</replaceable>] [<replaceable>&lt;nulls placement&gt;</replaceable>] ...]

<replaceable>&lt;direction&gt;</replaceable> ::= {ASC | DESC} 

<replaceable>&lt;nulls placement&gt;</replaceable> ::= NULLS {FIRST | LAST} 
                
<replaceable>&lt;window frame&gt;</replaceable> ::= 
  {ROWS | RANGE} <replaceable>&lt;window frame extent&gt;</replaceable>                

<replaceable>&lt;window frame extent&gt;</replaceable> ::= 
  <replaceable>&lt;window frame preceding&gt;</replaceable> | <replaceable>&lt;window frame between&gt;</replaceable> 

<replaceable>&lt;window frame preceding&gt;</replaceable> ::= 
  UNBOUNDED PRECEDING | <replaceable>&lt;expr&gt;</replaceable> PRECEDING | CURRENT ROW 

<replaceable>&lt;window frame between&gt;</replaceable> ::= 
  BETWEEN { UNBOUNDED PRECEDING | <replaceable>&lt;expr&gt;</replaceable> PRECEDING | <replaceable>&lt;expr&gt;</replaceable> FOLLOWING | CURRENT ROW } 
      AND { UNBOUNDED FOLLOWING | <replaceable>&lt;expr&gt;</replaceable> PRECEDING | <replaceable>&lt;expr&gt;</replaceable> FOLLOWING | CURRENT ROW }
       
<replaceable>&lt;ranking function&gt;</replaceable> ::= 
    DENSE_RANK 
  | RANK
  | PERCENT_RANK 
  | CUME_DIST
  | NTILE
  | ROW_NUMBER 

<replaceable>&lt;navigation function&gt;</replaceable> ::= 
    LEAD 
  | LAG 
  | FIRST_VALUE 
  | LAST_VALUE 
  | NTH_VALUE
   
<replaceable>&lt;query spec&gt;</replaceable> ::=
  SELECT
    [<replaceable>&lt;first clause&gt;</replaceable>] [<replaceable>&lt;skip clause&gt;</replaceable>]
    [<replaceable>&lt;distinct clause&gt;</replaceable>]
    <replaceable>&lt;select list&gt;</replaceable>
    <replaceable>&lt;from clause&gt;</replaceable>
    [<replaceable>&lt;where clause&gt;</replaceable>]
    [<replaceable>&lt;group clause&gt;</replaceable>]
    [<replaceable>&lt;having clause&gt;</replaceable>]
    [<replaceable>&lt;named windows clause&gt;</replaceable>]
    [<replaceable>&lt;order clause&gt;</replaceable>]
    [<replaceable>&lt;rows clause&gt;</replaceable>]
    [<replaceable>&lt;offset clause&gt;</replaceable>] [<replaceable>&lt;limit clause&gt;</replaceable>]
    [<replaceable>&lt;plan clause&gt;</replaceable>]

<replaceable>&lt;named windows clause&gt;</replaceable> ::=
  WINDOW <replaceable>&lt;window definition&gt;</replaceable> [, <replaceable>&lt;window definition&gt;</replaceable>] ...

<replaceable>&lt;window definition&gt;</replaceable> ::=
  <replaceable>&lt;window name&gt;</replaceable> AS <replaceable>&lt;window specification&gt;</replaceable>  
                                
            </programlisting></para>
        </formalpara>

        <para>
            <table frame="all">
                <?dbfo keep-together='auto'?>
                <title>Параметры оконных функций</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                    <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                    <thead>
                        <row>
                            <entry align="center">Параметр</entry>
                            <entry align="center">Описание</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><replaceable>expr</replaceable></entry>
                            <entry>
                                <para>Выражение. Может содержать столбец таблицы, константу,
                                    переменную, выражение, скалярную или агрегатную функцию. Оконные
                                    функции в качестве выражения не допускаются.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>window partition</replaceable></entry>
                            <entry>
                                <para>Выражение секционирования.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>window order</replaceable></entry>
                            <entry>
                                <para>Выражение сортировки.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>window frame</replaceable></entry>
                            <entry>
                                <para>Выражение для задания рамки окна.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>window name</replaceable></entry>
                            <entry>
                                <para>Имя окна.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>direction</replaceable></entry>
                            <entry>
                                <para>Направление сортировки.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>nulls placement</replaceable></entry>
                            <entry>
                                <para>Положение псевдозначения NULL в отсортированном наборе.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>aggregate function</replaceable></entry>
                            <entry>
                                <para>Агрегатная функция.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>ranking function</replaceable></entry>
                            <entry>
                                <para>Ранжирующая функция.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>navigation function</replaceable></entry>
                            <entry>
                                <para>Навигационная функция.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <section xml:id="internalfunc-window-agg">
            <info>
                <title>Агрегатные функции</title>
            </info>
            <para>Все агрегатные функции могут быть использованы в качестве оконных функций, при
                добавлении предложения OVER. </para>
            <para>Допустим, у нас есть таблица EMPLOYEE со столбцами ID, NAME и SALARY. Нам
                необходимо показать для каждого сотрудника, соответствующую ему заработную плату и
                процент от фонда заработной платы.</para>
            <para>Простым запросом это решается следующим
                образом:<programlisting language="sql">
select
    id,
    department,
    salary,
    salary / (select sum(salary) from employee) percentage
from employee
order by id;                
            </programlisting></para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id department salary percentage
-- ---------- ------ ----------
1  R &amp; D       10.00     0.2040
2  SALES       12.00     0.2448
3  SALES        8.00     0.1632
4  R &amp; D        9.00     0.1836
5  R &amp; D       10.00     0.2040                    
                </screen>
                </para>
            </formalpara>
            <para>Запрос повторяется и может работать довольно долго, особенно если EMPLOYEE
                является сложным представлением.</para>
            <para>Этот запрос может быть переписан в более быстрой и элегантной форме с
                использованием оконных
                функций:<programlisting language="sql">
select
  id,
  department,
  salary,
  salary / sum(salary) OVER () percentage
from employee
order by id;                    
            </programlisting></para>
            <para>Здесь <emphasis role="bold">sum(salary) OVER ()</emphasis> вычисляет сумму всех
                зарплат из запроса (таблицы сотрудников). </para>
        </section>
        <section xml:id="internalfunc-window-partition">
            <info>
                <title>Секционирование</title>
                <keywordset>
                    <keyword>PARTITION BY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>OVER</primary>
                <secondary>PARTITION BY</secondary>
            </indexterm>
            <para>Как и для агрегатных функций, которые могут работать отдельно или по отношению к
                группе, оконные функции тоже могут работать для групп, которые называются
                &quot;секциями&quot; (partition) или разделами. </para>
            <formalpara>
                <title>Синтаксис:</title>

                <para><programlisting>
<replaceable>&lt;window function&gt;</replaceable>(...) OVER (PARTITION BY <replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...])                      
            </programlisting></para>
            </formalpara>
            <para>Для каждой строки, оконная функция обсчитывает только строки, которые попадают в
                то же самую секцию, что и текущая строка.</para>
            <para>Агрегирование над группой может давать более одной строки, таким образом, к
                результирующему набору, созданному секционированием, присоединяются результаты из
                основного запроса, используя тот же список выражений, что и для секции.</para>
            <para>Продолжая пример с сотрудниками, вместо того чтобы считать процент зарплаты
                каждого сотрудника от суммарной зарплаты сотрудников, посчитаем процент от суммарной
                зарплаты сотрудников того же
                отдела:<programlisting language="sql">
select
  id,
  department,
  salary,
  salary / sum(salary) OVER (PARTITION BY department) percentage
from employee
order by id;                    
            </programlisting></para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id department salary percentage
-- ---------- ------ ----------
1  R &amp; D       10.00     0.3448
2  SALES       12.00     0.6000
3  SALES        8.00     0.4000
4  R &amp; D        9.00     0.3103
5  R &amp; D       10.00     0.3448                   
                </screen>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-window-order">
            <info>
                <title>Сортировка</title>
                <keywordset>
                    <keyword>ORDER BY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>OVER</primary>
                <secondary>ORDER BY</secondary>
            </indexterm>
            <para>Предложение ORDER BY может быть использовано с секционированием или без него.
                Предложение ORDER BY внутри OVER задаёт порядок, в котором оконная функция будет
                обрабатывать строки. Этот порядок не обязан совпадать с порядком вывода строк. </para>
            <para>Для стандартных агрегатных функций, предложение ORDER BY внутри предложения OVER
                заставляет возвращать частичные результаты агрегации по мере обработки
                записей.</para>
            <formalpara>
                <title>Пример</title>
                <para>
                    <programlisting language="sql">
SELECT
  id,
  salary,
  SUM(salary) OVER (ORDER BY salary) AS cumul_salary
FROM employee
ORDER BY salary;                 
                </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary cumul_salary
-- ------ ------------
3    8.00         8.00
4    9.00        17.00
1   10.00        37.00
5   10.00        37.00
2   12.00        49.00                 
                </screen>
                </para>
            </formalpara>
            <para>В этом случае cumul_salary возвращает частичную/накопительную агрегацию (функции
                SUM). Может показаться странным, что значение 37,00 повторяется для идентификаторов
                1 и 5, но так и должно быть. Сортировка (ORDER BY) ключей группирует их вместе, и
                агрегат вычисляется единожды (но суммируя сразу два значения 10,00). Чтобы избежать
                этого, вы можете добавить поле ID в конце предложения ORDER BY.</para>
            <para>Это происходит потому, что не задана рамка окна, которая по умолчанию, с указанием
                ORDER BY состоит из всех строк от начала раздела до текущей строки и строк, равных
                текущей по значению выражения ORDER BY (т.е. RANGE BETWEEN UNBOUNDED PRECEDING AND
                CURRENT ROW). Без ORDER BY рамка по умолчанию состоит из всех строк раздела.
                Подробней о <link linkend="internalfunc-window-framing">рамке окна</link> (кадрах
                окна) будет рассказано далее.</para>
            <para>Вы можете использовать несколько окон с различными сортировками, и дополнять
                предложение ORDER BY опциями ASC/DESC и NULLS FIRST/LAST.</para>
            <para>С секциями предложение ORDER BY работает таким же образом, но на границе каждой
                секции агрегаты сбрасываются.</para>
            <para>Все агрегатные функции могут использовать предложение ORDER BY, за исключением
                LIST().</para>
            <para>Следующий пример показывает сумму кредита, накопленную сумму выплат и остаток по
                выплатам.</para>
            <formalpara>
                <title>Пример</title>
                <para>
                    <programlisting language="sql">
SELECT
  payments.id AS id,
  payments.bydate AS bydate,
  credit.amount AS credit_amount,
  payments.amount AS pay,
  SUM(payments.amount) OVER(ORDER BY payments.bydate) AS s_amount,
  SUM(payments.amount) OVER(ORDER BY payments.bydate,
                                     payments.id) AS s_amount2,
  credit.amount - SUM(payments.amount) OVER(ORDER BY payments.bydate,
                                                     payments.id) AS balance
FROM credit
JOIN payments ON payments.credit_id = credit.id
WHERE credit.id = 1
ORDER BY payments.bydate                
                </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
ID BYDATE     CREDIT_AMOUNT PAY    S_AMOUNT S_AMOUNT2 BALANCE
-- ---------- ------------- ------ -------- --------- ----------
1  15.01.2015 1000000       100000  100000  100000    900000
2  15.02.2015 1000000       150000  250000  250000    750000
3  15.03.2015 1000000       130000  400000  380000    620000
4  15.03.2015 1000000        20000  400000  400000    600000
5  15.04.2015 1000000       200000  600000  600000    400000
6  15.05.2015 1000000       150000  750000  750000    250000
7  15.06.2015 1000000       150000 1000000  900000    100000
8  15.06.2015 1000000       100000 1000000 1000000         0               
                </screen>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-window-framing">
            <info>
                <title>Рамка окна</title>
                <keywordset>
                    <keyword>ROWS</keyword>
                    <keyword>RANGE</keyword>
                    <keyword>PRECEDING</keyword>
                    <keyword>FOLLOWING</keyword>
                    <keyword>UNBOUNDED</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>OVER</primary>
                <secondary>ROWS</secondary>
            </indexterm>
            <indexterm>
                <primary>OVER</primary>
                <secondary>RANGE</secondary>
            </indexterm>
            <para>Набор строк внутри секции которым оперирует оконная функция называется <emphasis
                    role="italic">рамкой окна</emphasis> (кадры окна). Рамка окна состоит из трёх
                частей: единица (unit), начальная граница и конечная граница. В качестве единицы
                может быть использовано ключевые слова RANGE или ROWS, которые указывают каким
                образом определены границы окна. Границы окна определяются следующими
                    выражениями:<itemizedlist spacing="compact">
                    <listitem>
                        <para><code><replaceable>&lt;expr&gt;</replaceable> PRECEDING</code></para>
                    </listitem>
                    <listitem>
                        <para><code><replaceable>&lt;expr&gt;</replaceable> FOLLOWING</code></para>
                    </listitem>
                    <listitem>
                        <para><code>CURRENT ROW</code></para>
                    </listitem>
                </itemizedlist></para>
            <para>Предложения ROWS и RANGE требуют, чтобы было указано предложение ORDER BY. Если
                предложение ORDER BY отсутствует, то для агрегатных функций рамка окна состоит из
                всех строк в разбиении. Если задано предложение ORDER BY, то по умолчанию рамка окна
                состоит из всех строк, от начала разбиения до текущей строки, плюс любые следующие
                строки, которые равны текущей строке в соответствии с предложением ORDER BY, т.е.
                    <code>RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW</code>. </para>
            <para>Предложение ROWS ограничивает строки внутри секции путем указания фиксированного
                числа строк, предшествующих или следующих после текущей строки. В качестве
                альтернативы предложение RANGE логически ограничивает строки внутри секции путем
                указания диапазона значений в отношении к значению текущей строки. Предшествующие и
                последующие строки определяются на основании порядка, заданного в предложении ORDER
                BY. </para>
            <para>Если рамка окна задаётся с помощью предложения RANGE, то предложение ORDER BY
                может содержать только одно выражение и выражение должно быть числового типа, DATE,
                TIME или TIMESTAMP. Для границ <code><replaceable>&lt;expr&gt;</replaceable>
                    PRECEDING</code> и <code><replaceable>&lt;expr&gt;</replaceable>
                    FOLLOWING</code> выражения <code><replaceable>&lt;expr&gt;</replaceable></code>
                добавляются и вычитаются к выражению указанному в ORDER BY, таким образом получаются
                границы значений для рамки. Затем все строки (внутри секции) между границам
                считаются частью результирующей рамки окна.</para>
            <para>Если рамка окна задаётся с помощью предложения ROWS, то на предложение ORDER BY не
                накладывается ограничений на количество и типы выражений. В этом случае фраза
                    <replaceable>&lt;expr&gt;</replaceable> PRECEDING указывает количество строк
                предшествующее текущей строке, соответственно фраза
                    <replaceable>&lt;expr&gt;</replaceable> FOLLOWING указывает количество строк
                после текущей строки.</para>
            <para>Фраза <code>UNBOUNDED PRECEDING</code> указывает, что окно начинается с первой
                строки секции. <code>UNBOUNDED PRECEDING</code> может быть указано только как
                начальная точка окна. </para>
            <para>Фраза <code>UNBOUNDED FOLLOWING</code> указывает, что окно заканчивается последней
                строкой секции. <code>UNBOUNDED FOLLOWING</code> может быть указано только как
                конечная точка окна. </para>
            <para><code>UNBOUNDED PRECEDING</code> и <code>UNBOUNDED FOLLOWING</code> работают
                одинаково для предложений ROWS и RANGE.</para>
            <para>Фраза CURRENT ROW указывает, что окно начинается или заканчивается на текущей
                строке при использовании совместно с предложением ROWS или что окно заканчивается на
                текущем значении при использовании с предложением RANGE. CURRENT ROW может быть
                задана и как начальная, и как конечная точка.</para>
            <para>Предложение BETWEEN используется совместно с ключевым словом ROWS или RANGE для
                указания нижней (начальной) или верхней (конечной) граничной точки окна. Верхняя
                граница не может быть меньше нижней границы.</para>
            <note>
                <para>Если указана только начальная точка окна, то конечной точкой окна считается
                    CURRENT ROW. Например, если указано <code>ROWS 1 PRECEDING</code>, то это
                    аналогично указанию <code>ROWS BETWEEN 1 PRECEDING AND CURRENT ROW</code>.
                </para>
            </note>
            <para>Некоторые оконные функции игнорируют выражение рамки. Функции ROW_NUMBER, LAG и
                LEAD всегда работают как <code>ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT
                    ROW</code>. В то время как DENSE_RANK, RANK, PERCENT_RANK и CUME_DIST работают
                как <code>RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW</code>.</para>
            <para>Функции FIRST_VALUE, LAST_VALUE и NTH_VALUE работают на рамке, но RANGE работает
                идентично ROWS.</para>
            <para>Таким образом, предложения ROWS и RANGE позволяют довольно гибко настроить размер
                плавающего окна. Чаще всего встречаются следующие варианты: <itemizedlist>
                    <listitem>
                        <para>Нижняя граница фиксирована (совпадает с первой строкой упорядоченной
                            группы), а верхняя граница ползёт (совпадает с текущей строкой
                            упорядоченной группы). В этом случае получаем нарастающий итог
                            (кумулятивный агрегат). В этом случае размер окна меняется (расширяется
                            в одну сторону) и само окно движется за счёт расширения. Возможна и
                            обратная ситуация, когда нижняя граница ползёт, а верхняя зафиксирована.
                            В этом случае окно будет сужаться.</para>
                    </listitem>
                    <listitem>
                        <para>Если верхняя и нижняя границы фиксированы относительно текущей строки,
                            например 1 строка до текущей и 2 после текущей, то получаем скользящий
                            агрегат. В этом случае размер окна фиксирован, а само окно
                            скользит.</para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="internalfunc-window-framing-range">
                <title>Окна диапазона</title>
                <para>Окна диапазона объединяют строки в соответствии с заданным порядком. Например,
                    если рамка окна задана выражением RANGE 5 PRECEDING, то будет сгенерировано
                    перемещающееся окно, включающее предыдущие строки группы, значение которых
                    меньше текущего не более чем на 5.</para>
                <formalpara>
                    <title>Пример:</title>

                    <para>
                        <example>
                            <title>Использование окон диапазона</title>
                            <para><programlisting language="sql">
SELECT
    id,
    salary,
    SUM(salary) OVER() AS s1,
    SUM(salary) OVER(ORDER BY salary) AS s2,
    SUM(salary) OVER(ORDER BY salary 
                     RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS s3,
    SUM(salary) OVER(ORDER BY salary 
                     RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS s4,
    SUM(salary) OVER(ORDER BY salary 
                     RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS s5,
    SUM(salary) OVER(ORDER BY salary 
                     RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) AS s6,
    SUM(salary) OVER(ORDER BY salary 
                     RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS s7,
    SUM(salary) OVER(ORDER BY salary RANGE 1 PRECEDING) AS s8
FROM
    employee  
                </programlisting>
                                <screen>                    
ID  SALARY     S1      S2      S3      S4      S5      S6      S7      S8
-------------------------------------------------------------------------
3     8.00  49.00    8.00    8.00   49.00   49.00   17.00   17.00    8.00
4     9.00  49.00   17.00   17.00   41.00   49.00   29.00   37.00   17.00
1    10.00  49.00   37.00   37.00   32.00   49.00   20.00   29.00   29.00
5    10.00  49.00   37.00   37.00   32.00   49.00   20.00   29.00   29.00
2    12.00  49.00   49.00   49.00   12.00   49.00   12.00   12.00   12.00     
</screen>
                            </para>
                        </example>
                    </para>
                </formalpara>
                <para>Для того чтобы понять, какие значения будут входить в диапазон, можно
                    использовать функции <link linkend="internalfunc-window-nav-first_value"
                        >FIRST_VALUE</link> и <link linkend="internalfunc-window-nav-last_value"
                        >LAST_VALUE</link>. Это помогает увидеть диапазоны окна и проверить,
                    корректно ли установлены параметры.</para>
            </section>
            <section xml:id="internalfunc-window-framing-rows">
                <title>Окна строк</title>
                <para>Окна срок задаются в физических единицах, строках. Например, если рамка окна
                    задана выражением ROWS 5 PRECEDING, то окно будет включать в себя до 6 строк:
                    текущую и пять предыдущих (порядок определяется конструкцией ORDER BY).</para>
                <formalpara>
                    <title>Пример:</title>

                    <para>
                        <example>
                            <title>Использование окон диапазона</title>
                            <para><programlisting language="sql">
SELECT
    id,
    salary,
    SUM(salary) OVER() AS s1,
    SUM(salary) OVER(ORDER BY salary) AS s2,
    SUM(salary) OVER(ORDER BY salary 
                     ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS s3,
    SUM(salary) OVER(ORDER BY salary 
                     ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS s4,
    SUM(salary) OVER(ORDER BY salary 
                     ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS s5,
    SUM(salary) OVER(ORDER BY salary 
                     ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS s6,
    SUM(salary) OVER(ORDER BY salary 
                     ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS s7,
    SUM(salary) OVER(ORDER BY salary ROWS 1 PRECEDING) AS s8
FROM
    employee  
                </programlisting>
                                <screen>                    
ID SALARY      S1      S2      S3      S4      S5      S6      S7      S8
-------------------------------------------------------------------------
3    8.00   49.00    8.00    8.00   49.00   49.00   17.00   17.00    8.00
4    9.00   49.00   17.00   17.00   41.00   49.00   19.00   27.00   17.00
1   10.00   49.00   37.00   27.00   32.00   49.00   20.00   29.00   19.00
5   10.00   49.00   37.00   37.00   22.00   49.00   22.00   32.00   20.00
2   12.00   49.00   49.00   49.00   12.00   49.00   12.00   22.00   22.00   
</screen>
                            </para>
                        </example>
                    </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-window-naming">
            <title>Именованные окна</title>
            <para>Для того чтобы не писать каждый раз сложные выражения для задания окна, имя окна
                можно задать в предложении WINDOW. Имя окна может быть использовано в предложении
                OVER для ссылки на определение окна, кроме того оно может быть использовано в
                качестве базового окна для другого именованного или встроенного (в предложении OVER)
                окна. Окна с рамкой (с предложениями RANGE и ROWS) не могут быть использованы в
                качестве базового окна (но могут быть использованы в предложении OVER
                    <replaceable>&lt;window name&gt;</replaceable>). Окно, которое использует ссылку
                на базовое окно, не может иметь предложение PARTITION BY и не может переопределять
                сортировку с помощью предложения ORDER BY.</para>
            <formalpara>
                <title>Пример:</title>

                <para>
                    <example>
                        <title>Использование именованных окон</title>
                        <para>
                            <programlisting language="sql">
SELECT
    id,
    department,
    salary,
    count(*) OVER w1,
    first_value(salary) OVER w2,
    last_value(salary) OVER w2,
    sum(salary) over (w2 ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS s
FROM employee
WINDOW w1 AS (PARTITION BY department),
       w2 AS (w1 ORDER BY salary)
ORDER BY department, salary;
                                </programlisting>
                        </para>
                    </example>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-window-rank">
            <info>
                <title>Ранжирующие функции</title>
            </info>
            <para>Ранжирующие функции вычисляют порядковый номер ранга внутри секции окна. </para>
            <para>Эти функции могут применяться с использованием секционирования и сортировки и без
                них. Однако их использование без сортировки почти никогда не имеет смысла.</para>
            <para>Функции ранжирования могут быть использованы для создания различных типов
                инкрементных счётчиков. Рассмотрим SUM(1) OVER (ORDER BY SALARY) в качестве примера
                того, что они могут делать, каждая из них различным образом. Ниже приведён пример
                запроса, который позволяет сравнить их поведение по сравнению с SUM.</para>
            <para>Пример:
                <programlisting language="sql">
SELECT
  id,
  salary,
  DENSE_RANK() OVER (ORDER BY salary),
  RANK() OVER (ORDER BY salary),
  PERCENT_RANK() OVER(ORDER BY salary),
  CUME_DIST() OVER(ORDER BY salary),
  NTILE(3) OVER(ORDER BY salary),
  ROW_NUMBER() OVER (ORDER BY salary),
  SUM(1) OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
            </para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary dense_rank rank      percent_rank         cume_dist ntile row_number sum
-- ------ ---------- ---- ----------------- ----------------- ----- ---------- ---
3    8.00          1    1 0.000000000000000 0.200000000000000     1          1   1
4    9.00          2    2 0.250000000000000 0.400000000000000     1          2   2
1   10.00          3    3 0.500000000000000 0.800000000000000     2          3   4
5   10.00          3    3 0.500000000000000 0.800000000000000     2          4   4
2   12.00          4    5 1.000000000000000 1.000000000000000     3          5   5
                </screen>
                </para>
            </formalpara>
            <section xml:id="internalfunc-window-rank-dense_rank">
                <info>
                    <title>DENSE_RANK</title>
                    <keywordset>
                        <keyword>DENSE_RANK</keyword>
                    </keywordset>
                </info>

                <indexterm><primary>DENSE_RANK</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DENSE_RANK() OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает ранг строк в секции результирующего набора без промежутков в
                    ранжировании. Строки с одинаковыми значениями
                        <replaceable>&lt;order_exp&gt;</replaceable> получают одинаковый ранг в
                    пределах группы <replaceable>&lt;partition_exp&gt;</replaceable>, если она
                    указана. Ранг строки равен количеству различных значений рангов в секции,
                    предшествующих текущей строке, увеличенному на единицу.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  DENSE_RANK() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary dense_rank 
-- ------ ---------- 
3    8.00          1    
4    9.00          2    
1   10.00          3    
5   10.00          3    
2   12.00          4                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-row_number">ROW_NUMBER</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-rank">
                <info>
                    <title>RANK</title>
                    <keywordset>
                        <keyword>RANK</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RANK</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RANK() OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает ранг каждой строки в секции результирующего набора. Строки с
                    одинаковыми значениями <replaceable>&lt;order_exp&gt;</replaceable> получают
                    одинаковый ранг в пределах группы
                        <replaceable>&lt;partition_exp&gt;</replaceable>, если она указана. Ранг
                    строки вычисляется как единица плюс количество рангов, находящихся до этой
                    строки.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  RANK() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary rank 
-- ------ ------ 
3    8.00      1    
4    9.00      2    
1   10.00      3    
5   10.00      3    
2   12.00      5                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-dense_rank">DENSE_RANK</link>, <link
                            linkend="internalfunc-window-rank-row_number">ROW_NUMBER</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-percent_rank">
                <info>
                    <title>PERCENT_RANK</title>
                    <keywordset>
                        <keyword>PERCENT_RANK</keyword>
                    </keywordset>
                </info>

                <indexterm><primary>PERCENT_RANK</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
PERCENT_RANK() OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION</para>
                </formalpara>

                <para>Возвращает относительный ранг текущей строки в группе строк. Функция
                    PERCENT_RANK используется для вычисления относительного положения значения в
                    секции или результирующем наборе запроса. Диапазон значений, возвращаемый
                    функцией PERCENT_RANK, больше 0 и меньше или равен 1. В первой строке любого
                    набора PERCENT_RANK равна 0. Значения NULL по умолчанию включаются и
                    рассматриваются как наименьшие возможные значения. </para>
                <note>
                    <para>Функция PERNCENT RANK вычисляется как
                        <programlisting>
(RANK-1)/(<replaceable>total rows</replaceable> - 1)
                            </programlisting>,
                        где <replaceable>total rows</replaceable> общее количество строк в
                        секции.</para>
                </note>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  PERCENT_RANK() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary percent_rank 
-- ------ ------------ 
3    8.00          0.0    
4    9.00         0.25    
1   10.00          0.5    
5   10.00          0.5    
2   12.00          1.0                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-cume_dist">CUME_DIST</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-cume_dist">
                <info>
                    <title>CUME_DIST</title>
                    <keywordset>
                        <keyword>CUME_DIST</keyword>
                    </keywordset>
                </info>

                <indexterm><primary>CUME_DIST</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
CUME_DIST() OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>DOUBLE PRECISION</para>
                </formalpara>

                <para>Функция CUME_DIST рассчитывает кумулятивное распределение значения в наборе
                    данных. Возвращаемое значение находится в диапазоне от 0 до 1. Функция CUME_DIST
                    рассчитывается как (число строк, предшествующих или равных текущей) / (общее
                    число строк). Для равных значений всегда вычисляется одно и то же значение
                    накопительного распределения. Значения NULL по умолчанию включаются и
                    рассматриваются как наименьшие возможные значения. </para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  CUME_DIST() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary    cume_dist 
-- ------ ------------ 
3    8.00          0.2    
4    9.00          0.4    
1   10.00          0.8    
5   10.00          0.8    
2   12.00          1.0                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-percent_rank">PERCENT_RANK</link>.
                    </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-ntile">
                <info>
                    <title>NTILE</title>
                    <keywordset>
                        <keyword>NTILE</keyword>
                    </keywordset>
                </info>

                <indexterm><primary>NTILE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
NTILE(<replaceable>&lt;expr&gt;</replaceable>) OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора NTILE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение целочисленного типа. Указывает количество
                                            групп, на которые необходимо разделить каждую секцию.
                                        </para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Функция NTILE распределяет строки упорядоченной секции в заданное количество
                    групп так, чтобы размеры групп были максимально близки. Группы нумеруются,
                    начиная с единицы. Для каждой строки функция NTILE возвращает номер группы,
                    которой принадлежит строка.</para>
                <para>Если количество строк в секции не делится на
                        <replaceable>&lt;expr&gt;</replaceable>, то формируются группы двух
                    размеров, отличающихся на единицу. Группы большего размера следуют перед
                    группами меньшего размера в порядке, заданном в предложении OVER.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  NTILE(3) OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary        ntile 
-- ------ ------------ 
3    8.00            1    
4    9.00            1    
1   10.00            2    
5   10.00            2    
2   12.00            3                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-row_number">
                <info>
                    <title>ROW_NUMBER</title>
                    <keywordset>
                        <keyword>ROW_NUMBER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ROW_NUMBER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ROW_NUMBER() OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}       
                                 </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает последовательный номер строки в секции результирующего набора, где
                    1 соответствует первой строке в каждой из секций.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  ROW_NUMBER() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary row_number 
-- ------ ---------- 
3    8.00          1    
4    9.00          2    
1   10.00          3    
5   10.00          4    
2   12.00          5                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-dense_rank">DENSE_RANK</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-window-nav">
            <info>
                <title>Навигационные функции</title>
            </info>
            <para>Навигационные функции получают простые (не агрегированные) значения выражения из
                другой строки запроса в той же секции.</para>
            <important>
                <para>Функции FIRST_VALUE, LAST_VALUE и NTH_VALUE оперируют на рамке окна (кадрах
                    окна). По умолчанию, если задано предложение ORDER BY, то рамка состоит из всех
                    строк, от начала разбиения до текущей строки, плюс любые следующие строки,
                    которые равны текущей строке в соответствии с предложением ORDER BY,
                    т.е.<programlisting>
RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW                        
                    </programlisting>
                </para>
                <para>Из-за этого результаты функций NTH_VALUE и в особенности LAST_VALUE могут
                    показаться странными. Для устранения этого "недостатка" вы можете задать другую
                    рамку окна, например:
                    <programlisting>
ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING                        
                    </programlisting>
                </para>
            </important>
            <example>
                <title>Навигационные функции</title>
                <para><programlisting language="sql">
SELECT
  id,
  salary,
  FIRST_VALUE(salary) OVER (ORDER BY salary),
  LAST_VALUE(salary) OVER (ORDER BY salary),
  NTH_VALUE(salary, 2) OVER (ORDER BY salary),
  LAG(salary) OVER (ORDER BY salary),
  LEAD(salary) OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                    
                </programlisting></para>
            </example>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary first_value last_value nth_value    lag   lead
-- ------ ----------- ---------- --------- ------ ------
3    8.00        8.00       8.00    &lt;null&gt; &lt;null&gt;   9.00
4    9.00        8.00       9.00      9.00   8.00  10.00
1   10.00        8.00      10.00      9.00   9.00  10.00
5   10.00        8.00      10.00      9.00  10.00  12.00
2   12.00        8.00      12.00      9.00  10.00 &lt;null&gt;                
                </screen>
                </para>
            </formalpara>
            <para>Вариант с изменённой рамкой окна для функций LAST_VALUE и NTH_VALUE
                <programlisting language="sql">
SELECT
  id,
  salary,
  FIRST_VALUE(salary) OVER (ORDER BY salary),
  LAST_VALUE(salary) OVER w,
  NTH_VALUE(salary, 2) OVER w,
  LAG(salary) OVER (ORDER BY salary),
  LEAD(salary) OVER (ORDER BY salary)
FROM employee
WINDOW 
  w AS (ORDER BY salary ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
ORDER BY salary;                    
                </programlisting>
            </para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary first_value last_value nth_value    lag   lead
-- ------ ----------- ---------- --------- ------ ------
3    8.00        8.00      12.00      9.00 &lt;null&gt;   9.00
4    9.00        8.00      12.00      9.00   8.00  10.00
1   10.00        8.00      12.00      9.00   9.00  10.00
5   10.00        8.00      12.00      9.00  10.00  12.00
2   12.00        8.00      12.00      9.00  10.00 &lt;null&gt;                
                </screen>
                </para>
            </formalpara>
            <section xml:id="internalfunc-window-nav-first_value">
                <info>
                    <title>FIRST_VALUE</title>
                    <keywordset>
                        <keyword>FIRST_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>FIRST_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
FIRST_VALUE(<replaceable>&lt;expr&gt;</replaceable>) OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора FIRST_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Возвращает первое значение из упорядоченного набора значений рамки
                    окна.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-last_value">LAST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-nth_value">NTH_VALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-lag">
                <info>
                    <title>LAG</title>
                    <keywordset>
                        <keyword>LAG</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LAG</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LAG(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable> [, <replaceable>&lt;default&gt;</replaceable>]]) 
  OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                 
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LAG</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Количество строк до строки перед текущей строкой, из
                                            которой необходимо получить значение. Если значение
                                            аргумента не указано, то по умолчанию принимается 1.
                                                <replaceable>offset</replaceable> может быть
                                            столбцом, вложенным запросом или другим выражением, с
                                            помощью которого вычисляется целая положительная
                                            величина, или другим типом, который может быть неявно
                                            преобразован в bigint. <replaceable>offset</replaceable>
                                            не может быть отрицательным значением или аналитической
                                            функцией.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>default</replaceable></entry>
                                    <entry>
                                        <para>Значение по умолчанию, которое возвращается, в случае
                                            если смещение (<replaceable>offset</replaceable>)
                                            указывает за пределы секции. По умолчанию равно
                                            NULL</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция LAG обеспечивает доступ к строке с заданным физическим смещением
                        (<replaceable>offset</replaceable>) перед началом текущей строки. </para>
                <para>Если смещение (<replaceable>offset</replaceable>) указывает за пределы секции,
                    то будет возвращено значение <replaceable>default</replaceable>, которое по
                    умолчанию равно NULL.</para>

                <bridgehead renderas="sect5">Примеры:</bridgehead>

                <example>
                    <title>Использование функции LAG</title>
                    <para>Предположим у вас есть таблица rate, которая хранит курс валюты на каждый
                        день. Необходимо проследить динамику изменения курса за последние пять
                        дней.<programlisting language="sql">
SELECT
  bydate,
  cost,
  cost - LAG(cost) OVER(ORDER BY bydate) AS change,
  100 * (cost - LAG(cost) OVER(ORDER BY bydate)) /
    LAG(cost) OVER(ORDER BY bydate) AS percent_change
FROM rate
WHERE bydate BETWEEN DATEADD(-4 DAY TO current_date)
  AND current_date
ORDER BY bydate
                </programlisting></para>
                </example>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
bydate        cost    change   percent_change
----------   -----   -------   --------------
27.10.2014   31.00    &lt;null&gt;           &lt;null&gt;
28.10.2014   31.53      0.53           1.7096
29.10.2014   31.40     -0.13          -0.4123
30.10.2014   31.67      0.27           0.8598
31.10.2014   32.00      0.33           1.0419              
                </screen>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-lead">LEAD</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-last_value">
                <info>
                    <title>LAST_VALUE</title>
                    <keywordset>
                        <keyword>LAST_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LAST_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LAST_VALUE(<replaceable>&lt;expr&gt;</replaceable>) OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LAST_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Возвращает последнее значение из упорядоченного набора значений рамки
                    окна.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-first_value">FIRST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-nth_value">NTH_VALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-lead">
                <info>
                    <title>LEAD</title>
                    <keywordset>
                        <keyword>LEAD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LEAD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LEAD(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable> [, <replaceable>&lt;default&gt;</replaceable>]])
  OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}                  
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LEAD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Количество строк после текущей строки до строки, из
                                            которой необходимо получить значение. Если значение
                                            аргумента не указано, то по умолчанию принимается 1.
                                                 <replaceable>offset</replaceable> может быть
                                            столбцом, вложенным запросом или другим выражением, с
                                            помощью которого вычисляется целая положительная
                                            величина, или другим типом, который может быть неявно
                                            преобразован в bigint.
                                            <replaceable>offset</replaceable> не может быть
                                            отрицательным значением или аналитической
                                            функцией.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>default</replaceable></entry>
                                    <entry>
                                        <para>Значение по умолчанию, которое возвращается, в случае
                                            если смещение (<replaceable>offset</replaceable>)
                                            указывает за пределы секции. По умолчанию равно
                                            NULL.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция LEAD обеспечивает доступ к строке на заданном физическом смещении
                        (<replaceable>offset</replaceable>) после текущей строки. </para>
                <para>Если смещение (<replaceable>offset</replaceable>) указывает за пределы секции,
                    то будет возвращено значение <replaceable>default</replaceable>, которое по
                    умолчанию равно NULL.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-lag">LAG</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-nth_value">
                <info>
                    <title>NTH_VALUE</title>
                    <keywordset>
                        <keyword>NTH_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>NTH_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
NTH_VALUE(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable>]) [FROM FIRST | FROM LAST]
  OVER {<replaceable>&lt;window specification&gt;</replaceable> | <replaceable>&lt;window name&gt;</replaceable>}             
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора NTH_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Номер записи, начиная с первой (опция FROM FIRST) или
                                            последней (опция FROM LAST) записи.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция NTH_VALUE возвращает N-ое значение, начиная с первой (опция FROM
                    FIRST) или последней (опция FROM LAST) записи. По умолчанию используется опция
                    FROM FIRST. Смещение 1 от первой записи будет эквивалентно функции FIRST_VALUE,
                    смещение 1 от последней записи будет эквивалентно функции LAST_VALUE. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-first_value">FIRST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-last_value">LAST_VALUE</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-window-aggarg">
            <info>
                <title>Агрегатные функции внутри оконных</title>
            </info>
            <para>В качестве аргументов оконных функций, а также в предложении OVER разрешено
                использование агрегатных функций (но не оконных). В этом случае сначала вычисляются
                агрегатные функции, а только затем на них накладываются окна оконных функций.</para>
            <note>
                <para>При использовании агрегатных функции в качестве аргументов оконных функций,
                    все столбцы, не используемые в агрегатных функциях должны быть указаны в
                    предложении GROUP BY.</para>
            </note>

            <example>
                <title>Использование агрегатной функции в качестве аргумента оконной</title>
                <para><programlisting language="sql">
SELECT
    code_employee_group,
    AVG(salary) AS avg_salary,
    RANK() OVER(ORDER BY AVG(salary)) AS salary_rank
FROM employee
GROUP BY code_employee_group  
</programlisting></para>
            </example>
        </section>
    </section>
</chapter>
